{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useOverlay = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar useOverlay = function useOverlay() {\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.OverlayContext),\n      setOverlayItem = _react$default$useCon.setOverlayItem,\n      defaultConfig = _react$default$useCon.defaultConfig,\n      setConfig = _react$default$useCon.setConfig;\n\n  var closeOverlay = function closeOverlay() {\n    setOverlayItem(null);\n  };\n\n  var setOverlay = function setOverlay(component, config) {\n    config && setConfig(_objectSpread({}, defaultConfig, {}, config));\n    setOverlayItem(component);\n  };\n\n  return {\n    closeOverlay: closeOverlay,\n    setOverlay: setOverlay\n  };\n};\n\nexports.useOverlay = useOverlay;","map":{"version":3,"sources":["useOverlay.tsx"],"names":["useOverlay","setConfig","React","OverlayContext","closeOverlay","setOverlayItem","setOverlay","config"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;AAEO,IAAMA,UAA4B,GAAG,SAA/BA,UAA+B,GAAM;AAAA,8BAKtBE,MAAAA,WAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CAJ3C,cAI0BD,CALsB;AAAA,MAC1C,cAD0C,yBAC1C,cAD0C;AAAA,MAC1C,aAD0C,yBAC1C,aAD0C;AAAA,MAI9CD,SAJ8C,yBAI9CA,SAJ8C;;AAMhD,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,cAAc,CAAdA,IAAc,CAAdA;AADF,GAAA;;AAUA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAAA,SAAA,EAAA,MAAA,EAAqD;AACtEC,IAAAA,MAAM,IAAIN,SAAS,mBAAC,aAAD,MAAwBM,MAAxB,EAAnBA;AACAF,IAAAA,cAAc,CAAdA,SAAc,CAAdA;AAFF,GAAA;;AAIA,SAAO;AAAED,IAAAA,YAAF,EAAEA,YAAF;AAAgBE,IAAAA,UAAAA,EAAAA;AAAhB,GAAP;AApBK,CAAA","sourcesContent":["import React from 'react';\nimport type { IOverlayContextProps, IuseOverlayProps } from './props';\nimport { OverlayContext } from './Context';\n\nexport const useOverlay: IuseOverlayProps = () => {\n  const {\n    setOverlayItem,\n    defaultConfig,\n    setConfig,\n  }: IOverlayContextProps = React.useContext(OverlayContext);\n  const closeOverlay = () => {\n    setOverlayItem(null);\n  };\n  type configtype = {\n    disableOverlay?: boolean;\n    position?: string;\n    backgroundColor?: string;\n    onClose?: any;\n    closeOnPress?: boolean;\n  };\n  const setOverlay = (component: React.ReactNode, config?: configtype) => {\n    config && setConfig({ ...defaultConfig, ...config });\n    setOverlayItem(component);\n  };\n  return { closeOverlay, setOverlay };\n};\n"]},"metadata":{},"sourceType":"script"}