{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _extends2 = require(\"@babel/runtime/helpers/extends\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _FormControl = require(\"../../composites/FormControl\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar NBSlider = function (_react$default$Compon) {\n  _inherits(NBSlider, _react$default$Compon);\n\n  var _super = _createSuper(NBSlider);\n\n  function NBSlider() {\n    var _this;\n\n    _classCallCheck(this, NBSlider);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      barSize: null,\n      deltaValue: 0,\n      value: _this.props.defaultValue || 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"panResponder\", _reactNative.PanResponder.create({\n      onMoveShouldSetPanResponderCapture: function onMoveShouldSetPanResponderCapture() {\n        return true;\n      },\n      onPanResponderMove: function onPanResponderMove(_event, gestureState) {\n        return !(_this.props.isDisabled || _this.props.isReadOnly) && _this.onMove(gestureState);\n      },\n      onPanResponderRelease: function onPanResponderRelease() {\n        return _this.onEndMove();\n      },\n      onPanResponderTerminate: function onPanResponderTerminate() {}\n    }));\n\n    _defineProperty(_assertThisInitialized(_this), \"onBarLayout\", function (event) {\n      var _event$nativeEvent$la = event.nativeEvent.layout,\n          width = _event$nativeEvent$la.width,\n          height = _event$nativeEvent$la.height;\n      var barSize = _this.props.orientation === 'vertical' ? height : width;\n\n      _this.setState({\n        barSize: barSize\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"capValueWithinRange\", function (value, range) {\n      if (value < range[0]) return range[0];\n      if (value > range[1]) return range[1];\n      return value;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getValueFromStartOffset\", function (offset, barSize, rangeMin, rangeMax) {\n      if (barSize === null) return 0;\n      return (rangeMax - rangeMin) * offset / barSize;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getOffsetFromValue\", function (value, rangeMin, rangeMax, barSize) {\n      if (barSize === null) return 0;\n      var valueOffset = value - rangeMin;\n      var totalRange = rangeMax - rangeMin;\n      var percentage = valueOffset / totalRange;\n      return barSize * percentage;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onAccessibilityAction\", function (event) {\n      var _this$props$max, _this$props$min, _this$props$accessibi, _this$props$accessibi2;\n\n      var max = (_this$props$max = _this.props.max) !== null && _this$props$max !== void 0 ? _this$props$max : 100;\n      var min = (_this$props$min = _this.props.min) !== null && _this$props$min !== void 0 ? _this$props$min : 0;\n      var incrementStep = (_this$props$accessibi = _this.props.accessibilityIncrementSteps) !== null && _this$props$accessibi !== void 0 ? _this$props$accessibi : max / 10;\n      var decrementStep = (_this$props$accessibi2 = _this.props.accessibilityDecrementSteps) !== null && _this$props$accessibi2 !== void 0 ? _this$props$accessibi2 : max / 10;\n\n      switch (event.nativeEvent.actionName) {\n        case 'increment':\n          _this.setState({\n            value: Math.min(_this.state.value + incrementStep, max)\n          });\n\n          break;\n\n        case 'decrement':\n          _this.setState({\n            value: Math.max(_this.state.value - decrementStep, min)\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(NBSlider, [{\n    key: \"onMove\",\n    value: function onMove(gestureState) {\n      var barSize = this.state.barSize;\n      var _this$props = this.props,\n          _this$props$min3 = _this$props.min,\n          min = _this$props$min3 === void 0 ? 0 : _this$props$min3,\n          _this$props$max3 = _this$props.max,\n          max = _this$props$max3 === void 0 ? 100 : _this$props$max3;\n      var newDeltaValue = this.getValueFromStartOffset(this.props.orientation === 'vertical' ? -gestureState.dy : gestureState.dx, barSize, this.props.min || 0, this.props.max || 100);\n      this.props.onChange && this.props.onChange(this.capValueWithinRange(this.state.value + newDeltaValue, [min, max]));\n      this.setState({\n        deltaValue: newDeltaValue\n      });\n    }\n  }, {\n    key: \"onEndMove\",\n    value: function onEndMove() {\n      var _this$state = this.state,\n          value = _this$state.value,\n          deltaValue = _this$state.deltaValue;\n      var _this$props2 = this.props,\n          _this$props2$min = _this$props2.min,\n          min = _this$props2$min === void 0 ? 0 : _this$props2$min,\n          _this$props2$max = _this$props2.max,\n          max = _this$props2$max === void 0 ? 100 : _this$props2$max;\n      var cappedVal = this.capValueWithinRange(value + deltaValue, [min, max]);\n      this.props.onChangeEnd && this.props.onChangeEnd(cappedVal);\n      this.setState({\n        value: cappedVal,\n        deltaValue: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$min2, _this$props$max2, _this$props$accessibi3;\n\n      var _this$state2 = this.state,\n          value = _this$state2.value,\n          deltaValue = _this$state2.deltaValue,\n          barSize = _this$state2.barSize;\n      var min = (_this$props$min2 = this.props.min) !== null && _this$props$min2 !== void 0 ? _this$props$min2 : 0;\n      var max = (_this$props$max2 = this.props.max) !== null && _this$props$max2 !== void 0 ? _this$props$max2 : 100;\n      var cappedValue = this.capValueWithinRange(value + deltaValue, [min, max]);\n      var sliderOffset = this.getOffsetFromValue(cappedValue, min, max, barSize);\n      return _react[\"default\"].createElement(_reactNative.View, {\n        accessible: true,\n        accessibilityRole: \"adjustable\",\n        accessibilityLabel: (_this$props$accessibi3 = this.props.accessibilityLabel) !== null && _this$props$accessibi3 !== void 0 ? _this$props$accessibi3 : 'Slider',\n        accessibilityValue: {\n          min: min,\n          max: max,\n          now: value\n        },\n        accessibilityHint: this.props.accessibilityHint,\n        accessibilityActions: [{\n          name: 'increment',\n          label: 'Increment'\n        }, {\n          name: 'decrement',\n          label: 'Decrement'\n        }],\n        onAccessibilityAction: this.onAccessibilityAction\n      }, _react[\"default\"].createElement(_Context.SliderContext.Provider, {\n        value: {\n          sliderOffset: sliderOffset,\n          trackColor: this.props.trackColor,\n          colorScheme: this.props.activeColor,\n          barSize: this.state.barSize,\n          panResponder: this.panResponder,\n          isReversed: this.props.isReversed,\n          thumbSize: this.props.thumbSize,\n          sliderSize: this.props.sliderSize,\n          orientation: this.props.orientation,\n          value: this.state.value\n        }\n      }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n        position: \"relative\",\n        display: \"flex\",\n        my: 3,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: 3,\n        minWidth: \"100%\"\n      }, this.props, {\n        onLayout: this.onBarLayout\n      }), this.state.barSize && this.props.children)));\n    }\n  }]);\n\n  return NBSlider;\n}(_react[\"default\"].Component);\n\n_defineProperty(NBSlider, \"contextType\", _Context.SliderContext);\n\nvar Slider = function Slider(_ref) {\n  var props = _extends2({}, _ref);\n\n  var formControlContext = _react[\"default\"].useContext(_FormControl.FormControlContext);\n\n  var newProps = (0, _hooks.usePropsConfig)('Slider', _objectSpread({}, formControlContext, {}, props));\n  return _react[\"default\"].createElement(NBSlider, newProps);\n};\n\nvar _default = Slider;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["Slider.tsx"],"names":["NBSlider","React","SliderContext","barSize","deltaValue","value","onMoveShouldSetPanResponderCapture","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","min","max","newDeltaValue","gestureState","cappedVal","event","height","range","rangeMax","valueOffset","totalRange","percentage","incrementStep","decrementStep","Math","cappedValue","sliderOffset","now","name","label","onAccessibilityAction","trackColor","colorScheme","panResponder","isReversed","thumbSize","sliderSize","orientation","onBarLayout","Slider","props","formControlContext","FormControlContext","newProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { PanResponder, View } from 'react-native';\nimport {\n  FormControlContext,\n  IFormControlContext,\n} from '../../composites/FormControl';\nimport Box from '../Box';\nimport { usePropsConfig } from '../../../hooks';\nimport type { ISliderProps } from './props';\nimport { SliderContext } from './Context';\n\ntype StateType = {\n  barSize: number | null;\n  deltaValue: number;\n  value: number;\n};\n\nclass NBSlider extends React.Component<\n  ISliderProps & {\n    thumbSize?: number;\n    sliderSize?: number;\n    activeColor?: string;\n  },\n  StateType\n> {\n  static contextType = SliderContext;\n  state = {\n    barSize: null,\n    deltaValue: 0,\n    value: this.props.defaultValue || 0,\n  };\n\n  panResponder = PanResponder.create({\n    onMoveShouldSetPanResponderCapture: () => true,\n    onPanResponderMove: (_event, gestureState) =>\n      !(this.props.isDisabled || this.props.isReadOnly) &&\n      this.onMove(gestureState),\n    onPanResponderRelease: () => this.onEndMove(),\n    onPanResponderTerminate: () => {},\n  });\n\n  onMove(gestureState: any) {\n    const { barSize } = this.state;\n    const { min = 0, max = 100 } = this.props;\n    const newDeltaValue = this.getValueFromStartOffset(\n      this.props.orientation === 'vertical'\n        ? -gestureState.dy\n        : gestureState.dx,\n      barSize,\n      this.props.min || 0,\n      this.props.max || 100\n    );\n    this.props.onChange &&\n      this.props.onChange(\n        this.capValueWithinRange(this.state.value + newDeltaValue, [min, max])\n      );\n    this.setState({\n      deltaValue: newDeltaValue,\n    });\n  }\n  onEndMove() {\n    const { value, deltaValue } = this.state;\n    const { min = 0, max = 100 } = this.props;\n    const cappedVal = this.capValueWithinRange(value + deltaValue, [min, max]);\n    this.props.onChangeEnd && this.props.onChangeEnd(cappedVal);\n    this.setState({ value: cappedVal, deltaValue: 0 });\n  }\n\n  onBarLayout = (event: any) => {\n    const { width, height } = event.nativeEvent.layout;\n    const barSize = this.props.orientation === 'vertical' ? height : width;\n    this.setState({ barSize });\n  };\n\n  capValueWithinRange = (value: number, range: number[]) => {\n    if (value < range[0]) return range[0];\n    if (value > range[1]) return range[1];\n    return value;\n  };\n\n  getValueFromStartOffset = (\n    offset: number,\n    barSize: number | null,\n    rangeMin: number,\n    rangeMax: number\n  ) => {\n    if (barSize === null) return 0;\n    return ((rangeMax - rangeMin) * offset) / barSize;\n  };\n\n  getOffsetFromValue = (\n    value: number,\n    rangeMin: number,\n    rangeMax: number,\n    barSize: number | null\n  ) => {\n    if (barSize === null) return 0;\n    const valueOffset = value - rangeMin;\n    const totalRange = rangeMax - rangeMin;\n    const percentage = valueOffset / totalRange;\n    return barSize * percentage;\n  };\n\n  onAccessibilityAction = (event: any) => {\n    const max = this.props.max ?? 100;\n    const min = this.props.min ?? 0;\n\n    const incrementStep = this.props.accessibilityIncrementSteps ?? max / 10;\n    const decrementStep = this.props.accessibilityDecrementSteps ?? max / 10;\n\n    switch (event.nativeEvent.actionName) {\n      case 'increment':\n        this.setState({\n          value: Math.min(this.state.value + incrementStep, max),\n        });\n        break;\n      case 'decrement':\n        this.setState({\n          value: Math.max(this.state.value - decrementStep, min),\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  render() {\n    const { value, deltaValue, barSize } = this.state;\n    const min = this.props.min ?? 0;\n    const max = this.props.max ?? 100;\n    const cappedValue = this.capValueWithinRange(value + deltaValue, [\n      min,\n      max,\n    ]);\n\n    const sliderOffset = this.getOffsetFromValue(\n      cappedValue,\n      min,\n      max,\n      barSize\n    );\n\n    return (\n      <View\n        accessible\n        accessibilityRole=\"adjustable\"\n        accessibilityLabel={this.props.accessibilityLabel ?? 'Slider'}\n        accessibilityValue={{\n          min,\n          max,\n          now: value,\n        }}\n        accessibilityHint={this.props.accessibilityHint}\n        accessibilityActions={[\n          {\n            name: 'increment',\n            label: 'Increment',\n          },\n          {\n            name: 'decrement',\n            label: 'Decrement',\n          },\n        ]}\n        onAccessibilityAction={this.onAccessibilityAction}\n      >\n        <SliderContext.Provider\n          value={{\n            sliderOffset,\n            trackColor: this.props.trackColor,\n            colorScheme: this.props.activeColor,\n            barSize: this.state.barSize,\n            panResponder: this.panResponder,\n            isReversed: this.props.isReversed,\n            thumbSize: this.props.thumbSize,\n            sliderSize: this.props.sliderSize,\n            orientation: this.props.orientation,\n            value: this.state.value,\n          }}\n        >\n          <Box\n            position=\"relative\"\n            display=\"flex\"\n            my={3}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            minHeight={3}\n            minWidth=\"100%\"\n            {...this.props}\n            onLayout={this.onBarLayout}\n          >\n            {this.state.barSize && this.props.children}\n          </Box>\n        </SliderContext.Provider>\n      </View>\n    );\n  }\n}\n\nconst Slider = ({ ...props }: ISliderProps) => {\n  const formControlContext: IFormControlContext = React.useContext(\n    FormControlContext\n  );\n  const newProps = usePropsConfig('Slider', {\n    ...formControlContext,\n    ...props,\n  });\n\n  return <NBSlider {...newProps} />;\n};\n\nexport default Slider;\n"]},"metadata":{},"sourceType":"script"}