{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.FormControlContext = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar FormControlContext = _react[\"default\"].createContext({});\n\nexports.FormControlContext = FormControlContext;\n\nvar FormControl = function FormControl(_ref) {\n  var children = _ref.children,\n      isInvalid = _ref.isInvalid,\n      isRequired = _ref.isRequired,\n      isDisabled = _ref.isDisabled,\n      isReadOnly = _ref.isReadOnly,\n      props = _objectWithoutProperties(_ref, [\"children\", \"isInvalid\", \"isRequired\", \"isDisabled\", \"isReadOnly\"]);\n\n  return _react[\"default\"].createElement(FormControlContext.Provider, {\n    value: {\n      isInvalid: isInvalid,\n      isRequired: isRequired,\n      isDisabled: isDisabled,\n      isReadOnly: isReadOnly\n    }\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    width: \"100%\"\n  }, props), children));\n};\n\nvar _default = FormControl;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["FormControl.tsx"],"names":["FormControlContext","React","FormControl","props","isInvalid","isRequired","isDisabled","isReadOnly"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,kBAAkB,GAAGC,MAAAA,WAAAA,CAAAA,aAAAA,CAA3B,EAA2BA,CAA3B;;;;AAEP,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAOK;AAAA,MAPJ,QAOI,QAPJ,QAOI;AAAA,MAPJ,SAOI,QAPJ,SAOI;AAAA,MAPJ,UAOI,QAPJ,UAOI;AAAA,MAPJ,UAOI,QAPJ,UAOI;AAAA,MAPJ,UAOI,QAPJ,UAOI;AAAA,MADpBC,KACoB;;AACvB,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,kBAAD,CAAA,QAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,SADK,EACLA,SADK;AAELC,MAAAA,UAFK,EAELA,UAFK;AAGLC,MAAAA,UAHK,EAGLA,UAHK;AAILC,MAAAA,UAAAA,EAAAA;AAJK;AADT,GAAA,EAQE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AAAK,IAAA,KAAK,EAAC;AAAX,GAAA,EAAA,KAAA,CAAA,EATJ,QASI,CARF,CADF;AARF,CAAA;;eAwBeL,W","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IFormControlProps } from './props';\n\nexport const FormControlContext = React.createContext({});\n\nconst FormControl = ({\n  children,\n  isInvalid,\n  isRequired,\n  isDisabled,\n  isReadOnly,\n  ...props\n}: IFormControlProps) => {\n  return (\n    <FormControlContext.Provider\n      value={{\n        isInvalid,\n        isRequired,\n        isDisabled,\n        isReadOnly,\n      }}\n    >\n      <Box width=\"100%\" {...props}>\n        {children}\n      </Box>\n    </FormControlContext.Provider>\n  );\n};\n\nexport default FormControl;\n"]},"metadata":{},"sourceType":"script"}