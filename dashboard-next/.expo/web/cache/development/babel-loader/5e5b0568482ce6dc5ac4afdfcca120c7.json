{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AvatarGroup = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Flex = _interopRequireDefault(require(\"../../primitives/Flex\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _Avatar = require(\"./Avatar\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar getAvatarGroupChildren = function getAvatarGroupChildren(children, spacing, max, plusAvatarBg, props) {\n  var childrenArray = _react[\"default\"].Children.toArray(children);\n\n  var plusAvatars = 0;\n\n  if (!(0, _isNil[\"default\"])(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n\n  var trailingChildren = childrenArray.slice(1);\n  var defaultProps = {\n    ml: (0, _isNil[\"default\"])(spacing) ? -4 : spacing\n  };\n  return [plusAvatars > 0 ? _react[\"default\"].createElement(_Avatar.Avatar, _extends({\n    bg: plusAvatarBg,\n    name: '+ ' + plusAvatars\n  }, defaultProps, props)) : null, _react[\"default\"].Children.map(trailingChildren.reverse(), function (child) {\n    return _react[\"default\"].cloneElement(child, _objectSpread({}, props, {}, defaultProps, {}, child.props), child.props.children);\n  }), _react[\"default\"].cloneElement(childrenArray[0], _objectSpread({}, props, {}, childrenArray[0].props), childrenArray[0].props.children)];\n};\n\nvar AvatarGroup = function AvatarGroup(allProps) {\n  var children = allProps.children,\n      spacing = allProps.spacing,\n      max = allProps.max,\n      props = _objectWithoutProperties(allProps, [\"children\", \"spacing\", \"max\"]);\n\n  var _ref = (0, _hooks.usePropsConfig)('AvatarBadge', props),\n      borderColor = _ref.borderColor,\n      borderWidth = _ref.borderWidth,\n      bg = _ref.bg;\n\n  return _react[\"default\"].createElement(_Flex[\"default\"], {\n    direction: \"row-reverse\"\n  }, getAvatarGroupChildren(children, spacing, max, bg, _objectSpread({\n    borderColor: borderColor,\n    borderWidth: borderWidth\n  }, props)));\n};\n\nexports.AvatarGroup = AvatarGroup;","map":{"version":3,"sources":["Group.tsx"],"names":["getAvatarGroupChildren","childrenArray","React","plusAvatars","max","trailingChildren","defaultProps","ml","spacing","child","props","AvatarGroup","allProps","bg","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Flex from '../../primitives/Flex';\nimport { usePropsConfig } from '../../../hooks';\nimport isNil from 'lodash/isNil';\nimport type { IAvatarProps } from './props';\nimport { Avatar } from './Avatar';\n\nconst getAvatarGroupChildren = (\n  children?: JSX.Element[] | JSX.Element,\n  spacing?: number,\n  max?: number,\n  plusAvatarBg?: string,\n  props?: any\n) => {\n  let childrenArray: any = React.Children.toArray(children);\n  let plusAvatars: number = 0;\n  if (!isNil(max) && max < childrenArray.length && max > 0) {\n    plusAvatars = childrenArray.length - max;\n    childrenArray = childrenArray.slice(0, max);\n  }\n  let trailingChildren = childrenArray.slice(1);\n  const defaultProps = {\n    ml: isNil(spacing) ? -4 : spacing,\n  };\n  return [\n    plusAvatars > 0 ? (\n      <Avatar\n        bg={plusAvatarBg}\n        name={'+ ' + plusAvatars}\n        {...defaultProps}\n        {...props}\n      />\n    ) : null,\n    React.Children.map(trailingChildren.reverse(), (child: any) => {\n      return React.cloneElement(\n        child,\n        {\n          ...props,\n          ...defaultProps,\n          ...child.props,\n        },\n        child.props.children\n      );\n    }),\n    React.cloneElement(\n      childrenArray[0],\n      {\n        ...props,\n        ...childrenArray[0].props,\n      },\n      childrenArray[0].props.children\n    ),\n  ];\n};\n\nexport const AvatarGroup = (\n  allProps: IAvatarProps & {\n    children?: JSX.Element[] | JSX.Element;\n    spacing?: number;\n    max?: number;\n  }\n) => {\n  const { children, spacing, max, ...props } = allProps;\n  const { borderColor, borderWidth, bg } = usePropsConfig('AvatarBadge', props);\n  return (\n    <Flex direction=\"row-reverse\">\n      {getAvatarGroupChildren(children, spacing, max, bg, {\n        borderColor,\n        borderWidth,\n        ...props,\n      })}\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}