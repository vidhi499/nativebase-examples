{"ast":null,"code":"\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.closePing=closePing;exports.setupPing=setupPing;exports.currentPage=void 0;var _unfetch=_interopRequireDefault(require(\"next/dist/build/polyfills/unfetch\"));var _eventsource=require(\"./error-overlay/eventsource\");var evtSource;var currentPage;exports.currentPage=currentPage;function closePing(){if(evtSource)evtSource.close();evtSource=null;}function setupPing(assetPrefix,pathnameFn,retry){var pathname=pathnameFn();if(pathname===currentPage&&!retry)return;exports.currentPage=currentPage=pathname;closePing();var url=assetPrefix+\"/_next/webpack-hmr?page=\"+currentPage;evtSource=(0,_eventsource.getEventSourceWrapper)({path:url,timeout:5000,ondemand:1});evtSource.addMessageListener(function(event){if(event.data.indexOf('{')===-1)return;try{var payload=JSON.parse(event.data);if(payload.invalid){(0,_unfetch[\"default\"])(location.href,{credentials:'same-origin'}).then(function(pageRes){if(pageRes.status===200){location.reload();}});}}catch(err){console.error('on-demand-entries failed to parse response',err);}});}","map":{"version":3,"sources":["/Users/vidhi/Sites/Projects/examples/test/dashboard-next/node_modules/next/dist/client/dev/on-demand-entries-utils.js"],"names":["_interopRequireDefault","require","exports","__esModule","closePing","setupPing","currentPage","_unfetch","_eventsource","evtSource","close","assetPrefix","pathnameFn","retry","pathname","url","getEventSourceWrapper","path","timeout","ondemand","addMessageListener","event","data","indexOf","payload","JSON","parse","invalid","location","href","credentials","then","pageRes","status","reload","err","console","error"],"mappings":"AAAA,aAAa,GAAIA,CAAAA,sBAAsB,CAACC,OAAO,CAAC,8CAAD,CAAlC,CAAmFC,OAAO,CAACC,UAAR,CAAmB,IAAnB,CAAwBD,OAAO,CAACE,SAAR,CAAkBA,SAAlB,CAA4BF,OAAO,CAACG,SAAR,CAAkBA,SAAlB,CAA4BH,OAAO,CAACI,WAAR,CAAoB,IAAK,EAAzB,CAA2B,GAAIC,CAAAA,QAAQ,CAACP,sBAAsB,CAACC,OAAO,CAAC,mCAAD,CAAR,CAAnC,CAAkF,GAAIO,CAAAA,YAAY,CAACP,OAAO,+BAAxB,CAA6E,GAAIQ,CAAAA,SAAJ,CAAc,GAAIH,CAAAA,WAAJ,CAAgBJ,OAAO,CAACI,WAAR,CAAoBA,WAApB,CAAgC,QAASF,CAAAA,SAAT,EAAoB,CAAC,GAAGK,SAAH,CAAaA,SAAS,CAACC,KAAV,GAAkBD,SAAS,CAAC,IAAV,CAAgB,SAASJ,CAAAA,SAAT,CAAmBM,WAAnB,CAA+BC,UAA/B,CAA0CC,KAA1C,CAAgD,CAAC,GAAIC,CAAAA,QAAQ,CAACF,UAAU,EAAvB,CAC7hB,GAAGE,QAAQ,GAAGR,WAAX,EAAwB,CAACO,KAA5B,CAAkC,OAAOX,OAAO,CAACI,WAAR,CAAoBA,WAAW,CAACQ,QAAhC,CACzCV,SAAS,GAAG,GAAIW,CAAAA,GAAG,CAACJ,WAAW,CAAC,0BAAZ,CAAuCL,WAA/C,CAA2DG,SAAS,CAAC,CAAC,EAAED,YAAY,CAACQ,qBAAhB,EAAuC,CAACC,IAAI,CAACF,GAAN,CAAUG,OAAO,CAAC,IAAlB,CAAuBC,QAAQ,CAAC,CAAhC,CAAvC,CAAV,CAAqFV,SAAS,CAACW,kBAAV,CAA6B,SAAAC,KAAK,CAAE,CAAC,GAAGA,KAAK,CAACC,IAAN,CAAWC,OAAX,CAAmB,GAAnB,IAA0B,CAAC,CAA9B,CAAgC,OAAO,GAAG,CAAC,GAAIC,CAAAA,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWL,KAAK,CAACC,IAAjB,CAAZ,CAAmC,GAAGE,OAAO,CAACG,OAAX,CAAmB,CAElS,CAAC,EAAEpB,QAAQ,WAAX,EAAqBqB,QAAQ,CAACC,IAA9B,CAAmC,CAACC,WAAW,CAAC,aAAb,CAAnC,EAAgEC,IAAhE,CAAqE,SAAAC,OAAO,CAAE,CAAC,GAAGA,OAAO,CAACC,MAAR,GAAiB,GAApB,CAAwB,CAACL,QAAQ,CAACM,MAAT,GAAmB,CAAC,CAA5H,EAA+H,CAAC,OAAMC,GAAN,CAAU,CAACC,OAAO,CAACC,KAAR,CAAc,4CAAd,CAA2DF,GAA3D,EAAiE,CAAC,CAFjD,EAEoD","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.closePing=closePing;exports.setupPing=setupPing;exports.currentPage=void 0;var _unfetch=_interopRequireDefault(require(\"next/dist/build/polyfills/unfetch\"));var _eventsource=require(\"./error-overlay/eventsource\");/* global location */var evtSource;var currentPage;exports.currentPage=currentPage;function closePing(){if(evtSource)evtSource.close();evtSource=null;}function setupPing(assetPrefix,pathnameFn,retry){var pathname=pathnameFn();// Make sure to only create new EventSource request if page has changed\nif(pathname===currentPage&&!retry)return;exports.currentPage=currentPage=pathname;// close current EventSource connection\nclosePing();var url=assetPrefix+\"/_next/webpack-hmr?page=\"+currentPage;evtSource=(0,_eventsource.getEventSourceWrapper)({path:url,timeout:5000,ondemand:1});evtSource.addMessageListener(event=>{if(event.data.indexOf('{')===-1)return;try{var payload=JSON.parse(event.data);if(payload.invalid){// Payload can be invalid even if the page does not exist.\n// So, we need to make sure it exists before reloading.\n(0,_unfetch.default)(location.href,{credentials:'same-origin'}).then(pageRes=>{if(pageRes.status===200){location.reload();}});}}catch(err){console.error('on-demand-entries failed to parse response',err);}});}"]},"metadata":{},"sourceType":"script"}