{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _colors = require(\"../tools/colors\");\n\nvar _tools = require(\"../tools\");\n\nvar baseStyle = function baseStyle(props) {\n  var startColor = props.startColor,\n      endColor = props.endColor,\n      theme = props.theme;\n  var skeletonColor = (0, _colors.getColor)(theme, startColor, (0, _tools.mode)(theme.colors.muted[200], theme.colors.muted[100])(props));\n  var baseColor = (0, _colors.getColor)(theme, endColor, 'transparent');\n  return {\n    skeletonColor: skeletonColor,\n    baseColor: baseColor\n  };\n};\n\nvar defaultProps = {\n  isLoaded: false\n};\nvar _default = {\n  baseStyle: baseStyle,\n  defaultProps: defaultProps\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["skeleton.ts"],"names":["baseStyle","props","theme","skeletonColor","baseColor","defaultProps","isLoaded"],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,OAAA,mBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;AAEA,IAAMA,SAAS,GAAIC,SAAbD,SAAaC,CAAAA,KAAD,EAAgC;AAAA,MAC5C,UAD4C,GAChD,KADgD,CAC5C,UAD4C;AAAA,MAC5C,QAD4C,GAChD,KADgD,CAC5C,QAD4C;AAAA,MACpBC,KADoB,GAChD,KADgD,CACpBA,KADoB;AAEhD,MAAIC,aAAa,GAAG,CAAA,GAAA,OAAA,CAAA,QAAA,EAAA,KAAA,EAAA,UAAA,EAGlB,CAAA,GAAA,MAAA,CAAA,IAAA,EAAKD,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAL,GAAKA,CAAL,EAA8BA,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAA9B,GAA8BA,CAA9B,EAHF,KAGE,CAHkB,CAApB;AAKA,MAAIE,SAAS,GAAG,CAAA,GAAA,OAAA,CAAA,QAAA,EAAA,KAAA,EAAA,QAAA,EAAhB,aAAgB,CAAhB;AACA,SAAO;AACLD,IAAAA,aADK,EACLA,aADK;AAELC,IAAAA,SAAAA,EAAAA;AAFK,GAAP;AARF,CAAA;;AAcA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;eAIe;AACbN,EAAAA,SADa,EACbA,SADa;AAEbK,EAAAA,YAAAA,EAAAA;AAFa,C","sourcesContent":["import { getColor } from '../tools/colors';\nimport { mode } from '../tools';\n\nconst baseStyle = (props: Record<string, any>) => {\n  let { startColor, endColor, theme } = props;\n  let skeletonColor = getColor(\n    theme,\n    startColor,\n    mode(theme.colors.muted[200], theme.colors.muted[100])(props)\n  );\n  let baseColor = getColor(theme, endColor, 'transparent');\n  return {\n    skeletonColor,\n    baseColor,\n  };\n};\n\nconst defaultProps = {\n  isLoaded: false,\n};\n\nexport default {\n  baseStyle,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}