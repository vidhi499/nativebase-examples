{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Path\", {\n  enumerable: true,\n  get: function get() {\n    return _reactNativeSvg.Path;\n  }\n});\nObject.defineProperty(exports, \"createIcon\", {\n  enumerable: true,\n  get: function get() {\n    return _createIcon.createIcon;\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _customProps = require(\"../../../utils/customProps\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _AntDesign = _interopRequireDefault(require(\"@expo/vector-icons/AntDesign\"));\n\nvar _Entypo = _interopRequireDefault(require(\"@expo/vector-icons/Entypo\"));\n\nvar _EvilIcons = _interopRequireDefault(require(\"@expo/vector-icons/EvilIcons\"));\n\nvar _Feather = _interopRequireDefault(require(\"@expo/vector-icons/Feather\"));\n\nvar _FontAwesome = _interopRequireDefault(require(\"@expo/vector-icons/FontAwesome\"));\n\nvar _FontAwesome2 = _interopRequireDefault(require(\"@expo/vector-icons/FontAwesome5\"));\n\nvar _Foundation = _interopRequireDefault(require(\"@expo/vector-icons/Foundation\"));\n\nvar _Ionicons = _interopRequireDefault(require(\"@expo/vector-icons/Ionicons\"));\n\nvar _MaterialCommunityIcons = _interopRequireDefault(require(\"@expo/vector-icons/MaterialCommunityIcons\"));\n\nvar _MaterialIcons = _interopRequireDefault(require(\"@expo/vector-icons/MaterialIcons\"));\n\nvar _Octicons = _interopRequireDefault(require(\"@expo/vector-icons/Octicons\"));\n\nvar _SimpleLineIcons = _interopRequireDefault(require(\"@expo/vector-icons/SimpleLineIcons\"));\n\nvar _Zocial = _interopRequireDefault(require(\"@expo/vector-icons/Zocial\"));\n\nvar _SVGIcon = require(\"./SVGIcon\");\n\nvar _reactNativeSvg = require(\"react-native-svg\");\n\nvar _createIcon = require(\"./createIcon\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Icon = function Icon(iconProps) {\n  var _newProps$dimension;\n\n  var name = iconProps.name,\n      type = iconProps.type,\n      size = iconProps.size,\n      colorProp = iconProps.color,\n      props = _objectWithoutProperties(iconProps, [\"name\", \"type\", \"size\", \"color\"]);\n\n  var newProps = (0, _hooks.usePropsConfig)('Icon', {\n    size: size,\n    color: colorProp\n  });\n  var rawColor = (0, _hooks.useToken)('colors', newProps.color);\n\n  if (!name) {\n    return _react[\"default\"].createElement(_SVGIcon.SVGIcon, iconProps);\n  }\n\n  var flattenedIconStyle = _reactNative.StyleSheet.flatten([{\n    fontSize: parseInt((_newProps$dimension = newProps.dimension) !== null && _newProps$dimension !== void 0 ? _newProps$dimension : newProps.size, 10)\n  }]);\n\n  switch (type) {\n    case 'AntDesign':\n      return _react[\"default\"].createElement(_AntDesign[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Entypo':\n      return _react[\"default\"].createElement(_Entypo[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'EvilIcons':\n      return _react[\"default\"].createElement(_EvilIcons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Feather':\n      return _react[\"default\"].createElement(_Feather[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'FontAwesome':\n      return _react[\"default\"].createElement(_FontAwesome[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'FontAwesome5':\n      return _react[\"default\"].createElement(_FontAwesome2[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Foundation':\n      return _react[\"default\"].createElement(_Foundation[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Ionicons':\n      return _react[\"default\"].createElement(_Ionicons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'MaterialCommunityIcons':\n      return _react[\"default\"].createElement(_MaterialCommunityIcons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Octicons':\n      return _react[\"default\"].createElement(_Octicons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'SimpleLineIcons':\n      return _react[\"default\"].createElement(_SimpleLineIcons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    case 'Zocial':\n      return _react[\"default\"].createElement(_Zocial[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n\n    default:\n      return _react[\"default\"].createElement(_MaterialIcons[\"default\"], _extends({\n        name: name\n      }, props, {\n        style: flattenedIconStyle,\n        color: rawColor\n      }));\n  }\n};\n\nvar styledIcon = (0, _native[\"default\"])(Icon)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.typography, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout, _customProps.customTypography);\nvar _default = styledIcon;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["Icon","iconProps","color","props","newProps","size","colorProp","rawColor","flattenedIconStyle","fontSize","parseInt","name","styledIcon","space","layout","flexbox","border","typography","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","customTypography"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, TextStyle } from 'react-native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  space,\n  typography,\n  position,\n} from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customTypography,\n  customPosition,\n} from '../../../utils/customProps';\nimport { usePropsConfig, useToken } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport Entypo from 'react-native-vector-icons/Entypo';\nimport EvilIcons from 'react-native-vector-icons/EvilIcons';\nimport Feather from 'react-native-vector-icons/Feather';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport FontAwesome5 from 'react-native-vector-icons/FontAwesome5';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';\nimport Zocial from 'react-native-vector-icons/Zocial';\nimport type { IIconProps, IconType } from './props';\nimport { SVGIcon } from './SVGIcon';\nimport { Path } from 'react-native-svg';\n\nconst Icon = (iconProps: IIconProps) => {\n  const { name, type, size, color: colorProp, ...props } = iconProps;\n  const newProps = usePropsConfig('Icon', { size, color: colorProp });\n  const rawColor = useToken('colors', newProps.color);\n  if (!name) {\n    return <SVGIcon {...iconProps} />;\n  }\n  const flattenedIconStyle: TextStyle = StyleSheet.flatten([\n    { fontSize: parseInt(newProps.dimension ?? newProps.size, 10) },\n  ]);\n  switch (type) {\n    case 'AntDesign':\n      return (\n        <AntDesign\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Entypo':\n      return (\n        <Entypo\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'EvilIcons':\n      return (\n        <EvilIcons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Feather':\n      return (\n        <Feather\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'FontAwesome':\n      return (\n        <FontAwesome\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'FontAwesome5':\n      return (\n        <FontAwesome5\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Foundation':\n      return (\n        <Foundation\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Ionicons':\n      return (\n        <Ionicons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'MaterialCommunityIcons':\n      return (\n        <MaterialCommunityIcons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Octicons':\n      return (\n        <Octicons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'SimpleLineIcons':\n      return (\n        <SimpleLineIcons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    case 'Zocial':\n      return (\n        <Zocial\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n    default:\n      return (\n        <MaterialIcons\n          name={name}\n          {...props}\n          style={flattenedIconStyle}\n          color={rawColor}\n        />\n      );\n  }\n};\n\nconst styledIcon = styled(Icon)<IIconProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  typography,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout,\n  customTypography\n);\n\nexport default styledIcon;\nexport { Path };\nexport type { IIconProps, IconType };\nexport { createIcon } from './createIcon';\n"]},"metadata":{},"sourceType":"script"}