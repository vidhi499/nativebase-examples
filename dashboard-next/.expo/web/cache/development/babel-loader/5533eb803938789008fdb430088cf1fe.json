{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BreadCrumbLink\", {\n  enumerable: true,\n  get: function get() {\n    return _primitives.Link;\n  }\n});\nObject.defineProperty(exports, \"BreadCrumbItem\", {\n  enumerable: true,\n  get: function get() {\n    return _BreadCrumbItem.BreadCrumbItem;\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _BreadCrumbSeparator = require(\"./BreadCrumbSeparator\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _BreadCrumbItem = require(\"./BreadCrumbItem\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar BreadCrumb = function BreadCrumb(_ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      separator = _ref.separator,\n      fontSize = _ref.fontSize,\n      color = _ref.color,\n      textDecoration = _ref.textDecoration,\n      txtDecor = _ref.txtDecor,\n      wordBreak = _ref.wordBreak,\n      textOverflow = _ref.textOverflow,\n      textTransform = _ref.textTransform,\n      whiteSpace = _ref.whiteSpace,\n      overflowWrap = _ref.overflowWrap,\n      fontFamily = _ref.fontFamily,\n      fontWeight = _ref.fontWeight,\n      bold = _ref.bold,\n      italic = _ref.italic,\n      underline = _ref.underline,\n      strikeThrough = _ref.strikeThrough,\n      isTruncated = _ref.isTruncated,\n      noOfLines = _ref.noOfLines,\n      spacing = _ref.spacing,\n      props = _objectWithoutProperties(_ref, [\"style\", \"children\", \"separator\", \"fontSize\", \"color\", \"textDecoration\", \"txtDecor\", \"wordBreak\", \"textOverflow\", \"textTransform\", \"whiteSpace\", \"overflowWrap\", \"fontFamily\", \"fontWeight\", \"bold\", \"italic\", \"underline\", \"strikeThrough\", \"isTruncated\", \"noOfLines\", \"spacing\"]);\n\n  var textProps = {\n    fontWeight: fontWeight,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    color: color,\n    textDecoration: textDecoration,\n    txtDecor: txtDecor,\n    wordBreak: wordBreak,\n    textOverflow: textOverflow,\n    textTransform: textTransform,\n    whiteSpace: whiteSpace,\n    overflowWrap: overflowWrap,\n    bold: bold,\n    italic: italic,\n    underline: underline,\n    strikeThrough: strikeThrough,\n    isTruncated: isTruncated,\n    noOfLines: noOfLines\n  };\n  var newProps = (0, _hooks.usePropsConfig)('BreadCrumb', props);\n  return _react[\"default\"].createElement(_primitives.Flex, _extends({}, newProps, {\n    style: style\n  }), children && !children.length ? children : (0, _BreadCrumbSeparator.BreadCrumbSeparator)(children, separator, textProps, spacing));\n};\n\nvar _default = BreadCrumb;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["BreadCrumb","props","textProps","fontWeight","fontFamily","fontSize","color","textDecoration","txtDecor","wordBreak","textOverflow","textTransform","whiteSpace","overflowWrap","bold","italic","underline","strikeThrough","isTruncated","noOfLines","newProps","style","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,oBAAA;;AAEA,IAAA,oBAAA,GAAA,OAAA,yBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,eAAA,GAAA,OAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAuBK;AAAA,MAvBJ,KAuBI,QAvBJ,KAuBI;AAAA,MAvBJ,QAuBI,QAvBJ,QAuBI;AAAA,MAvBJ,SAuBI,QAvBJ,SAuBI;AAAA,MAvBJ,QAuBI,QAvBJ,QAuBI;AAAA,MAvBJ,KAuBI,QAvBJ,KAuBI;AAAA,MAvBJ,cAuBI,QAvBJ,cAuBI;AAAA,MAvBJ,QAuBI,QAvBJ,QAuBI;AAAA,MAvBJ,SAuBI,QAvBJ,SAuBI;AAAA,MAvBJ,YAuBI,QAvBJ,YAuBI;AAAA,MAvBJ,aAuBI,QAvBJ,aAuBI;AAAA,MAvBJ,UAuBI,QAvBJ,UAuBI;AAAA,MAvBJ,YAuBI,QAvBJ,YAuBI;AAAA,MAvBJ,UAuBI,QAvBJ,UAuBI;AAAA,MAvBJ,UAuBI,QAvBJ,UAuBI;AAAA,MAvBJ,IAuBI,QAvBJ,IAuBI;AAAA,MAvBJ,MAuBI,QAvBJ,MAuBI;AAAA,MAvBJ,SAuBI,QAvBJ,SAuBI;AAAA,MAvBJ,aAuBI,QAvBJ,aAuBI;AAAA,MAvBJ,WAuBI,QAvBJ,WAuBI;AAAA,MAvBJ,SAuBI,QAvBJ,SAuBI;AAAA,MAvBJ,OAuBI,QAvBJ,OAuBI;AAAA,MADnBC,KACmB;;AACtB,MAAMC,SAAS,GAAG;AAChBC,IAAAA,UADgB,EAChBA,UADgB;AAEhBC,IAAAA,UAFgB,EAEhBA,UAFgB;AAGhBC,IAAAA,QAHgB,EAGhBA,QAHgB;AAIhBC,IAAAA,KAJgB,EAIhBA,KAJgB;AAKhBC,IAAAA,cALgB,EAKhBA,cALgB;AAMhBC,IAAAA,QANgB,EAMhBA,QANgB;AAOhBC,IAAAA,SAPgB,EAOhBA,SAPgB;AAQhBC,IAAAA,YARgB,EAQhBA,YARgB;AAShBC,IAAAA,aATgB,EAShBA,aATgB;AAUhBC,IAAAA,UAVgB,EAUhBA,UAVgB;AAWhBC,IAAAA,YAXgB,EAWhBA,YAXgB;AAYhBC,IAAAA,IAZgB,EAYhBA,IAZgB;AAahBC,IAAAA,MAbgB,EAahBA,MAbgB;AAchBC,IAAAA,SAdgB,EAchBA,SAdgB;AAehBC,IAAAA,aAfgB,EAehBA,aAfgB;AAgBhBC,IAAAA,WAhBgB,EAgBhBA,WAhBgB;AAiBhBC,IAAAA,SAAAA,EAAAA;AAjBgB,GAAlB;AAmBA,MAAIC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,YAAA,EAAf,KAAe,CAAf;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAAoB,IAAA,KAAK,EAAEC;AAA3B,GAAA,CAAA,EACGC,QAAQ,IAAI,CAACA,QAAQ,CAArBA,MAAAA,GAAAA,QAAAA,GAEG,CAAA,GAAA,oBAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAJR,OAIQ,CAHN,CADF;AA5CF,CAAA;;eAqDetB,U","sourcesContent":["import React from 'react';\nimport { Flex, Link as BreadCrumbLink } from '../../primitives';\nimport type { IBreadCrumbProps } from './props';\nimport { BreadCrumbSeparator } from './BreadCrumbSeparator';\nimport { usePropsConfig } from '../../../hooks';\nexport { BreadCrumbItem } from './BreadCrumbItem';\nexport { BreadCrumbLink };\n\nconst BreadCrumb = ({\n  style,\n  children,\n  separator,\n  fontSize,\n  color,\n  textDecoration,\n  txtDecor,\n  wordBreak,\n  textOverflow,\n  textTransform,\n  whiteSpace,\n  overflowWrap,\n  fontFamily,\n  fontWeight,\n  bold,\n  italic,\n  underline,\n  strikeThrough,\n  isTruncated,\n  noOfLines,\n  spacing,\n  ...props\n}: IBreadCrumbProps) => {\n  const textProps = {\n    fontWeight,\n    fontFamily,\n    fontSize,\n    color,\n    textDecoration,\n    txtDecor,\n    wordBreak,\n    textOverflow,\n    textTransform,\n    whiteSpace,\n    overflowWrap,\n    bold,\n    italic,\n    underline,\n    strikeThrough,\n    isTruncated,\n    noOfLines,\n  };\n  let newProps = usePropsConfig('BreadCrumb', props);\n  return (\n    <Flex {...newProps} style={style}>\n      {children && !children.length\n        ? children\n        : BreadCrumbSeparator(children, separator, textProps, spacing)}\n    </Flex>\n  );\n};\n\nexport default BreadCrumb;\nexport type { IBreadCrumbProps };\n"]},"metadata":{},"sourceType":"script"}