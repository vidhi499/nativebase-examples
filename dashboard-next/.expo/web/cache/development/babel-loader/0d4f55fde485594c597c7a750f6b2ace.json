{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BreadCrumbSeparator = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _isNil = _interopRequireDefault(require(\"lodash/isNil\"));\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar BreadCrumbSeparator = function BreadCrumbSeparator(children, separator, props, spacing) {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n\n    var separatorElement = separator ? typeof separator === 'string' ? _react[\"default\"].createElement(_Text[\"default\"], {\n      mx: !(0, _isNil[\"default\"])(spacing) ? spacing : 2\n    }, separator) : _react[\"default\"].cloneElement(separator, {\n      mx: !(0, _isNil[\"default\"])(spacing) ? spacing : 2\n    }) : _react[\"default\"].createElement(_Text[\"default\"], {\n      mx: !(0, _isNil[\"default\"])(spacing) ? spacing : 2\n    }, '/');\n    var result = [];\n\n    if (children && children.length > 1) {\n      result = children.reduce(function (r, a) {\n        return r.concat(a, separatorElement);\n      }, [separatorElement]);\n    }\n\n    result = result.slice(1, -1);\n    return result.map(function (child, index) {\n      return _react[\"default\"].cloneElement(child, _objectSpread({}, props, {\n        key: \"breadcrumb-separator-\".concat(index)\n      }));\n    });\n  } else {\n    return children;\n  }\n};\n\nexports.BreadCrumbSeparator = BreadCrumbSeparator;","map":{"version":3,"sources":["BreadCrumbSeparator.tsx"],"names":["BreadCrumbSeparator","Array","children","separatorElement","separator","mx","result","r","key"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;;;;;;;AAEO,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAA,QAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAK9B;AACH,MAAIC,KAAK,CAALA,OAAAA,CAAJ,QAAIA,CAAJ,EAA6B;AAC3B,QAAIC,QAAQ,CAARA,MAAAA,KAAJ,CAAA,EAA2B;AACzB,aAAA,QAAA;AACD;;AACD,QAAMC,gBAAgB,GAAGC,SAAS,GAChC,OAAA,SAAA,KAAA,QAAA,GACE,MAAA,WAAA,CAAA,aAAA,CAAC,KAAD,WAAA,EAAA;AAAM,MAAA,EAAE,EAAE,CAAC,CAAA,GAAA,MAAA,WAAA,EAAD,OAAC,CAAD,GAAA,OAAA,GAA4B;AAAtC,KAAA,EADF,SACE,CADF,GAGE,MAAA,WAAA,CAAA,YAAA,CAAA,SAAA,EAA8B;AAC5BC,MAAAA,EAAE,EAAE,CAAC,CAAA,GAAA,MAAA,WAAA,EAAD,OAAC,CAAD,GAAA,OAAA,GAA4B;AADJ,KAA9B,CAJ8B,GAShC,MAAA,WAAA,CAAA,aAAA,CAAC,KAAD,WAAA,EAAA;AAAM,MAAA,EAAE,EAAE,CAAC,CAAA,GAAA,MAAA,WAAA,EAAD,OAAC,CAAD,GAAA,OAAA,GAA4B;AAAtC,KAAA,EATF,GASE,CATF;AAWA,QAAIC,MAAW,GAAf,EAAA;;AACA,QAAIJ,QAAQ,IAAIA,QAAQ,CAARA,MAAAA,GAAhB,CAAA,EAAqC;AACnCI,MAAAA,MAAM,GAAGJ,QAAQ,CAARA,MAAAA,CACP,UAAA,CAAA,EAAA,CAAA;AAAA,eAAsBK,CAAC,CAADA,MAAAA,CAAAA,CAAAA,EADfL,gBACeK,CAAtB;AAAA,OADOL,EAEP,CAFFI,gBAEE,CAFOJ,CAATI;AAID;;AACDA,IAAAA,MAAM,GAAGA,MAAM,CAANA,KAAAA,CAAAA,CAAAA,EAAgB,CAAzBA,CAASA,CAATA;AACA,WAAO,MAAM,CAAN,GAAA,CAAW,UAAA,KAAA,EAAA,KAAA,EAA+B;AAC/C,aAAO,MAAA,WAAA,CAAA,YAAA,CAAA,KAAA,oBAA0B,KAA1B;AAELE,QAAAA,GAAG,EAAA,wBAAA,MAAA,CAAA,KAAA;AAFE,SAAP;AADF,KAAO,CAAP;AAvBF,GAAA,MA6BO;AACL,WAAA,QAAA;AACD;AArCI,CAAA","sourcesContent":["import React from 'react';\nimport isNil from 'lodash/isNil';\nimport Text from '../../primitives/Text';\n\nexport const BreadCrumbSeparator = (\n  children: JSX.Element[] | JSX.Element | any,\n  separator: string | JSX.Element | JSX.Element[] | any,\n  props: any,\n  spacing: number | undefined\n) => {\n  if (Array.isArray(children)) {\n    if (children.length === 1) {\n      return children;\n    }\n    const separatorElement = separator ? (\n      typeof separator === 'string' ? (\n        <Text mx={!isNil(spacing) ? spacing : 2}>{separator}</Text>\n      ) : (\n        React.cloneElement(separator, {\n          mx: !isNil(spacing) ? spacing : 2,\n        })\n      )\n    ) : (\n      <Text mx={!isNil(spacing) ? spacing : 2}>{'/'}</Text>\n    );\n    let result: any = [];\n    if (children && children.length > 1) {\n      result = children.reduce(\n        (r: any[], a: any) => r.concat(a, separatorElement),\n        [separatorElement]\n      );\n    }\n    result = result.slice(1, -1);\n    return result.map((child: any, index: number) => {\n      return React.cloneElement(child, {\n        ...props,\n        key: `breadcrumb-separator-${index}`,\n      });\n    });\n  } else {\n    return children;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}