{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/vidhi/Sites/Projects/examples/test/dashboard-next/node_modules/react-native-gesture-handler/GestureButtons.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport createNativeWrapper from \"./createNativeWrapper\";\nimport GestureHandlerButton from \"./GestureHandlerButton\";\nimport State from \"./State\";\nexport var RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false\n});\nexport var BaseButton = function (_React$Component) {\n  _inherits(BaseButton, _React$Component);\n\n  var _super = _createSuper(BaseButton);\n\n  function BaseButton(props) {\n    var _this;\n\n    _classCallCheck(this, BaseButton);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"_handleEvent\", function (_ref) {\n      var nativeEvent = _ref.nativeEvent;\n      var state = nativeEvent.state,\n          oldState = nativeEvent.oldState,\n          pointerInside = nativeEvent.pointerInside;\n      var active = pointerInside && state === State.ACTIVE;\n\n      if (active !== _this._lastActive && _this.props.onActiveStateChange) {\n        _this.props.onActiveStateChange(active);\n      }\n\n      if (oldState === State.ACTIVE && state !== State.CANCELLED && _this._lastActive && _this.props.onPress) {\n        _this.props.onPress(active);\n      }\n\n      _this._lastActive = active;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onHandlerStateChange\", function (e) {\n      _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(e);\n\n      _this._handleEvent(e);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onGestureEvent\", function (e) {\n      _this.props.onGestureEvent && _this.props.onGestureEvent(e);\n\n      _this._handleEvent(e);\n    });\n\n    _this._lastActive = false;\n    return _this;\n  }\n\n  _createClass(BaseButton, [{\n    key: \"render\",\n    value: function render() {\n      var _extends2;\n\n      var _this$props = this.props,\n          rippleColor = _this$props.rippleColor,\n          rest = _objectWithoutProperties(_this$props, [\"rippleColor\"]);\n\n      return __jsx(RawButton, _extends({\n        rippleColor: processColor(rippleColor)\n      }, rest, (_extends2 = {\n        onGestureEvent: this._onGestureEvent,\n        onHandlerStateChange: this._onHandlerStateChange,\n        __self: this\n      }, _defineProperty(_extends2, \"__self\", this), _defineProperty(_extends2, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }), _extends2)));\n    }\n  }]);\n\n  return BaseButton;\n}(React.Component);\n\n_defineProperty(BaseButton, \"propTypes\", _objectSpread({}, RawButton.propTypes, {\n  onPress: PropTypes.func,\n  onActiveStateChange: PropTypes.func\n}));\n\nvar AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\nvar btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0\n  }\n});\nexport var RectButton = function (_React$Component2) {\n  _inherits(RectButton, _React$Component2);\n\n  var _super2 = _createSuper(RectButton);\n\n  function RectButton(props) {\n    var _this2;\n\n    _classCallCheck(this, RectButton);\n\n    _this2 = _super2.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this2), \"_onActiveStateChange\", function (active) {\n      if (Platform.OS !== 'android') {\n        _this2._opacity.setValue(active ? _this2.props.activeOpacity : 0);\n      }\n\n      _this2.props.onActiveStateChange && _this2.props.onActiveStateChange(active);\n    });\n\n    _this2._opacity = new Animated.Value(0);\n    return _this2;\n  }\n\n  _createClass(RectButton, [{\n    key: \"render\",\n    value: function render() {\n      var _jsx, _extends3;\n\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          style = _this$props2.style,\n          rest = _objectWithoutProperties(_this$props2, [\"children\", \"style\"]);\n\n      var resolvedStyle = StyleSheet.flatten(style !== null && style !== void 0 ? style : {});\n      return __jsx(BaseButton, _extends({}, rest, (_extends3 = {\n        style: resolvedStyle,\n        onActiveStateChange: this._onActiveStateChange,\n        __self: this\n      }, _defineProperty(_extends3, \"__self\", this), _defineProperty(_extends3, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }), _extends3)), __jsx(Animated.View, (_jsx = {\n        style: [btnStyles.underlay, {\n          opacity: this._opacity,\n          backgroundColor: this.props.underlayColor,\n          borderRadius: resolvedStyle.borderRadius,\n          borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n          borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n          borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n          borderBottomRightRadius: resolvedStyle.borderBottomRightRadius\n        }],\n        __self: this\n      }, _defineProperty(_jsx, \"__self\", this), _defineProperty(_jsx, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }), _jsx)), children);\n    }\n  }]);\n\n  return RectButton;\n}(React.Component);\n\n_defineProperty(RectButton, \"propTypes\", BaseButton.propTypes);\n\n_defineProperty(RectButton, \"defaultProps\", {\n  activeOpacity: 0.105,\n  underlayColor: 'black'\n});\n\nexport var BorderlessButton = function (_React$Component3) {\n  _inherits(BorderlessButton, _React$Component3);\n\n  var _super3 = _createSuper(BorderlessButton);\n\n  function BorderlessButton(props) {\n    var _this3;\n\n    _classCallCheck(this, BorderlessButton);\n\n    _this3 = _super3.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this3), \"_onActiveStateChange\", function (active) {\n      if (Platform.OS !== 'android') {\n        _this3._opacity.setValue(active ? _this3.props.activeOpacity : 1);\n      }\n\n      _this3.props.onActiveStateChange && _this3.props.onActiveStateChange(active);\n    });\n\n    _this3._opacity = new Animated.Value(1);\n    return _this3;\n  }\n\n  _createClass(BorderlessButton, [{\n    key: \"render\",\n    value: function render() {\n      var _extends4;\n\n      var _this$props3 = this.props,\n          children = _this$props3.children,\n          style = _this$props3.style,\n          rest = _objectWithoutProperties(_this$props3, [\"children\", \"style\"]);\n\n      return __jsx(AnimatedBaseButton, _extends({}, rest, (_extends4 = {\n        onActiveStateChange: this._onActiveStateChange,\n        style: [style, Platform.OS === 'ios' && {\n          opacity: this._opacity\n        }],\n        __self: this\n      }, _defineProperty(_extends4, \"__self\", this), _defineProperty(_extends4, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 7\n      }), _extends4)), children);\n    }\n  }]);\n\n  return BorderlessButton;\n}(React.Component);\n\n_defineProperty(BorderlessButton, \"propTypes\", _objectSpread({}, BaseButton.propTypes, {\n  borderless: PropTypes.bool\n}));\n\n_defineProperty(BorderlessButton, \"defaultProps\", {\n  activeOpacity: 0.3,\n  borderless: true\n});\n\nexport { default as PureNativeButton } from \"./GestureHandlerButton\";","map":{"version":3,"sources":["/Users/vidhi/Sites/Projects/examples/test/dashboard-next/node_modules/react-native-gesture-handler/GestureButtons.js"],"names":["PropTypes","React","createNativeWrapper","GestureHandlerButton","State","RawButton","shouldCancelWhenOutside","shouldActivateOnStart","BaseButton","props","nativeEvent","state","oldState","pointerInside","active","ACTIVE","_lastActive","onActiveStateChange","CANCELLED","onPress","e","onHandlerStateChange","_handleEvent","onGestureEvent","rippleColor","rest","processColor","_onGestureEvent","_onHandlerStateChange","Component","propTypes","func","AnimatedBaseButton","Animated","createAnimatedComponent","btnStyles","StyleSheet","create","underlay","position","left","right","bottom","top","RectButton","Platform","OS","_opacity","setValue","activeOpacity","Value","children","style","resolvedStyle","flatten","_onActiveStateChange","opacity","backgroundColor","underlayColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","BorderlessButton","borderless","bool","default","PureNativeButton"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;;AAGA,OAAOC,mBAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,KAAP;AAEA,OAAO,IAAMC,SAAS,GAAGH,mBAAmB,CAACC,oBAAD,EAAuB;AACjEG,EAAAA,uBAAuB,EAAE,KADwC;AAEjEC,EAAAA,qBAAqB,EAAE;AAF0C,CAAvB,CAArC;AAOP,WAAaC,UAAb;AAAA;;AAAA;;AAOE,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,mEAKJ,gBAAqB;AAAA,UAAlBC,WAAkB,QAAlBA,WAAkB;AAAA,UAC1BC,KAD0B,GACSD,WADT,CAC1BC,KAD0B;AAAA,UACnBC,QADmB,GACSF,WADT,CACnBE,QADmB;AAAA,UACTC,aADS,GACSH,WADT,CACTG,aADS;AAElC,UAAMC,MAAM,GAAGD,aAAa,IAAIF,KAAK,KAAKP,KAAK,CAACW,MAAhD;;AAEA,UAAID,MAAM,KAAK,MAAKE,WAAhB,IAA+B,MAAKP,KAAL,CAAWQ,mBAA9C,EAAmE;AACjE,cAAKR,KAAL,CAAWQ,mBAAX,CAA+BH,MAA/B;AACD;;AAED,UACEF,QAAQ,KAAKR,KAAK,CAACW,MAAnB,IACAJ,KAAK,KAAKP,KAAK,CAACc,SADhB,IAEA,MAAKF,WAFL,IAGA,MAAKP,KAAL,CAAWU,OAJb,EAKE;AACA,cAAKV,KAAL,CAAWU,OAAX,CAAmBL,MAAnB;AACD;;AAED,YAAKE,WAAL,GAAmBF,MAAnB;AACD,KAvBkB;;AAAA,4EA6BK,UAAAM,CAAC,EAAI;AAC3B,YAAKX,KAAL,CAAWY,oBAAX,IAAmC,MAAKZ,KAAL,CAAWY,oBAAX,CAAgCD,CAAhC,CAAnC;;AACA,YAAKE,YAAL,CAAkBF,CAAlB;AACD,KAhCkB;;AAAA,sEAkCD,UAAAA,CAAC,EAAI;AACrB,YAAKX,KAAL,CAAWc,cAAX,IAA6B,MAAKd,KAAL,CAAWc,cAAX,CAA0BH,CAA1B,CAA7B;;AACA,YAAKE,YAAL,CAAkBF,CAAlB;AACD,KArCkB;;AAEjB,UAAKJ,WAAL,GAAmB,KAAnB;AAFiB;AAGlB;;AAVH;AAAA;AAAA,6BA8CW;AAAA;;AAAA,wBAC0B,KAAKP,KAD/B;AAAA,UACCe,WADD,eACCA,WADD;AAAA,UACiBC,IADjB;;AAGP,aACE,MAAC,SAAD;AACE,QAAA,WAAW,EAAEC,YAAY,CAACF,WAAD;AAD3B,SAEMC,IAFN;AAGE,QAAA,cAAc,EAAE,KAAKE,eAHvB;AAIE,QAAA,oBAAoB,EAAE,KAAKC,qBAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF;AAQD;AAzDH;;AAAA;AAAA,EAAgC3B,KAAK,CAAC4B,SAAtC;;gBAAarB,U,iCAENH,SAAS,CAACyB,S;AACbX,EAAAA,OAAO,EAAEnB,SAAS,CAAC+B,I;AACnBd,EAAAA,mBAAmB,EAAEjB,SAAS,CAAC+B;;;AAwDnC,IAAMC,kBAAkB,GAAGC,QAAQ,CAACC,uBAAT,CAAiC1B,UAAjC,CAA3B;AAEA,IAAM2B,SAAS,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAClCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,UADF;AAERC,IAAAA,IAAI,EAAE,CAFE;AAGRC,IAAAA,KAAK,EAAE,CAHC;AAIRC,IAAAA,MAAM,EAAE,CAJA;AAKRC,IAAAA,GAAG,EAAE;AALG;AADwB,CAAlB,CAAlB;AAUA,WAAaC,UAAb;AAAA;;AAAA;;AAQE,sBAAYnC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;;AADiB,4EAKI,UAAAK,MAAM,EAAI;AAC/B,UAAI+B,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,eAAKC,QAAL,CAAcC,QAAd,CAAuBlC,MAAM,GAAG,OAAKL,KAAL,CAAWwC,aAAd,GAA8B,CAA3D;AACD;;AAED,aAAKxC,KAAL,CAAWQ,mBAAX,IAAkC,OAAKR,KAAL,CAAWQ,mBAAX,CAA+BH,MAA/B,CAAlC;AACD,KAXkB;;AAEjB,WAAKiC,QAAL,GAAgB,IAAId,QAAQ,CAACiB,KAAb,CAAmB,CAAnB,CAAhB;AAFiB;AAGlB;;AAXH;AAAA;AAAA,6BAqBW;AAAA;;AAAA,yBAC8B,KAAKzC,KADnC;AAAA,UACC0C,QADD,gBACCA,QADD;AAAA,UACWC,KADX,gBACWA,KADX;AAAA,UACqB3B,IADrB;;AAGP,UAAM4B,aAAa,GAAGjB,UAAU,CAACkB,OAAX,CAAmBF,KAAnB,aAAmBA,KAAnB,cAAmBA,KAAnB,GAA4B,EAA5B,CAAtB;AAEA,aACE,MAAC,UAAD,eACM3B,IADN;AAEE,QAAA,KAAK,EAAE4B,aAFT;AAGE,QAAA,mBAAmB,EAAE,KAAKE,oBAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIE,MAAC,QAAD,CAAU,IAAV;AACE,QAAA,KAAK,EAAE,CACLpB,SAAS,CAACG,QADL,EAEL;AACEkB,UAAAA,OAAO,EAAE,KAAKT,QADhB;AAEEU,UAAAA,eAAe,EAAE,KAAKhD,KAAL,CAAWiD,aAF9B;AAGEC,UAAAA,YAAY,EAAEN,aAAa,CAACM,YAH9B;AAIEC,UAAAA,mBAAmB,EAAEP,aAAa,CAACO,mBAJrC;AAKEC,UAAAA,oBAAoB,EAAER,aAAa,CAACQ,oBALtC;AAMEC,UAAAA,sBAAsB,EAAET,aAAa,CAACS,sBANxC;AAOEC,UAAAA,uBAAuB,EAAEV,aAAa,CAACU;AAPzC,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAkBGZ,QAlBH,CADF;AAsBD;AAhDH;;AAAA;AAAA,EAAgClD,KAAK,CAAC4B,SAAtC;;gBAAae,U,eACQpC,UAAU,CAACsB,S;;gBADnBc,U,kBAGW;AACpBK,EAAAA,aAAa,EAAE,KADK;AAEpBS,EAAAA,aAAa,EAAE;AAFK,C;;AAgDxB,WAAaM,gBAAb;AAAA;;AAAA;;AAWE,4BAAYvD,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;;AADiB,4EAKI,UAAAK,MAAM,EAAI;AAC/B,UAAI+B,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AAC7B,eAAKC,QAAL,CAAcC,QAAd,CAAuBlC,MAAM,GAAG,OAAKL,KAAL,CAAWwC,aAAd,GAA8B,CAA3D;AACD;;AAED,aAAKxC,KAAL,CAAWQ,mBAAX,IAAkC,OAAKR,KAAL,CAAWQ,mBAAX,CAA+BH,MAA/B,CAAlC;AACD,KAXkB;;AAEjB,WAAKiC,QAAL,GAAgB,IAAId,QAAQ,CAACiB,KAAb,CAAmB,CAAnB,CAAhB;AAFiB;AAGlB;;AAdH;AAAA;AAAA,6BAwBW;AAAA;;AAAA,yBAC8B,KAAKzC,KADnC;AAAA,UACC0C,QADD,gBACCA,QADD;AAAA,UACWC,KADX,gBACWA,KADX;AAAA,UACqB3B,IADrB;;AAGP,aACE,MAAC,kBAAD,eACMA,IADN;AAEE,QAAA,mBAAmB,EAAE,KAAK8B,oBAF5B;AAGE,QAAA,KAAK,EAAE,CAACH,KAAD,EAAQP,QAAQ,CAACC,EAAT,KAAgB,KAAhB,IAAyB;AAAEU,UAAAA,OAAO,EAAE,KAAKT;AAAhB,SAAjC,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAIGI,QAJH,CADF;AAQD;AAnCH;;AAAA;AAAA,EAAsClD,KAAK,CAAC4B,SAA5C;;gBAAamC,gB,iCAENxD,UAAU,CAACsB,S;AACdmC,EAAAA,UAAU,EAAEjE,SAAS,CAACkE;;;gBAHbF,gB,kBAMW;AACpBf,EAAAA,aAAa,EAAE,GADK;AAEpBgB,EAAAA,UAAU,EAAE;AAFQ,C;;AAgCxB,SAASE,OAAO,IAAIC,gBAApB","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Animated, Platform, processColor, StyleSheet } from 'react-native';\n\nimport createNativeWrapper from './createNativeWrapper';\nimport GestureHandlerButton from './GestureHandlerButton';\nimport State from './State';\n\nexport const RawButton = createNativeWrapper(GestureHandlerButton, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: false,\n});\n\n/* Buttons */\n\nexport class BaseButton extends React.Component {\n  static propTypes = {\n    ...RawButton.propTypes,\n    onPress: PropTypes.func,\n    onActiveStateChange: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n    this._lastActive = false;\n  }\n\n  _handleEvent = ({ nativeEvent }) => {\n    const { state, oldState, pointerInside } = nativeEvent;\n    const active = pointerInside && state === State.ACTIVE;\n\n    if (active !== this._lastActive && this.props.onActiveStateChange) {\n      this.props.onActiveStateChange(active);\n    }\n\n    if (\n      oldState === State.ACTIVE &&\n      state !== State.CANCELLED &&\n      this._lastActive &&\n      this.props.onPress\n    ) {\n      this.props.onPress(active);\n    }\n\n    this._lastActive = active;\n  };\n\n  // Normally, the parent would execute it's handler first,\n  // then forward the event to listeners. However, here our handler\n  // is virtually only forwarding events to listeners, so we reverse the order\n  // to keep the proper order of the callbacks (from \"raw\" ones to \"processed\").\n  _onHandlerStateChange = e => {\n    this.props.onHandlerStateChange && this.props.onHandlerStateChange(e);\n    this._handleEvent(e);\n  };\n\n  _onGestureEvent = e => {\n    this.props.onGestureEvent && this.props.onGestureEvent(e);\n    this._handleEvent(e);\n  };\n\n  render() {\n    const { rippleColor, ...rest } = this.props;\n\n    return (\n      <RawButton\n        rippleColor={processColor(rippleColor)}\n        {...rest}\n        onGestureEvent={this._onGestureEvent}\n        onHandlerStateChange={this._onHandlerStateChange}\n      />\n    );\n  }\n}\n\nconst AnimatedBaseButton = Animated.createAnimatedComponent(BaseButton);\n\nconst btnStyles = StyleSheet.create({\n  underlay: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    top: 0,\n  },\n});\n\nexport class RectButton extends React.Component {\n  static propTypes = BaseButton.propTypes;\n\n  static defaultProps = {\n    activeOpacity: 0.105,\n    underlayColor: 'black',\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(0);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 0);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    const resolvedStyle = StyleSheet.flatten(style ?? {});\n\n    return (\n      <BaseButton\n        {...rest}\n        style={resolvedStyle}\n        onActiveStateChange={this._onActiveStateChange}>\n        <Animated.View\n          style={[\n            btnStyles.underlay,\n            {\n              opacity: this._opacity,\n              backgroundColor: this.props.underlayColor,\n              borderRadius: resolvedStyle.borderRadius,\n              borderTopLeftRadius: resolvedStyle.borderTopLeftRadius,\n              borderTopRightRadius: resolvedStyle.borderTopRightRadius,\n              borderBottomLeftRadius: resolvedStyle.borderBottomLeftRadius,\n              borderBottomRightRadius: resolvedStyle.borderBottomRightRadius,\n            },\n          ]}\n        />\n        {children}\n      </BaseButton>\n    );\n  }\n}\n\nexport class BorderlessButton extends React.Component {\n  static propTypes = {\n    ...BaseButton.propTypes,\n    borderless: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    activeOpacity: 0.3,\n    borderless: true,\n  };\n\n  constructor(props) {\n    super(props);\n    this._opacity = new Animated.Value(1);\n  }\n\n  _onActiveStateChange = active => {\n    if (Platform.OS !== 'android') {\n      this._opacity.setValue(active ? this.props.activeOpacity : 1);\n    }\n\n    this.props.onActiveStateChange && this.props.onActiveStateChange(active);\n  };\n\n  render() {\n    const { children, style, ...rest } = this.props;\n\n    return (\n      <AnimatedBaseButton\n        {...rest}\n        onActiveStateChange={this._onActiveStateChange}\n        style={[style, Platform.OS === 'ios' && { opacity: this._opacity }]}>\n        {children}\n      </AnimatedBaseButton>\n    );\n  }\n}\n\nexport { default as PureNativeButton } from './GestureHandlerButton';\n"]},"metadata":{},"sourceType":"module"}