{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.CheckboxContext = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _FormControl = require(\"../../composites/FormControl\");\n\nvar _useCheckboxGroup = require(\"./useCheckboxGroup\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar CheckboxContext = _react[\"default\"].createContext({});\n\nexports.CheckboxContext = CheckboxContext;\n\nvar CheckboxGroup = function CheckboxGroup(_ref) {\n  var size = _ref.size,\n      children = _ref.children,\n      colorScheme = _ref.colorScheme,\n      props = _objectWithoutProperties(_ref, [\"size\", \"children\", \"colorScheme\"]);\n\n  var formControlContext = _react[\"default\"].useContext(_FormControl.FormControlContext);\n\n  var _ref2 = (0, _useCheckboxGroup.useCheckboxGroup)(props, null, null),\n      checkboxGroupProps = _ref2.checkboxGroupProps;\n\n  var onChange = checkboxGroupProps.onChange,\n      values = checkboxGroupProps.values,\n      restCheckboxGroupProps = _objectWithoutProperties(checkboxGroupProps, [\"onChange\", \"values\"]);\n\n  return _react[\"default\"].createElement(CheckboxContext.Provider, {\n    value: _objectSpread({}, formControlContext, {\n      size: size,\n      colorScheme: colorScheme,\n      onChange: onChange,\n      value: values\n    })\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    alignItems: \"flex-start\"\n  }, restCheckboxGroupProps, props), children));\n};\n\nvar _default = CheckboxGroup;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["CheckboxGroup.tsx"],"names":["CheckboxContext","React","CheckboxGroup","props","formControlContext","FormControlContext","checkboxGroupProps","restCheckboxGroupProps","size","colorScheme","onChange","value","values"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,UAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,gCAAA;;AAKA,IAAA,iBAAA,GAAA,OAAA,sBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEO,IAAMA,eAAe,GAAGC,MAAAA,WAAAA,CAAAA,aAAAA,CAAxB,EAAwBA,CAAxB;;;;AAEP,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAKK;AAAA,MALJ,IAKI,QALJ,IAKI;AAAA,MALJ,QAKI,QALJ,QAKI;AAAA,MALJ,WAKI,QALJ,WAKI;AAAA,MADtBC,KACsB;;AACzB,MAAMC,kBAAuC,GAAGH,MAAAA,WAAAA,CAAAA,UAAAA,CAC9CI,YAAAA,CADF,kBAAgDJ,CAAhD;;AADyB,cAKM,CAAA,GAAA,iBAAA,CAAA,gBAAA,EAAA,KAAA,EAAA,IAAA,EAA/B,IAA+B,CALN;AAAA,MAKjBK,kBALiB,SAKjBA,kBALiB;;AAAA,MAMnB,QANmB,GAMzB,kBANyB,CAMnB,QANmB;AAAA,MAMnB,MANmB,GAMzB,kBANyB,CAMnB,MANmB;AAAA,MAMIC,sBANJ,4BAMzB,kBANyB;;AAQzB,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,eAAD,CAAA,QAAA,EAAA;AACE,IAAA,KAAK,oBAAE,kBAAF;AAEHC,MAAAA,IAFK,EAELA,IAFG;AAGHC,MAAAA,WAHK,EAGLA,WAHG;AAIHC,MAAAA,QAJK,EAILA,QAJG;AAKHC,MAAAA,KAAK,EAAEC;AALJ;AADP,GAAA,EASE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AAAK,IAAA,UAAU,EAAC;AAAhB,GAAA,EAAA,sBAAA,EAAA,KAAA,CAAA,EAVJ,QAUI,CATF,CADF;AAbF,CAAA;;eA8BeV,a","sourcesContent":["import React from 'react';\nimport Box from '../Box';\nimport {\n  FormControlContext,\n  IFormControlContext,\n} from '../../composites/FormControl';\nimport type { ICheckboxGroupProps } from './props';\nimport { useCheckboxGroup } from './useCheckboxGroup';\n\nexport const CheckboxContext = React.createContext({});\n\nconst CheckboxGroup = ({\n  size,\n  children,\n  colorScheme,\n  ...props\n}: ICheckboxGroupProps) => {\n  const formControlContext: IFormControlContext = React.useContext(\n    FormControlContext\n  );\n\n  const { checkboxGroupProps } = useCheckboxGroup(props, null, null);\n  const { onChange, values, ...restCheckboxGroupProps } = checkboxGroupProps;\n\n  return (\n    <CheckboxContext.Provider\n      value={{\n        ...formControlContext,\n        size,\n        colorScheme,\n        onChange,\n        value: values,\n      }}\n    >\n      <Box alignItems=\"flex-start\" {...restCheckboxGroupProps} {...props}>\n        {children}\n      </Box>\n    </CheckboxContext.Provider>\n  );\n};\n\nexport default CheckboxGroup;\n"]},"metadata":{},"sourceType":"script"}