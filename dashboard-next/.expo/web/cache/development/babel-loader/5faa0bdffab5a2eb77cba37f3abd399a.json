{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Avatar = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _hooks = require(\"../../../hooks\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar initials = function initials(name) {\n  var _name$split = name.split(' '),\n      _name$split2 = _slicedToArray(_name$split, 2),\n      firstName = _name$split2[0],\n      lastName = _name$split2[1];\n\n  return firstName && lastName ? \"\".concat(firstName.charAt(0)).concat(lastName.charAt(0)) : firstName.charAt(0);\n};\n\nvar StyledAvatar = (0, _native[\"default\"])(_primitives.Box)({});\n\nvar Avatar = function Avatar(props) {\n  var size = props.size,\n      name = props.name,\n      style = props.style,\n      source = props.source,\n      children = props.children,\n      remainingProps = _objectWithoutProperties(props, [\"size\", \"name\", \"style\", \"source\", \"children\"]);\n\n  var _ref = (0, _hooks.usePropsConfig)('Avatar', _objectSpread({}, remainingProps, {\n    name: name,\n    size: size\n  })),\n      color = _ref.color,\n      fontSize = _ref.fontSize,\n      fontWeight = _ref.fontWeight,\n      newProps = _objectWithoutProperties(_ref, [\"color\", \"fontSize\", \"fontWeight\"]);\n\n  var textProps = {\n    color: color,\n    fontSize: fontSize,\n    fontWeight: fontWeight\n  };\n  var imageFitStyle = {\n    height: '100%',\n    width: '100%'\n  };\n  return _react[\"default\"].createElement(StyledAvatar, _extends({}, newProps, {\n    style: style\n  }), source ? _react[\"default\"].createElement(_primitives.Image, {\n    borderRadius: newProps.borderRadius,\n    source: source,\n    alt: name ? initials(name) : '--',\n    textProps: {\n      color: color,\n      fontSize: fontSize,\n      fontWeight: fontWeight\n    },\n    style: [style, imageFitStyle]\n  }) : _react[\"default\"].createElement(_primitives.Text, textProps, name ? initials(name) : '--'), children);\n};\n\nexports.Avatar = Avatar;","map":{"version":3,"sources":["Avatar.tsx"],"names":["initials","name","firstName","lastName","StyledAvatar","Box","Avatar","props","remainingProps","newProps","size","textProps","color","fontSize","fontWeight","imageFitStyle","height","width","style","source"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,oBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,QAAQ,GAAIC,SAAZD,QAAYC,CAAAA,IAAD,EAAkB;AAAA,oBACHA,IAAI,CAAJA,KAAAA,CAA9B,GAA8BA,CADG;AAAA;AAAA,MAC3B,SAD2B;AAAA,MAC3B,QAD2B;;AAEjC,SAAOC,SAAS,IAATA,QAAAA,GAAAA,GAAAA,MAAAA,CACAA,SAAS,CAATA,MAAAA,CADAA,CACAA,CADAA,EAAAA,MAAAA,CACsBC,QAAQ,CAARA,MAAAA,CADtBD,CACsBC,CADtBD,CAAAA,GAEHA,SAAS,CAATA,MAAAA,CAFJ,CAEIA,CAFJ;AAFF,CAAA;;AAOA,IAAME,YAAY,GAAG,CAAA,GAAA,OAAA,WAAA,EAAOC,WAAAA,CAAP,GAAA,EAArB,EAAqB,CAArB;;AAEO,IAAMC,MAAM,GACjBC,SADWD,MACXC,CAAAA,KADoB,EAIjB;AAAA,MACG,IADH,GACH,KADG,CACG,IADH;AAAA,MACG,IADH,GACH,KADG,CACG,IADH;AAAA,MACG,KADH,GACH,KADG,CACG,KADH;AAAA,MACG,MADH,GACH,KADG,CACG,MADH;AAAA,MACG,QADH,GACH,KADG,CACG,QADH;AAAA,MAC6CC,cAD7C,4BACH,KADG;;AAAA,aAEkD,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,QAAA,oBAEnD,cAFmD;AAE9BP,IAAAA,IAArB,EAAqBA,IAF8B;AAExBS,IAAAA,IAAAA,EAAAA;AAFwB,KAFlD;AAAA,MAEG,KAFH,QAEG,KAFH;AAAA,MAEG,QAFH,QAEG,QAFH;AAAA,MAEG,UAFH,QAEG,UAFH;AAAA,MAEqCD,QAFrC;;AAMH,MAAME,SAAS,GAAG;AAAEC,IAAAA,KAAF,EAAEA,KAAF;AAASC,IAAAA,QAAT,EAASA,QAAT;AAAmBC,IAAAA,UAAAA,EAAAA;AAAnB,GAAlB;AACA,MAAMC,aAAa,GAAG;AAAEC,IAAAA,MAAM,EAAR,MAAA;AAAkBC,IAAAA,KAAK,EAAE;AAAzB,GAAtB;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAA,YAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAA4B,IAAA,KAAK,EAAEC;AAAnC,GAAA,CAAA,EACGC,MAAM,GACL,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,KAAA,EAAA;AACE,IAAA,YAAY,EAAEV,QAAQ,CADxB,YAAA;AAEE,IAAA,MAAM,EAFR,MAAA;AAGE,IAAA,GAAG,EAAER,IAAI,GAAGD,QAAQ,CAAX,IAAW,CAAX,GAHX,IAAA;AAIE,IAAA,SAAS,EAAE;AACTY,MAAAA,KADS,EACTA,KADS;AAETC,MAAAA,QAFS,EAETA,QAFS;AAGTC,MAAAA,UAAAA,EAAAA;AAHS,KAJb;AASE,IAAA,KAAK,EAAE,CAAA,KAAA,EAAA,aAAA;AATT,GAAA,CADK,GAaL,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,IAAA,EAAA,SAAA,EAAsBb,IAAI,GAAGD,QAAQ,CAAX,IAAW,CAAX,GAd9B,IAcI,CAdJ,EADF,QACE,CADF;AAZK,CAAA","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport { Box, Image, Text } from '../../primitives';\nimport { usePropsConfig } from '../../../hooks';\nimport type { IAvatarProps } from './props';\n\nconst initials = (name: string) => {\n  const [firstName, lastName] = name.split(' ');\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0);\n};\n\nconst StyledAvatar = styled(Box)<IAvatarProps>({});\n\nexport const Avatar = (\n  props: IAvatarProps & {\n    children?: JSX.Element[] | JSX.Element | any | undefined;\n  }\n) => {\n  const { size, name, style, source, children, ...remainingProps } = props;\n  const { color, fontSize, fontWeight, ...newProps } = usePropsConfig(\n    'Avatar',\n    { ...remainingProps, name, size }\n  );\n  const textProps = { color, fontSize, fontWeight };\n  const imageFitStyle = { height: '100%', width: '100%' };\n  return (\n    <StyledAvatar {...newProps} style={style}>\n      {source ? (\n        <Image\n          borderRadius={newProps.borderRadius}\n          source={source}\n          alt={name ? initials(name) : '--'}\n          textProps={{\n            color,\n            fontSize,\n            fontWeight,\n          }}\n          style={[style, imageFitStyle]}\n        />\n      ) : (\n        <Text {...textProps}>{name ? initials(name) : '--'}</Text>\n      )}\n      {children}\n    </StyledAvatar>\n  );\n};\n"]},"metadata":{},"sourceType":"script"}