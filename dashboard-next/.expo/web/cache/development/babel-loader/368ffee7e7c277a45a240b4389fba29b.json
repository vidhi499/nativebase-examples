{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Alert = function Alert(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _ref2 = (0, _hooks.usePropsConfig)('Alert', props),\n      status = _ref2.status,\n      variant = _ref2.variant,\n      iconColor = _ref2.iconColor,\n      textColor = _ref2.textColor,\n      newProps = _objectWithoutProperties(_ref2, [\"status\", \"variant\", \"iconColor\", \"textColor\"]);\n\n  return _react[\"default\"].createElement(_Context.AlertContext.Provider, {\n    value: {\n      status: status,\n      variant: variant,\n      iconColor: iconColor,\n      textColor: textColor\n    }\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    minW: \"100%\",\n    maxW: \"100%\",\n    position: \"relative\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\"\n  }, newProps), children));\n};\n\nvar _default = Alert;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["Alert.tsx"],"names":["Alert","props","newProps","status","variant","iconColor","textColor"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAG,SAARA,KAAQ,OAAyC;AAAA,MAAxC,QAAwC,QAAxC,QAAwC;AAAA,MAAzBC,KAAyB;;AAAA,cACU,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,OAAA,EAA/D,KAA+D,CADV;AAAA,MAC/C,MAD+C,SAC/C,MAD+C;AAAA,MAC/C,OAD+C,SAC/C,OAD+C;AAAA,MAC/C,SAD+C,SAC/C,SAD+C;AAAA,MAC/C,SAD+C,SAC/C,SAD+C;AAAA,MACHC,QADG;;AAMrD,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,QAAA,CAAD,YAAC,CAAD,QAAA,EAAA;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,MADK,EACLA,MADK;AAELC,MAAAA,OAFK,EAELA,OAFK;AAGLC,MAAAA,SAHK,EAGLA,SAHK;AAILC,MAAAA,SAAAA,EAAAA;AAJK;AADT,GAAA,EAQE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EADN,MAAA;AAEE,IAAA,IAAI,EAFN,MAAA;AAGE,IAAA,QAAQ,EAHV,UAAA;AAIE,IAAA,aAAa,EAJf,KAAA;AAKE,IAAA,UAAU,EALZ,QAAA;AAME,IAAA,cAAc,EANhB,YAAA;AAOE,IAAA,QAAQ,EAAC;AAPX,GAAA,EAAA,QAAA,CAAA,EATJ,QASI,CARF,CADF;AANF,CAAA;;eA+BeN,K","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { usePropsConfig } from '../../../hooks';\nimport type { IAlertProps } from './props';\nimport { AlertContext } from './Context';\n\nconst Alert = ({ children, ...props }: IAlertProps) => {\n  const { status, variant, iconColor, textColor, ...newProps } = usePropsConfig(\n    'Alert',\n    props\n  );\n\n  return (\n    <AlertContext.Provider\n      value={{\n        status,\n        variant,\n        iconColor,\n        textColor,\n      }}\n    >\n      <Box\n        minW=\"100%\"\n        maxW=\"100%\"\n        position=\"relative\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        flexWrap=\"wrap\"\n        {...newProps}\n      >\n        {children}\n      </Box>\n    </AlertContext.Provider>\n  );\n};\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"script"}