{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SVGIcon = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _reactNativeSvg = _interopRequireWildcard(require(\"react-native-svg\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar SVG = (0, _native[\"default\"])(_reactNativeSvg[\"default\"])(_styledSystem.color, _styledSystem.space, _styledSystem.typography);\n\nvar SVGIcon = function SVGIcon(_ref) {\n  var viewBox = _ref.viewBox,\n      colorProp = _ref.color,\n      stroke = _ref.stroke,\n      strokeWidth = _ref.strokeWidth,\n      children = _ref.children,\n      focusable = _ref.focusable,\n      size = _ref.size,\n      style = _ref.style;\n  var newProps = (0, _hooks.usePropsConfig)('Icon', {\n    size: size\n  });\n  var strokeColor = (0, _hooks.useToken)('colors', stroke || '');\n  colorProp = (0, _hooks.useToken)('colors', colorProp || '');\n  return _react[\"default\"].createElement(SVG, {\n    height: parseInt(newProps.dimension || newProps.size, 10),\n    width: parseInt(newProps.dimension || newProps.size, 10),\n    viewBox: viewBox,\n    color: colorProp,\n    stroke: strokeColor,\n    strokeWidth: strokeWidth,\n    focusable: focusable,\n    accessibilityRole: 'image',\n    style: style\n  }, _react[\"default\"].Children.count(children) > 0 ? _react[\"default\"].createElement(_reactNativeSvg.G, null, _react[\"default\"].Children.map(children, function (_ref2) {\n    var childProps = _ref2.props,\n        type = _ref2.type;\n    return type.name === 'Path' ? _react[\"default\"].createElement(ChildPath, childProps) : null;\n  })) : getDefaultIcon());\n};\n\nexports.SVGIcon = SVGIcon;\n\nvar ChildPath = function ChildPath(_ref3) {\n  var fill = _ref3.fill,\n      pathStroke = _ref3.stroke,\n      remainingProps = _objectWithoutProperties(_ref3, [\"fill\", \"stroke\"]);\n\n  var pathStrokeColor = (0, _hooks.useToken)('colors', pathStroke || '');\n  var fillColor = (0, _hooks.useToken)('colors', fill || '');\n  return _react[\"default\"].createElement(_reactNativeSvg.Path, _extends({}, remainingProps, {\n    fill: fillColor ? fillColor : 'currentColor',\n    stroke: pathStrokeColor\n  }));\n};\n\nvar getDefaultIcon = function getDefaultIcon() {\n  return _react[\"default\"].createElement(_reactNativeSvg.G, {\n    strokeWidth: 1.5,\n    stroke: \"currentColor\"\n  }, _react[\"default\"].createElement(_reactNativeSvg.Path, {\n    d: 'M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25',\n    fill: \"none\"\n  }), _react[\"default\"].createElement(_reactNativeSvg.Path, {\n    d: 'M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0',\n    fill: \"none\"\n  }), _react[\"default\"].createElement(_reactNativeSvg.Circle, {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"11.25\",\n    fill: \"none\"\n  }));\n};","map":{"version":3,"sources":["SVGIcon.tsx"],"names":["SVG","Svg","color","space","typography","SVGIcon","style","newProps","size","strokeColor","stroke","colorProp","parseInt","React","props","type","getDefaultIcon","ChildPath","remainingProps","pathStrokeColor","pathStroke","fillColor","fill"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { usePropsConfig } from '../../../hooks';\nimport { useToken } from '../../../hooks';\nimport styled from 'styled-components/native';\nimport { color, space, typography } from 'styled-system';\nimport Svg, { G, Path, Circle } from 'react-native-svg';\nimport type { IIconProps } from './props';\n\nconst SVG = styled(Svg)<IIconProps>(color, space, typography);\nconst SVGIcon = ({\n  viewBox,\n  color: colorProp,\n  stroke,\n  strokeWidth,\n  children,\n  focusable,\n  size,\n  style,\n}: IIconProps) => {\n  const newProps = usePropsConfig('Icon', { size });\n  let strokeColor = useToken('colors', stroke || '');\n  colorProp = useToken('colors', colorProp || '');\n  return (\n    <SVG\n      height={parseInt(newProps.dimension || newProps.size, 10)}\n      width={parseInt(newProps.dimension || newProps.size, 10)}\n      viewBox={viewBox}\n      color={colorProp}\n      stroke={strokeColor}\n      strokeWidth={strokeWidth}\n      focusable={focusable}\n      accessibilityRole={'image'}\n      style={style}\n    >\n      {React.Children.count(children) > 0 ? (\n        <G>\n          {React.Children.map(children, ({ props: childProps, type }: any) =>\n            type.name === 'Path' ? <ChildPath {...childProps} /> : null\n          )}\n        </G>\n      ) : (\n        getDefaultIcon()\n      )}\n    </SVG>\n  );\n};\nconst ChildPath = ({ fill, stroke: pathStroke, ...remainingProps }: any) => {\n  let pathStrokeColor = useToken('colors', pathStroke || '');\n  let fillColor = useToken('colors', fill || '');\n  return (\n    <Path\n      {...remainingProps}\n      fill={fillColor ? fillColor : 'currentColor'}\n      stroke={pathStrokeColor}\n    />\n  );\n};\nconst getDefaultIcon = () => {\n  return (\n    <G strokeWidth={1.5} stroke=\"currentColor\">\n      <Path\n        d={'M9,9a3,3,0,1,1,4,2.829,1.5,1.5,0,0,0-1,1.415V14.25'}\n        fill=\"none\"\n      />\n      <Path\n        d={'M12,17.25a.375.375,0,1,0,.375.375A.375.375,0,0,0,12,17.25h0'}\n        fill=\"none\"\n      />\n      <Circle cx=\"12\" cy=\"12\" r=\"11.25\" fill=\"none\" />\n    </G>\n  );\n};\nexport { SVGIcon };\n"]},"metadata":{},"sourceType":"script"}