{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _get = _interopRequireDefault(require(\"lodash/get\"));\n\nvar _tools = require(\"../tools\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction baseStyleTrack(props) {\n  var colorScheme = props.colorScheme,\n      theme = props.theme,\n      offTrackColor = props.offTrackColor;\n  var simplifiedColorScheme = (0, _tools.getColorScheme)(props);\n  return colorScheme && colorScheme !== 'default' ? {\n    \"false\": offTrackColor ? (0, _tools.mode)(theme.colors[offTrackColor][400], theme.colors[offTrackColor][100])(props) : (0, _tools.mode)(theme.colors.light[100], theme.colors.dark[50])(props),\n    \"true\": (0, _tools.mode)(theme.colors[simplifiedColorScheme][500], theme.colors[simplifiedColorScheme][200])(props)\n  } : undefined;\n}\n\nfunction baseStyleThumb(props) {\n  return props.checked ? props.onColor ? (0, _get[\"default\"])(props.theme.colors, props.onColor) : undefined : props.offColor ? (0, _get[\"default\"])(props.theme.colors, props.offColor) : undefined;\n}\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    trackColor: baseStyleTrack(props),\n    thumbColor: baseStyleThumb(props)\n  };\n};\n\nvar sizes = {\n  sm: {\n    transform: [{\n      scale: 0.75\n    }]\n  },\n  md: {},\n  lg: {\n    transform: [{\n      scale: 1.25\n    }],\n    margin: 1\n  }\n};\nvar defaultProps = {\n  size: 'md',\n  colorScheme: 'default'\n};\nvar _default = {\n  baseStyle: baseStyle,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["switch.ts"],"names":["offTrackColor","simplifiedColorScheme","colorScheme","false","theme","true","props","baseStyle","trackColor","baseStyleTrack","thumbColor","baseStyleThumb","sizes","sm","transform","scale","md","lg","margin","defaultProps","size"],"mappings":";;;;;;;AAAA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,YAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,YAAA;;;;;;;;AAEA,SAAA,cAAA,CAAA,KAAA,EAAoD;AAAA,MAC5C,WAD4C,GAClD,KADkD,CAC5C,WAD4C;AAAA,MAC5C,KAD4C,GAClD,KADkD,CAC5C,KAD4C;AAAA,MACtBA,aADsB,GAClD,KADkD,CACtBA,aADsB;AAElD,MAAMC,qBAAqB,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAA9B,KAA8B,CAA9B;AACA,SAAO,WAAW,IAAIC,WAAW,KAA1B,SAAA,GACH;AACEC,aAAOH,aAAa,GAChB,CAAA,GAAA,MAAA,CAAA,IAAA,EACEI,KAAK,CAALA,MAAAA,CAAAA,aAAAA,EADF,GACEA,CADF,EAEEA,KAAK,CAALA,MAAAA,CAAAA,aAAAA,EAFF,GAEEA,CAFF,EADgB,KAChB,CADgB,GAKhB,CAAA,GAAA,MAAA,CAAA,IAAA,EAAKA,KAAK,CAALA,MAAAA,CAAAA,KAAAA,CAAL,GAAKA,CAAL,EAA8BA,KAAK,CAALA,MAAAA,CAAAA,IAAAA,CAA9B,EAA8BA,CAA9B,EANN,KAMM,CANN;AAOEC,YAAM,CAAA,GAAA,MAAA,CAAA,IAAA,EACJD,KAAK,CAALA,MAAAA,CAAAA,qBAAAA,EADI,GACJA,CADI,EAEJA,KAAK,CAALA,MAAAA,CAAAA,qBAAAA,EAFI,GAEJA,CAFI,EAAA,KAAA;AAPR,GADG,GAAP,SAAA;AAcD;;AACD,SAAA,cAAA,CAAA,KAAA,EAAoD;AAClD,SAAOE,KAAK,CAALA,OAAAA,GACHA,KAAK,CAALA,OAAAA,GACE,CAAA,GAAA,IAAA,WAAA,EAAIA,KAAK,CAALA,KAAAA,CAAJ,MAAA,EAAwBA,KAAK,CAD/BA,OACE,CADFA,GADGA,SAAAA,GAIHA,KAAK,CAALA,QAAAA,GACA,CAAA,GAAA,IAAA,WAAA,EAAIA,KAAK,CAALA,KAAAA,CAAJ,MAAA,EAAwBA,KAAK,CAD7BA,QACA,CADAA,GAJJ,SAAA;AAOD;;AAED,IAAMC,SAAS,GAAID,SAAbC,SAAaD,CAAAA,KAAD;AAAA,SAAiC;AACjDE,IAAAA,UAAU,EAAEC,cAAc,CADuB,KACvB,CADuB;AAEjDC,IAAAA,UAAU,EAAEC,cAAc,CAAA,KAAA;AAFuB,GAAjC;AAAA,CAAlB;;AAKA,IAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE;AACFC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD;AADT,GADQ;AAIZC,EAAAA,EAAE,EAJU,EAAA;AAKZC,EAAAA,EAAE,EAAE;AACFH,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAD,CADT;AAEFG,IAAAA,MAAM,EAAE;AAFN;AALQ,CAAd;AAWA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EADe,IAAA;AAEnBlB,EAAAA,WAAW,EAAE;AAFM,CAArB;eAKe;AACbK,EAAAA,SADa,EACbA,SADa;AAEbK,EAAAA,KAFa,EAEbA,KAFa;AAGbO,EAAAA,YAAAA,EAAAA;AAHa,C","sourcesContent":["import get from 'lodash/get';\nimport { mode, getColorScheme } from '../tools';\n\nfunction baseStyleTrack(props: Record<string, any>) {\n  const { colorScheme, theme, offTrackColor } = props;\n  const simplifiedColorScheme = getColorScheme(props);\n  return colorScheme && colorScheme !== 'default'\n    ? {\n        false: offTrackColor\n          ? mode(\n              theme.colors[offTrackColor][400],\n              theme.colors[offTrackColor][100]\n            )(props)\n          : mode(theme.colors.light[100], theme.colors.dark[50])(props),\n        true: mode(\n          theme.colors[simplifiedColorScheme][500],\n          theme.colors[simplifiedColorScheme][200]\n        )(props),\n      }\n    : undefined;\n}\nfunction baseStyleThumb(props: Record<string, any>) {\n  return props.checked\n    ? props.onColor\n      ? get(props.theme.colors, props.onColor)\n      : undefined\n    : props.offColor\n    ? get(props.theme.colors, props.offColor)\n    : undefined;\n}\n\nconst baseStyle = (props: Record<string, any>) => ({\n  trackColor: baseStyleTrack(props),\n  thumbColor: baseStyleThumb(props),\n});\n\nconst sizes = {\n  sm: {\n    transform: [{ scale: 0.75 }],\n  },\n  md: {},\n  lg: {\n    transform: [{ scale: 1.25 }],\n    margin: 1,\n  },\n};\n\nconst defaultProps = {\n  size: 'md',\n  colorScheme: 'default',\n};\n\nexport default {\n  baseStyle,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}