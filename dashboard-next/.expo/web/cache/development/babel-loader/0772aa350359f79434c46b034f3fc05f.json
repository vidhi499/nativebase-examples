{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _usePropsConfig = require(\"../../../hooks/usePropsConfig\");\n\nvar _theme = require(\"../../../theme\");\n\nvar _utils = require(\"../../../utils\");\n\nvar _customProps = require(\"../../../utils/customProps\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledBox = (0, _native[\"default\"])(_reactNative.View)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _styledSystem.typography, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customTypography, _customProps.customLayout);\n\nvar Box = function Box(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _theme$themeTools$ext = _theme.themeTools.extractInObject(props, ['fontWeight', 'fontFamily', 'fontSize', 'color', 'textDecoration', 'txtDecor', 'wordBreak', 'textOverflow', 'textTransform', 'whiteSpace', 'overflowWrap']),\n      _theme$themeTools$ext2 = _slicedToArray(_theme$themeTools$ext, 2),\n      textProps = _theme$themeTools$ext2[0],\n      remainingProps = _theme$themeTools$ext2[1];\n\n  var boxProps = (0, _usePropsConfig.usePropsConfig)('Box', remainingProps);\n  return _react[\"default\"].createElement(StyledBox, _extends({\n    ref: ref\n  }, boxProps), (0, _utils.addTextAndPropsToStrings)(children, textProps));\n};\n\nvar _default = (0, _react.forwardRef)(Box);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledBox","View","color","space","layout","flexbox","border","position","typography","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customTypography","customLayout","Box","props","themeTools","boxProps","ref"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAGA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AASA,IAAA,eAAA,GAAA,OAAA,iCAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,YAAA,GAAA,OAAA,8BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAMA,SAAS,GAAG,CAAA,GAAA,OAAA,WAAA,EAAOC,YAAAA,CAAP,IAAA,EAChBC,aAAAA,CADgB,KAAA,EAEhBC,aAAAA,CAFgB,KAAA,EAGhBC,aAAAA,CAHgB,MAAA,EAIhBC,aAAAA,CAJgB,OAAA,EAKhBC,aAAAA,CALgB,MAAA,EAMhBC,aAAAA,CANgB,QAAA,EAOhBC,aAAAA,CAPgB,UAAA,EAQhBC,YAAAA,CARgB,cAAA,EAShBC,YAAAA,CATgB,YAAA,EAUhBC,YAAAA,CAVgB,gBAAA,EAWhBC,YAAAA,CAXgB,aAAA,EAYhBC,YAAAA,CAZgB,YAAA,EAahBC,YAAAA,CAbgB,WAAA,EAchBC,YAAAA,CAdgB,gBAAA,EAehBC,YAAAA,CAfF,YAAkB,CAAlB;;AAkBA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAA,GAAA,EAAiD;AAAA,MAAhD,QAAgD,QAAhD,QAAgD;AAAA,MAAjCC,KAAiC;;AAAA,8BAEzBC,MAAAA,CAAAA,UAAAA,CAAAA,eAAAA,CAAAA,KAAAA,EAAkC,CAAA,YAAA,EAAA,YAAA,EAAA,UAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,cAAA,EAAA,eAAA,EAAA,YAAA,EAApE,cAAoE,CAAlCA,CAFyB;AAAA;AAAA,MAEvD,SAFuD;AAAA,MAEvD,cAFuD;;AAe3D,MAAMC,QAAQ,GAAG,CAAA,GAAA,eAAA,CAAA,cAAA,EAAA,KAAA,EAAjB,cAAiB,CAAjB;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;AAAW,IAAA,GAAG,EAAEC;AAAhB,GAAA,EAAA,QAAA,CAAA,EACG,CAAA,GAAA,MAAA,CAAA,wBAAA,EAAA,QAAA,EAFL,SAEK,CADH,CADF;AAhBF,CAAA;;eAyBe,CAAA,GAAA,MAAA,CAAA,UAAA,EAAA,GAAA,C","sourcesContent":["import React, { forwardRef } from 'react';\nimport type { View as ViewType } from 'react-native';\nimport { View } from 'react-native';\nimport styled from 'styled-components/native';\nimport {\n  border,\n  color,\n  flexbox,\n  layout,\n  position,\n  space,\n  typography,\n} from 'styled-system';\nimport { usePropsConfig } from '../../../hooks/usePropsConfig';\nimport { themeTools } from '../../../theme';\nimport { addTextAndPropsToStrings } from '../../../utils';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n  customTypography,\n} from '../../../utils/customProps';\nimport type { IBoxProps } from './props';\n\nconst StyledBox = styled(View)<IBoxProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  typography,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customTypography,\n  customLayout\n);\n\nconst Box = ({ children, ...props }: IBoxProps, ref: any) => {\n  // TextProps that contain all the props related to text and gets added to child text components using addTextAndPropsToStrings() method\n  let [textProps, remainingProps] = themeTools.extractInObject(props, [\n    'fontWeight',\n    'fontFamily',\n    'fontSize',\n    'color',\n    'textDecoration',\n    'txtDecor',\n    'wordBreak',\n    'textOverflow',\n    'textTransform',\n    'whiteSpace',\n    'overflowWrap',\n  ]);\n  const boxProps = usePropsConfig('Box', remainingProps);\n  return (\n    <StyledBox ref={ref} {...boxProps}>\n      {addTextAndPropsToStrings(children, textProps)}\n    </StyledBox>\n  );\n};\n\nexport type { IBoxProps } from './props';\n\nexport default forwardRef<ViewType, IBoxProps>(Box);\n"]},"metadata":{},"sourceType":"script"}