{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _hooks = require(\"../../../hooks\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Progress = function Progress(_ref) {\n  var value = _ref.value,\n      isIndeterminate = _ref.isIndeterminate,\n      props = _objectWithoutProperties(_ref, [\"value\", \"isIndeterminate\"]);\n\n  var newProps = (0, _hooks.usePropsConfig)('Progress', props);\n  var innerBg = newProps.innerBg;\n  var innerProps = {\n    bg: innerBg,\n    shadow: 0,\n    rounded: newProps.rounded,\n    height: '100%',\n    w: value + '%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white'\n  };\n  return _react[\"default\"].createElement(_primitives.Box, _extends({}, newProps, {\n    style: props.style\n  }), isIndeterminate ? _react[\"default\"].createElement(_primitives.Box, _extends({}, innerProps, {\n    children: newProps.children\n  })) : _react[\"default\"].createElement(_primitives.Box, _extends({}, innerProps, {\n    children: newProps.children\n  })));\n};\n\nvar _default = Progress;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["Progress","props","newProps","innerBg","innerProps","bg","shadow","rounded","height","w","value","display","alignItems","justifyContent","color","style","isIndeterminate","children"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,oBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,OAA0D;AAAA,MAAzD,KAAyD,QAAzD,KAAyD;AAAA,MAAzD,eAAyD,QAAzD,eAAyD;AAAA,MAA5BC,KAA4B;;AAYzE,MAAIC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,UAAA,EAAf,KAAe,CAAf;AAZyE,MAajEC,OAbiE,GAazE,QAbyE,CAajEA,OAbiE;AAczE,MAAMC,UAAU,GAAG;AACjBC,IAAAA,EAAE,EADe,OAAA;AAEjBC,IAAAA,MAAM,EAFW,CAAA;AAGjBC,IAAAA,OAAO,EAAEL,QAAQ,CAHA,OAAA;AAIjBM,IAAAA,MAAM,EAJW,MAAA;AAKjBC,IAAAA,CAAC,EAAEC,KAAK,GALS,GAAA;AAMjBC,IAAAA,OAAO,EANU,MAAA;AAOjBC,IAAAA,UAAU,EAPO,QAAA;AAQjBC,IAAAA,cAAc,EARG,QAAA;AASjBC,IAAAA,KAAK,EAAE;AATU,GAAnB;AAWA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAAmB,IAAA,KAAK,EAAEb,KAAK,CAACc;AAAhC,GAAA,CAAA,EACGC,eAAe,GAad,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAAqB,IAAA,QAAQ,EAAEd,QAAQ,CAACe;AAAxC,GAAA,CAAA,CAbc,GAed,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,UAAA,EAAA;AAAqB,IAAA,QAAQ,EAAEf,QAAQ,CAACe;AAAxC,GAAA,CAAA,CAhBJ,CADF;AAzBF,CAAA;;eAgDejB,Q","sourcesContent":["import React from 'react';\nimport type { ViewStyle } from 'react-native';\nimport { Box, IBoxProps } from '../../primitives';\nimport { usePropsConfig } from '../../../hooks';\n\ntype SpaceType = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n\nexport type IProgressProps = IBoxProps & {\n  style?: ViewStyle;\n  children?: JSX.Element | JSX.Element[] | string;\n  value?: number;\n  size?: SpaceType | string;\n  colorScheme?: string;\n  isIndeterminate?: any;\n};\n\nconst Progress = ({ value, isIndeterminate, ...props }: IProgressProps) => {\n  // const width = new Animated.Value(0);\n  // useEffect(() => {\n  //   Animated.loop(\n  //     Animated.timing(width, {\n  //       toValue: 270,\n  //       duration: 1000,\n  //       useNativeDriver: true,\n  //     })\n  //   ).start();\n  // });\n\n  let newProps = usePropsConfig('Progress', props);\n  const { innerBg } = newProps;\n  const innerProps = {\n    bg: innerBg,\n    shadow: 0,\n    rounded: newProps.rounded,\n    height: '100%',\n    w: value + '%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: 'white',\n  };\n  return (\n    <Box {...newProps} style={props.style}>\n      {isIndeterminate ? (\n        // <Animated.View\n        //   style={[\n        //     {\n        //       transform: [\n        //         {\n        //           translateX: width,\n        //         },\n        //       ],\n        //     },\n        //   ]}\n        // >\n        // </Animated.View>\n        <Box {...innerProps} children={newProps.children} />\n      ) : (\n        <Box {...innerProps} children={newProps.children} />\n      )}\n    </Box>\n  );\n};\n\nexport default Progress;\n"]},"metadata":{},"sourceType":"script"}