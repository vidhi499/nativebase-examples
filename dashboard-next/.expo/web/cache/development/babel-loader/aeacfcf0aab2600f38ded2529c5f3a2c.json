{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useTypeaheadReducer = useTypeaheadReducer;\n\nvar stateChangeTypes = _interopRequireWildcard(require(\"./types\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction useTypeaheadReducer(state, action) {\n  var type = action.type,\n      props = action.props;\n  var changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index])\n      };\n      break;\n\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false\n        };\n      }\n\n      break;\n\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen\n      };\n      break;\n\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true\n      };\n      break;\n\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem)\n      };\n      break;\n\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue\n      };\n      break;\n\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: (0, _utils.getDefaultValue)(props, 'isOpen'),\n        selectedItem: (0, _utils.getDefaultValue)(props, 'selectedItem'),\n        inputValue: (0, _utils.getDefaultValue)(props, 'inputValue')\n      };\n      break;\n\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return _objectSpread({}, state, {}, changes);\n}","map":{"version":3,"sources":["reducer.tsx"],"names":["props","stateChangeTypes","changes","isOpen","selectedItem","action","inputValue","state"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,gBAAA,GAAA,uBAAA,CAAA,OAAA,WAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQO,SAAA,mBAAA,CAAA,KAAA,EAAA,MAAA,EAAyD;AAAA,MACxD,IADwD,GAC9D,MAD8D,CACxD,IADwD;AAAA,MAChDA,KADgD,GAC9D,MAD8D,CAChDA,KADgD;AAE9D,MAAA,OAAA;;AAEA,UAAA,IAAA;AACE,SAAKC,gBAAgB,CAArB,SAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,KAAA,EADA,QACA,CADA;AAERC,QAAAA,YAAY,EAAEJ,KAAK,CAALA,KAAAA,CAAYK,MAAM,CAFxB,KAEML,CAFN;AAGRM,QAAAA,UAAU,EAAEN,KAAK,CAALA,YAAAA,CAAmBA,KAAK,CAALA,KAAAA,CAAYK,MAAM,CAArCL,KAAmBA,CAAnBA;AAHJ,OAAVE;AAKA;;AACF,SAAKD,gBAAgB,CAArB,SAAA;AACE,UAAIM,KAAK,CAAT,MAAA,EAAkB;AAChBL,QAAAA,OAAO,GAAG;AACRC,UAAAA,MAAM,EAAE;AADA,SAAVD;AAGD;;AACD;;AACF,SAAKD,gBAAgB,CAArB,WAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EADE,IAAA;AAERG,QAAAA,UAAU,EAAED,MAAM,CAACC;AAFX,OAAVJ;AAIA;;AAEF,SAAKD,gBAAgB,CAArB,iBAAA;AACA,SAAKA,gBAAgB,CAArB,kBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,CAACI,KAAK,CAACJ;AADP,OAAVD;AAGA;;AACF,SAAKD,gBAAgB,CAArB,gBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE;AADA,OAAVD;AAGA;;AACF,SAAKD,gBAAgB,CAArB,iBAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE;AADA,OAAVD;AAGA;;AAEF,SAAKD,gBAAgB,CAArB,kBAAA;AACEC,MAAAA,OAAO,GAAG;AACRE,QAAAA,YAAY,EAAEC,MAAM,CADZ,YAAA;AAERC,QAAAA,UAAU,EAAEN,KAAK,CAALA,YAAAA,CAAmBK,MAAM,CAAzBL,YAAAA;AAFJ,OAAVE;AAIA;;AACF,SAAKD,gBAAgB,CAArB,iCAAA;AACA,SAAKA,gBAAgB,CAArB,qBAAA;AACEC,MAAAA,OAAO,GAAG;AACRI,QAAAA,UAAU,EAAED,MAAM,CAACC;AADX,OAAVJ;AAGA;;AACF,SAAKD,gBAAgB,CAArB,aAAA;AACEC,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,KAAA,EADA,QACA,CADA;AAERC,QAAAA,YAAY,EAAE,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,KAAA,EAFN,cAEM,CAFN;AAGRE,QAAAA,UAAU,EAAE,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,KAAA,EAAA,YAAA;AAHJ,OAAVJ;AAKA;;AACF;AACE,YAAM,IAAA,KAAA,CAAN,4CAAM,CAAN;AA3DJ;;AA8DA,2BAAO,KAAP,MAEKA,OAFL;AAID","sourcesContent":["import * as stateChangeTypes from './types';\nimport { getDefaultValue } from './utils';\n\ntype IState = {\n  isOpen: boolean;\n  selectedItem: any;\n  inputValue: string;\n};\n\nexport function useTypeaheadReducer(state: IState, action: any) {\n  const { type, props } = action;\n  let changes;\n\n  switch (type) {\n    case stateChangeTypes.ItemClick:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: props.items[action.index],\n        inputValue: props.itemToString(props.items[action.index]),\n      };\n      break;\n    case stateChangeTypes.InputBlur:\n      if (state.isOpen) {\n        changes = {\n          isOpen: false,\n        };\n      }\n      break;\n    case stateChangeTypes.InputChange:\n      changes = {\n        isOpen: true,\n        inputValue: action.inputValue,\n      };\n      break;\n\n    case stateChangeTypes.ToggleButtonClick:\n    case stateChangeTypes.FunctionToggleMenu:\n      changes = {\n        isOpen: !state.isOpen,\n      };\n      break;\n    case stateChangeTypes.FunctionOpenMenu:\n      changes = {\n        isOpen: true,\n      };\n      break;\n    case stateChangeTypes.FunctionCloseMenu:\n      changes = {\n        isOpen: false,\n      };\n      break;\n\n    case stateChangeTypes.FunctionSelectItem:\n      changes = {\n        selectedItem: action.selectedItem,\n        inputValue: props.itemToString(action.selectedItem),\n      };\n      break;\n    case stateChangeTypes.ControlledPropUpdatedSelectedItem:\n    case stateChangeTypes.FunctionSetInputValue:\n      changes = {\n        inputValue: action.inputValue,\n      };\n      break;\n    case stateChangeTypes.FunctionReset:\n      changes = {\n        isOpen: getDefaultValue(props, 'isOpen'),\n        selectedItem: getDefaultValue(props, 'selectedItem'),\n        inputValue: getDefaultValue(props, 'inputValue'),\n      };\n      break;\n    default:\n      throw new Error('Reducer called without proper action type.');\n  }\n\n  return {\n    ...state,\n    ...changes,\n  };\n}\n"]},"metadata":{},"sourceType":"script"}