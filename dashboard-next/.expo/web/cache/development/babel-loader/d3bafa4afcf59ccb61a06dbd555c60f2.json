{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"BreadCrumbLink\", {\n  enumerable: true,\n  get: function get() {\n    return _primitives.Link;\n  }\n});\nObject.defineProperty(exports, \"BreadCrumbItem\", {\n  enumerable: true,\n  get: function get() {\n    return _BreadCrumbItem.BreadCrumbItem;\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _tools = require(\"../../../theme/tools\");\n\nvar _BreadCrumbSeparator = require(\"./BreadCrumbSeparator\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _BreadCrumbItem = require(\"./BreadCrumbItem\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar BreadCrumb = function BreadCrumb(_ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      separator = _ref.separator,\n      spacing = _ref.spacing,\n      props = _objectWithoutProperties(_ref, [\"style\", \"children\", \"separator\", \"spacing\"]);\n\n  var _ref2 = (0, _tools.extractInObject)(props, ['fontWeight', 'fontFamily', 'fontSize', 'color', 'textDecoration', 'txtDecor', 'wordBreak', 'textOverflow', 'textTransform', 'whiteSpace', 'overflowWrap', 'bold', 'italic', 'underline', 'strikeThrough', 'isTruncated', 'noOfLines']),\n      _ref3 = _slicedToArray(_ref2, 2),\n      textProps = _ref3[0],\n      remainingProps = _ref3[1];\n\n  var newProps = (0, _hooks.usePropsConfig)('BreadCrumb', remainingProps);\n  return _react[\"default\"].createElement(_primitives.Flex, _extends({}, newProps, {\n    style: style\n  }), children && !children.length ? children : (0, _BreadCrumbSeparator.BreadCrumbSeparator)(children, separator, textProps, spacing));\n};\n\nvar _default = BreadCrumb;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["BreadCrumb","props","newProps","style","children"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,oBAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,wBAAA;;AACA,IAAA,oBAAA,GAAA,OAAA,yBAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,eAAA,GAAA,OAAA,oBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAG,SAAbA,UAAa,OAMK;AAAA,MANJ,KAMI,QANJ,KAMI;AAAA,MANJ,QAMI,QANJ,QAMI;AAAA,MANJ,SAMI,QANJ,SAMI;AAAA,MANJ,OAMI,QANJ,OAMI;AAAA,MADnBC,KACmB;;AAAA,cACc,CAAA,GAAA,MAAA,CAAA,eAAA,EAAA,KAAA,EAAuB,CAAA,YAAA,EAAA,YAAA,EAAA,UAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,WAAA,EAAA,cAAA,EAAA,eAAA,EAAA,YAAA,EAAA,cAAA,EAAA,MAAA,EAAA,QAAA,EAAA,WAAA,EAAA,eAAA,EAAA,aAAA,EAA3D,WAA2D,CAAvB,CADd;AAAA;AAAA,MAChB,SADgB;AAAA,MAChB,cADgB;;AAqBtB,MAAIC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,YAAA,EAAf,cAAe,CAAf;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;AAAoB,IAAA,KAAK,EAAEC;AAA3B,GAAA,CAAA,EACGC,QAAQ,IAAI,CAACA,QAAQ,CAArBA,MAAAA,GAAAA,QAAAA,GAEG,CAAA,GAAA,oBAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAJR,OAIQ,CAHN,CADF;AA5BF,CAAA;;eAqCeJ,U","sourcesContent":["import React from 'react';\nimport { Flex, Link as BreadCrumbLink } from '../../primitives';\nimport type { IBreadCrumbProps } from './props';\nimport { extractInObject } from '../../../theme/tools';\nimport { BreadCrumbSeparator } from './BreadCrumbSeparator';\nimport { usePropsConfig } from '../../../hooks';\nexport { BreadCrumbItem } from './BreadCrumbItem';\nexport { BreadCrumbLink };\n\nconst BreadCrumb = ({\n  style,\n  children,\n  separator,\n  spacing,\n  ...props\n}: IBreadCrumbProps) => {\n  const [textProps, remainingProps] = extractInObject(props, [\n    'fontWeight',\n    'fontFamily',\n    'fontSize',\n    'color',\n    'textDecoration',\n    'txtDecor',\n    'wordBreak',\n    'textOverflow',\n    'textTransform',\n    'whiteSpace',\n    'overflowWrap',\n    'bold',\n    'italic',\n    'underline',\n    'strikeThrough',\n    'isTruncated',\n    'noOfLines',\n  ]);\n\n  let newProps = usePropsConfig('BreadCrumb', remainingProps);\n  return (\n    <Flex {...newProps} style={style}>\n      {children && !children.length\n        ? children\n        : BreadCrumbSeparator(children, separator, textProps, spacing)}\n    </Flex>\n  );\n};\n\nexport default BreadCrumb;\nexport type { IBreadCrumbProps };\n"]},"metadata":{},"sourceType":"script"}