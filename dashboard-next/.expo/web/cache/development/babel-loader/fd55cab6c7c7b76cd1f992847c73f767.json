{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _useSpinner = require(\"./useSpinner\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledSpinner = (0, _native[\"default\"])(_reactNative.ActivityIndicator)(_styledSystem.color, _styledSystem.space, _styledSystem.position);\n\nvar Spinner = function Spinner(props) {\n  var newProps = (0, _hooks.usePropsConfig)('Spinner', props);\n  var spinnerColor = (0, _hooks.useToken)('colors', newProps.color);\n\n  var _ref = (0, _useSpinner.useSpinner)(props),\n      spinnerProps = _ref.spinnerProps;\n\n  return _react[\"default\"].createElement(StyledSpinner, _extends({}, spinnerProps, newProps, {\n    color: spinnerColor\n  }));\n};\n\nvar _default = Spinner;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledSpinner","ActivityIndicator","color","space","position","Spinner","props","newProps","spinnerColor","spinnerProps"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,0BAAA,CAAA,CAAA;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,WAAA,GAAA,OAAA,gBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAG,CAAA,GAAA,OAAA,WAAA,EAAOC,YAAAA,CAAP,iBAAA,EACpBC,aAAAA,CADoB,KAAA,EAEpBC,aAAAA,CAFoB,KAAA,EAGpBC,aAAAA,CAHF,QAAsB,CAAtB;;AAKA,IAAMC,OAAO,GAAIC,SAAXD,OAAWC,CAAAA,KAAD,EAA0B;AACxC,MAAMC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,SAAA,EAAjB,KAAiB,CAAjB;AACA,MAAMC,YAAY,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAAmBD,QAAQ,CAAhD,KAAqB,CAArB;;AAFwC,aAGf,CAAA,GAAA,WAAA,CAAA,UAAA,EAAzB,KAAyB,CAHe;AAAA,MAGhCE,YAHgC,QAGhCA,YAHgC;;AAKxC,SAAO,MAAA,WAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,EAAA,YAAA,EAAA,QAAA,EAAA;AAA+C,IAAA,KAAK,EAAED;AAAtD,GAAA,CAAA,CAAP;AALF,CAAA;;eAQeH,O","sourcesContent":["import React from 'react';\nimport { ActivityIndicator } from 'react-native';\nimport styled from 'styled-components/native';\nimport { color, space, position } from 'styled-system';\nimport { useToken, usePropsConfig } from '../../../hooks';\nimport type { ISpinnerProps } from './props';\nimport { useSpinner } from './useSpinner';\n\nconst StyledSpinner = styled(ActivityIndicator)<ISpinnerProps>(\n  color,\n  space,\n  position\n);\nconst Spinner = (props: ISpinnerProps) => {\n  const newProps = usePropsConfig('Spinner', props);\n  const spinnerColor = useToken('colors', newProps.color);\n  const { spinnerProps } = useSpinner(props);\n\n  return <StyledSpinner {...spinnerProps} {...newProps} color={spinnerColor} />;\n};\n\nexport default Spinner;\nexport type { ISpinnerProps };\n"]},"metadata":{},"sourceType":"script"}