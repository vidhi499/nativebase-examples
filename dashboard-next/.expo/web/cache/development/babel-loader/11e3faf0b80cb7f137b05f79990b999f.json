{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _FormControl = require(\"../FormControl\");\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar NumberInput = function NumberInput(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _ref2 = (0, _hooks.usePropsConfig)('NumberInput', props),\n      defaultValue = _ref2.defaultValue,\n      keepWithinRange = _ref2.keepWithinRange,\n      value = _ref2.value,\n      min = _ref2.min,\n      max = _ref2.max,\n      newProps = _objectWithoutProperties(_ref2, [\"defaultValue\", \"keepWithinRange\", \"value\", \"min\", \"max\"]);\n\n  var formControlContext = _react[\"default\"].useContext(_FormControl.FormControlContext);\n\n  var _react$default$useSta = _react[\"default\"].useState(parseInt(value || defaultValue, 10)),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      numberInputValue = _react$default$useSta2[0],\n      setNumberInputValue = _react$default$useSta2[1];\n\n  var handleChange = function handleChange(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);else if (newValue > max) setNumberInputValue(max);\n    }\n  };\n\n  var handleChangeWithoutCheck = function handleChangeWithoutCheck(newValue) {\n    var temp = newValue;\n    setNumberInputValue(temp);\n  };\n\n  var numberInputStepper = null;\n\n  var separatingNumberInputStepper = function separatingNumberInputStepper(allChildren) {\n    return _react[\"default\"].Children.map(allChildren, function (child) {\n      if (child.type.name === 'NumberInputStepper') {\n        numberInputStepper = child;\n        return null;\n      } else {\n        return child;\n      }\n    });\n  };\n\n  var updatedChildren = separatingNumberInputStepper(children);\n  return _react[\"default\"].createElement(_Context.NumberInputContext.Provider, {\n    value: _objectSpread({}, formControlContext, {}, newProps, {\n      min: min,\n      max: max,\n      handleChange: handleChange,\n      handleChangeWithoutCheck: handleChangeWithoutCheck,\n      numberInputValue: numberInputValue,\n      numberInputStepper: numberInputStepper\n    })\n  }, updatedChildren);\n};\n\nvar _default = NumberInput;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["NumberInput.tsx"],"names":["NumberInput","props","newProps","formControlContext","React","FormControlContext","parseInt","value","handleChange","newValue","temp","setNumberInputValue","handleChangeWithoutCheck","numberInputStepper","separatingNumberInputStepper","allChildren","child","updatedChildren","min","max","numberInputValue"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,YAAA,GAAA,OAAA,kBAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAA+C;AAAA,MAA9C,QAA8C,QAA9C,QAA8C;AAAA,MAA/BC,KAA+B;;AAAA,cAQ7D,CAAA,GAAA,MAAA,CAAA,cAAA,EAAA,aAAA,EAPJ,KAOI,CAR6D;AAAA,MAC3D,YAD2D,SAC3D,YAD2D;AAAA,MAC3D,eAD2D,SAC3D,eAD2D;AAAA,MAC3D,KAD2D,SAC3D,KAD2D;AAAA,MAC3D,GAD2D,SAC3D,GAD2D;AAAA,MAC3D,GAD2D,SAC3D,GAD2D;AAAA,MAO5DC,QAP4D;;AASjE,MAAMC,kBAAuC,GAAGC,MAAAA,WAAAA,CAAAA,UAAAA,CAC9CC,YAAAA,CADF,kBAAgDD,CAAhD;;AATiE,8BAYjBA,MAAAA,WAAAA,CAAAA,QAAAA,CAC9CE,QAAQ,CAACC,KAAK,IAAN,YAAA,EADV,EACU,CADsCH,CAZiB;AAAA;AAAA,MAY3D,gBAZ2D;AAAA,MAY3D,mBAZ2D;;AAejE,MAAMI,YAAY,GAAIC,SAAhBD,YAAgBC,CAAAA,QAAD,EAAsB;AACzC,QAAMC,IAAI,GAAV,QAAA;AACAC,IAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;;AACA,QAAA,eAAA,EAAqB;AACnB,UAAIF,QAAQ,GAAZ,GAAA,EAAoBE,mBAAmB,CAAvC,GAAuC,CAAnBA,CAApB,KACK,IAAIF,QAAQ,GAAZ,GAAA,EAAoBE,mBAAmB,CAAnBA,GAAmB,CAAnBA;AAC1B;AANH,GAAA;;AAQA,MAAMC,wBAAwB,GAAIH,SAA5BG,wBAA4BH,CAAAA,QAAD,EAAsB;AACrD,QAAMC,IAAI,GAAV,QAAA;AACAC,IAAAA,mBAAmB,CAAnBA,IAAmB,CAAnBA;AAFF,GAAA;;AAIA,MAAIE,kBAAsC,GAA1C,IAAA;;AAEA,MAAMC,4BAA4B,GAAIC,SAAhCD,4BAAgCC,CAAAA,WAAD,EAAsB;AACzD,WAAO,MAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,WAAA,EAAiCC,UAAAA,KAAD,EAAwB;AAC7D,UAAIA,KAAK,CAALA,IAAAA,CAAAA,IAAAA,KAAJ,oBAAA,EAA8C;AAC5CH,QAAAA,kBAAkB,GAAlBA,KAAAA;AACA,eAAA,IAAA;AAFF,OAAA,MAGO;AACL,eAAA,KAAA;AACD;AANH,KAAO,CAAP;AADF,GAAA;;AAUA,MAAMI,eAAe,GAAGH,4BAA4B,CAApD,QAAoD,CAApD;AAEA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,QAAA,CAAD,kBAAC,CAAD,QAAA,EAAA;AACE,IAAA,KAAK,oBAAE,kBAAF,MAAE,QAAF;AAGHI,MAAAA,GAHK,EAGLA,GAHG;AAIHC,MAAAA,GAJK,EAILA,GAJG;AAKHX,MAAAA,YALK,EAKLA,YALG;AAMHI,MAAAA,wBANK,EAMLA,wBANG;AAOHQ,MAAAA,gBAPK,EAOLA,gBAPG;AAQHP,MAAAA,kBAAAA,EAAAA;AARG;AADP,GAAA,EADF,eACE,CADF;AAzCF,CAAA;;eA2Deb,W","sourcesContent":["import React from 'react';\nimport { usePropsConfig } from '../../../hooks';\nimport { FormControlContext, IFormControlContext } from '../FormControl';\nimport type { INumberInputProps } from './props';\nimport { NumberInputContext } from './Context';\n\nconst NumberInput = ({ children, ...props }: INumberInputProps) => {\n  const {\n    defaultValue,\n    keepWithinRange,\n    value,\n    min,\n    max,\n    ...newProps\n  } = usePropsConfig('NumberInput', props);\n  const formControlContext: IFormControlContext = React.useContext(\n    FormControlContext\n  );\n  const [numberInputValue, setNumberInputValue] = React.useState(\n    parseInt(value || defaultValue, 10)\n  );\n  const handleChange = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n    if (keepWithinRange) {\n      if (newValue < min) setNumberInputValue(min);\n      else if (newValue > max) setNumberInputValue(max);\n    }\n  };\n  const handleChangeWithoutCheck = (newValue: number) => {\n    const temp = newValue;\n    setNumberInputValue(temp);\n  };\n  let numberInputStepper: JSX.Element | null = null;\n\n  const separatingNumberInputStepper = (allChildren: any) => {\n    return React.Children.map(allChildren, (child: JSX.Element) => {\n      if (child.type.name === 'NumberInputStepper') {\n        numberInputStepper = child;\n        return null;\n      } else {\n        return child;\n      }\n    });\n  };\n  const updatedChildren = separatingNumberInputStepper(children);\n\n  return (\n    <NumberInputContext.Provider\n      value={{\n        ...formControlContext,\n        ...newProps,\n        min,\n        max,\n        handleChange,\n        handleChangeWithoutCheck,\n        numberInputValue,\n        numberInputStepper,\n      }}\n    >\n      {updatedChildren}\n    </NumberInputContext.Provider>\n  );\n};\n\nexport default NumberInput;\n"]},"metadata":{},"sourceType":"script"}