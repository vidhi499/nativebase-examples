{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty2 = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _classCallCheck = require(\"@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"@babel/runtime/helpers/createClass\");\n\nvar _assertThisInitialized = require(\"@babel/runtime/helpers/assertThisInitialized\");\n\nvar _inherits = require(\"@babel/runtime/helpers/inherits\");\n\nvar _possibleConstructorReturn = require(\"@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"@babel/runtime/helpers/getPrototypeOf\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Triangle = _interopRequireDefault(require(\"./Triangle\"));\n\nvar _helpers = require(\"./helpers\");\n\nvar _getTooltipCoordinate = _interopRequireDefault(require(\"./getTooltipCoordinate\"));\n\nvar _primitives = require(\"../../primitives\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Tooltip = function (_React$Component) {\n  _inherits(Tooltip, _React$Component);\n\n  var _super = _createSuper(Tooltip);\n\n  function Tooltip() {\n    var _this;\n\n    _classCallCheck(this, Tooltip);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isVisible: false,\n      yOffset: 0,\n      xOffset: 0,\n      elementWidth: 0,\n      elementHeight: 0\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderedElement\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"timeout\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleTooltip\", function () {\n      var onClose = _this.props.onClose;\n\n      _this.getElementPosition();\n\n      _this.setState(function (prevState) {\n        if (prevState.isVisible && !_helpers.isIOS) {\n          onClose && onClose();\n        }\n\n        return {\n          isVisible: !prevState.isVisible\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapWithAction\", function (actionType, children) {\n      switch (actionType) {\n        case 'press':\n          return React.createElement(_reactNative.TouchableOpacity, _extends({\n            onPress: _this.toggleTooltip,\n            activeOpacity: 1\n          }, _this.props.toggleWrapperProps), children);\n\n        case 'longPress':\n          return React.createElement(_reactNative.TouchableOpacity, _extends({\n            onLongPress: _this.toggleTooltip,\n            activeOpacity: 1\n          }, _this.props.toggleWrapperProps), children);\n\n        default:\n          return children;\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getTooltipStyle\", function () {\n      var _this$state = _this.state,\n          yOffset = _this$state.yOffset,\n          xOffset = _this$state.xOffset,\n          elementHeight = _this$state.elementHeight,\n          elementWidth = _this$state.elementWidth;\n      var _this$props = _this.props,\n          height = _this$props.height,\n          width = _this$props.width,\n          withPointer = _this$props.withPointer,\n          containerStyle = _this$props.containerStyle;\n\n      var _ref = (0, _getTooltipCoordinate[\"default\"])(xOffset, yOffset, elementWidth, elementHeight, _helpers.ScreenWidth, _helpers.ScreenHeight, width, height, withPointer),\n          x = _ref.x,\n          y = _ref.y;\n\n      return _objectSpread({\n        position: 'absolute',\n        left: _reactNative.I18nManager.isRTL ? null : x,\n        right: _reactNative.I18nManager.isRTL ? x : null,\n        top: y,\n        width: width,\n        height: height,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flex: 1,\n        borderRadius: 10,\n        paddingTop: 10,\n        paddingBottom: 10\n      }, containerStyle);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderPointer\", function (tooltipY) {\n      var _this$state2 = _this.state,\n          yOffset = _this$state2.yOffset,\n          xOffset = _this$state2.xOffset,\n          elementHeight = _this$state2.elementHeight,\n          elementWidth = _this$state2.elementWidth;\n      var _this$props2 = _this.props,\n          backgroundColor = _this$props2.backgroundColor,\n          pointerStyle = _this$props2.pointerStyle;\n      var pastMiddleLine = yOffset > tooltipY;\n      var styling = {\n        position: 'absolute',\n        top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n        left: _reactNative.I18nManager.isRTL ? null : xOffset + elementWidth / 2 - 7.5,\n        right: _reactNative.I18nManager.isRTL ? xOffset + elementWidth / 2 - 7.5 : null\n      };\n      return React.createElement(_primitives.View, {\n        style: styling\n      }, React.createElement(_Triangle[\"default\"], {\n        borderBottomColor: backgroundColor,\n        style: _objectSpread({}, pointerStyle),\n        isDown: pastMiddleLine\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderContent\", function (withTooltip) {\n      var _this$props3 = _this.props,\n          popover = _this$props3.popover,\n          withPointer = _this$props3.withPointer,\n          highlightColor = _this$props3.highlightColor,\n          actionType = _this$props3.actionType;\n      if (!withTooltip) return _this.wrapWithAction(actionType, _this.props.children);\n      var _this$state3 = _this.state,\n          yOffset = _this$state3.yOffset,\n          xOffset = _this$state3.xOffset,\n          elementWidth = _this$state3.elementWidth,\n          elementHeight = _this$state3.elementHeight;\n\n      var tooltipStyle = _this.getTooltipStyle();\n\n      var styling = {\n        position: 'absolute',\n        top: yOffset,\n        left: _reactNative.I18nManager.isRTL ? null : xOffset,\n        right: _reactNative.I18nManager.isRTL ? xOffset : null,\n        backgroundColor: highlightColor,\n        overflow: 'visible',\n        width: elementWidth,\n        height: elementHeight\n      };\n      return React.createElement(_primitives.View, null, React.createElement(_primitives.View, {\n        style: styling\n      }, _this.props.children), withPointer && _this.renderPointer(tooltipStyle.top), React.createElement(_primitives.View, {\n        bg: _this.props.backgroundColor,\n        borderColor: _this.props.borderColor,\n        borderWidth: _this.props.borderWidth,\n        style: tooltipStyle\n      }, popover));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getElementPosition\", function () {\n      _this.renderedElement && _this.renderedElement.measureInWindow(function (pageOffsetX, pageOffsetY, width, height) {\n        _this.setState({\n          xOffset: pageOffsetX,\n          yOffset: pageOffsetY,\n          elementWidth: width,\n          elementHeight: height\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.timeout = setTimeout(this.getElementPosition, 500);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeout);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isVisible = this.state.isVisible;\n      var _this$props4 = this.props,\n          onClose = _this$props4.onClose,\n          withOverlay = _this$props4.withOverlay,\n          onOpen = _this$props4.onOpen,\n          overlayColor = _this$props4.overlayColor;\n      return React.createElement(_primitives.View, {\n        collapsable: false,\n        ref: function ref(e) {\n          return _this2.renderedElement = e;\n        }\n      }, this.renderContent(false), React.createElement(_reactNative.Modal, {\n        animationType: \"fade\",\n        visible: isVisible,\n        transparent: true,\n        onDismiss: onClose,\n        onShow: onOpen,\n        onRequestClose: onClose\n      }, this.props.closeOnBlur ? React.createElement(_reactNative.TouchableOpacity, {\n        style: {\n          position: 'absolute',\n          left: 0,\n          top: 0,\n          opacity: 0.5,\n          right: 0,\n          bottom: 0\n        },\n        onPress: this.toggleTooltip\n      }) : React.createElement(React.Fragment, null), this.props.closeOnPopoverPress ? React.createElement(_reactNative.TouchableOpacity, {\n        style: styles.container(withOverlay, overlayColor),\n        onPress: this.toggleTooltip,\n        activeOpacity: 1\n      }, React.createElement(_primitives.View, null, this.renderContent(true))) : this.renderContent(true)));\n    }\n  }]);\n\n  return Tooltip;\n}(React.Component);\n\n_defineProperty(Tooltip, \"defaultProps\", void 0);\n\nTooltip.defaultProps = {\n  toggleWrapperProps: {},\n  withOverlay: true,\n  highlightColor: 'transparent',\n  withPointer: true,\n  actionType: 'press',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  pointerStyle: {},\n  backgroundColor: '#617080',\n  onClose: function onClose() {},\n  onOpen: function onOpen() {}\n};\nvar styles = {\n  container: function container(withOverlay, overlayColor) {\n    return {\n      backgroundColor: withOverlay ? overlayColor ? overlayColor : 'rgba(250, 250, 250, 0.70)' : 'transparent',\n      flex: 1,\n      zIndex: -1\n    };\n  }\n};\nvar _default = Tooltip;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["Tooltip.tsx"],"names":["Tooltip","React","isVisible","yOffset","xOffset","elementWidth","elementHeight","onClose","prevState","isIOS","containerStyle","y","ScreenWidth","ScreenHeight","position","left","I18nManager","right","top","width","height","display","alignItems","justifyContent","flex","borderRadius","paddingTop","paddingBottom","tooltipY","pointerStyle","pastMiddleLine","styling","withTooltip","actionType","tooltipStyle","backgroundColor","overflow","withPointer","setTimeout","clearTimeout","overlayColor","e","opacity","bottom","toggleTooltip","styles","toggleWrapperProps","withOverlay","highlightColor","onOpen","container","zIndex"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { TouchableOpacity, Modal, I18nManager } from 'react-native';\nimport Triangle from './Triangle';\nimport { ScreenWidth, ScreenHeight, isIOS } from './helpers';\nimport getTooltipCoordinate from './getTooltipCoordinate';\nimport { View } from '../../primitives';\ntype State = {\n  isVisible: boolean;\n  yOffset: number;\n  xOffset: number;\n  elementWidth: number;\n  elementHeight: number;\n};\n\nexport type Props = {\n  children?: JSX.Element | JSX.Element[];\n  withPointer?: boolean;\n  popover?: JSX.Element;\n  height?: number | string;\n  width?: number | string;\n  containerStyle?: any;\n  pointerColor?: string;\n  pointerStyle?: {};\n  onClose?: () => void;\n  onOpen?: () => void;\n  withOverlay?: boolean;\n  overlayColor?: string;\n  backgroundColor?: string;\n  highlightColor?: string;\n  toggleWrapperProps?: {};\n  closeOnPopoverPress?: boolean;\n  closeOnBlur?: boolean;\n  actionType?: 'press' | 'longPress' | 'none';\n  borderColor?: string;\n  borderWidth?: number;\n};\n\nclass Tooltip extends React.Component<Props, State> {\n  state = {\n    isVisible: false,\n    yOffset: 0,\n    xOffset: 0,\n    elementWidth: 0,\n    elementHeight: 0,\n  };\n\n  renderedElement: any;\n  timeout: any;\n\n  static defaultProps: {\n    toggleWrapperProps: {};\n    withOverlay: true;\n    highlightColor: 'transparent';\n    withPointer: true;\n    actionType: 'press';\n    height: 40;\n    width: 150;\n    containerStyle: {};\n    pointerStyle: {};\n    backgroundColor: '#617080';\n    onClose: () => void;\n    onOpen: () => void;\n  };\n\n  toggleTooltip = () => {\n    const { onClose } = this.props;\n    this.getElementPosition();\n    this.setState((prevState) => {\n      if (prevState.isVisible && !isIOS) {\n        onClose && onClose();\n      }\n\n      return { isVisible: !prevState.isVisible };\n    });\n  };\n\n  wrapWithAction = (actionType: any, children: {} | null | undefined) => {\n    switch (actionType) {\n      case 'press':\n        return (\n          <TouchableOpacity\n            onPress={this.toggleTooltip}\n            activeOpacity={1}\n            {...this.props.toggleWrapperProps}\n          >\n            {children}\n          </TouchableOpacity>\n        );\n      case 'longPress':\n        return (\n          <TouchableOpacity\n            onLongPress={this.toggleTooltip}\n            activeOpacity={1}\n            {...this.props.toggleWrapperProps}\n          >\n            {children}\n          </TouchableOpacity>\n        );\n      default:\n        return children;\n    }\n  };\n\n  getTooltipStyle = () => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { height, width, withPointer, containerStyle } = this.props;\n\n    const { x, y } = getTooltipCoordinate(\n      xOffset,\n      yOffset,\n      elementWidth,\n      elementHeight,\n      ScreenWidth,\n      ScreenHeight,\n      width,\n      height,\n      withPointer\n    );\n\n    return {\n      position: 'absolute',\n      left: I18nManager.isRTL ? null : x,\n      right: I18nManager.isRTL ? x : null,\n      top: y,\n      width,\n      height,\n      // default styles\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 1,\n      borderRadius: 10,\n      paddingTop: 10,\n      paddingBottom: 10,\n      // borderWidth: 1,\n      // borderColor: '#CBD5E0',\n      ...containerStyle,\n    };\n  };\n\n  renderPointer = (tooltipY: any) => {\n    const { yOffset, xOffset, elementHeight, elementWidth } = this.state;\n    const { backgroundColor, pointerStyle } = this.props;\n    const pastMiddleLine = yOffset > tooltipY;\n    const styling: any = {\n      position: 'absolute',\n      top: pastMiddleLine ? yOffset - 13 : yOffset + elementHeight - 2,\n      left: I18nManager.isRTL ? null : xOffset + elementWidth / 2 - 7.5,\n      right: I18nManager.isRTL ? xOffset + elementWidth / 2 - 7.5 : null,\n    };\n    return (\n      <View style={styling}>\n        <Triangle\n          borderBottomColor={backgroundColor}\n          style={{\n            ...pointerStyle,\n          }}\n          isDown={pastMiddleLine}\n        />\n      </View>\n    );\n  };\n  renderContent = (withTooltip: any) => {\n    const { popover, withPointer, highlightColor, actionType } = this.props;\n\n    if (!withTooltip)\n      return this.wrapWithAction(actionType, this.props.children);\n\n    const { yOffset, xOffset, elementWidth, elementHeight } = this.state;\n    const tooltipStyle = this.getTooltipStyle();\n    const styling: any = {\n      position: 'absolute',\n      top: yOffset,\n      left: I18nManager.isRTL ? null : xOffset,\n      right: I18nManager.isRTL ? xOffset : null,\n      backgroundColor: highlightColor,\n      overflow: 'visible',\n      width: elementWidth,\n      height: elementHeight,\n    };\n    return (\n      <View>\n        <View style={styling}>{this.props.children}</View>\n        {withPointer && this.renderPointer(tooltipStyle.top)}\n        <View\n          bg={this.props.backgroundColor}\n          borderColor={this.props.borderColor}\n          borderWidth={this.props.borderWidth}\n          style={tooltipStyle}\n        >\n          {popover}\n        </View>\n      </View>\n    );\n  };\n\n  componentDidMount() {\n    // wait to compute onLayout values.\n    this.timeout = setTimeout(this.getElementPosition, 500);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timeout);\n  }\n\n  getElementPosition = () => {\n    this.renderedElement &&\n      this.renderedElement.measureInWindow(\n        (pageOffsetX: any, pageOffsetY: any, width: any, height: any) => {\n          this.setState({\n            xOffset: pageOffsetX,\n            yOffset: pageOffsetY,\n            elementWidth: width,\n            elementHeight: height,\n          });\n        }\n      );\n  };\n\n  render() {\n    const { isVisible } = this.state;\n    const { onClose, withOverlay, onOpen, overlayColor } = this.props;\n\n    return (\n      <View collapsable={false} ref={(e: any) => (this.renderedElement = e)}>\n        {this.renderContent(false)}\n        <Modal\n          animationType=\"fade\"\n          visible={isVisible}\n          transparent\n          onDismiss={onClose}\n          onShow={onOpen}\n          onRequestClose={onClose}\n        >\n          {this.props.closeOnBlur ? (\n            <TouchableOpacity\n              style={{\n                position: 'absolute',\n                left: 0,\n                top: 0,\n                opacity: 0.5,\n                right: 0,\n                bottom: 0,\n              }}\n              onPress={this.toggleTooltip}\n            />\n          ) : (\n            <></>\n          )}\n\n          {this.props.closeOnPopoverPress ? (\n            <TouchableOpacity\n              style={styles.container(withOverlay, overlayColor)}\n              onPress={this.toggleTooltip}\n              activeOpacity={1}\n            >\n              <View>{this.renderContent(true)}</View>\n            </TouchableOpacity>\n          ) : (\n            this.renderContent(true)\n          )}\n        </Modal>\n      </View>\n    );\n  }\n}\nTooltip.defaultProps = {\n  toggleWrapperProps: {},\n  withOverlay: true,\n  highlightColor: 'transparent',\n  withPointer: true,\n  actionType: 'press',\n  height: 40,\n  width: 150,\n  containerStyle: {},\n  pointerStyle: {},\n  backgroundColor: '#617080',\n  onClose: () => {},\n  onOpen: () => {},\n};\nconst styles = {\n  container: (withOverlay: any, overlayColor: any) => ({\n    backgroundColor: withOverlay\n      ? overlayColor\n        ? overlayColor\n        : 'rgba(250, 250, 250, 0.70)'\n      : 'transparent',\n    flex: 1,\n    zIndex: -1,\n  }),\n};\n\nexport default Tooltip;\n"]},"metadata":{},"sourceType":"script"}