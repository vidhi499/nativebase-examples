{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.customGrid = void 0;\n\nvar _styledSystem = require(\"styled-system\");\n\nvar config = {\n  area: {\n    property: 'gridArea'\n  },\n  gridGap: {\n    property: 'gridGap',\n    scale: 'space'\n  },\n  gridColumnGap: {\n    property: 'gridColumnGap',\n    scale: 'space'\n  },\n  gridRowGap: {\n    property: 'gridRowGap',\n    scale: 'space'\n  },\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridColumnStart: true,\n  gridColumnEnd: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n  gridArea: true,\n  placeItems: true\n};\nvar customGrid = (0, _styledSystem.system)(config);\nexports.customGrid = customGrid;","map":{"version":3,"sources":["customGrid.ts"],"names":["config","area","property","gridGap","scale","gridColumnGap","gridRowGap","gridColumn","gridRow","gridAutoFlow","gridAutoColumns","gridColumnStart","gridColumnEnd","gridAutoRows","gridTemplateColumns","gridTemplateRows","gridTemplateAreas","gridArea","placeItems","customGrid"],"mappings":";;;;;;;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADe;AAIrBC,EAAAA,OAAO,EAAE;AACPD,IAAAA,QAAQ,EADD,SAAA;AAEPE,IAAAA,KAAK,EAAE;AAFA,GAJY;AAQrBC,EAAAA,aAAa,EAAE;AACbH,IAAAA,QAAQ,EADK,eAAA;AAEbE,IAAAA,KAAK,EAAE;AAFM,GARM;AAYrBE,EAAAA,UAAU,EAAE;AACVJ,IAAAA,QAAQ,EADE,YAAA;AAEVE,IAAAA,KAAK,EAAE;AAFG,GAZS;AAgBrBG,EAAAA,UAAU,EAhBW,IAAA;AAiBrBC,EAAAA,OAAO,EAjBc,IAAA;AAkBrBC,EAAAA,YAAY,EAlBS,IAAA;AAmBrBC,EAAAA,eAAe,EAnBM,IAAA;AAoBrBC,EAAAA,eAAe,EApBM,IAAA;AAqBrBC,EAAAA,aAAa,EArBQ,IAAA;AAsBrBC,EAAAA,YAAY,EAtBS,IAAA;AAuBrBC,EAAAA,mBAAmB,EAvBE,IAAA;AAwBrBC,EAAAA,gBAAgB,EAxBK,IAAA;AAyBrBC,EAAAA,iBAAiB,EAzBI,IAAA;AA0BrBC,EAAAA,QAAQ,EA1Ba,IAAA;AA2BrBC,EAAAA,UAAU,EAAE;AA3BS,CAAvB;AAkGO,IAAMC,UAAU,GAAG,CAAA,GAAA,aAAA,CAAA,MAAA,EAAnB,MAAmB,CAAnB","sourcesContent":["import type * as CSS from 'csstype';\nimport { Config, system } from 'styled-system';\n\nconst config: Config = {\n  area: {\n    property: 'gridArea',\n  },\n  gridGap: {\n    property: 'gridGap',\n    scale: 'space',\n  },\n  gridColumnGap: {\n    property: 'gridColumnGap',\n    scale: 'space',\n  },\n  gridRowGap: {\n    property: 'gridRowGap',\n    scale: 'space',\n  },\n  gridColumn: true,\n  gridRow: true,\n  gridAutoFlow: true,\n  gridAutoColumns: true,\n  gridColumnStart: true,\n  gridColumnEnd: true,\n  gridAutoRows: true,\n  gridTemplateColumns: true,\n  gridTemplateRows: true,\n  gridTemplateAreas: true,\n  gridArea: true,\n  placeItems: true,\n};\n\n/**\n * Types for grid related CSS properties\n */\nexport interface customGridProps {\n  area?: CSS.Property.GridArea;\n  /**\n   * The CSS `grid-gap` property\n   */\n  gridGap?: CSS.Property.GridGap;\n  /**\n   * The CSS `grid-column-gap` property\n   */\n  gridColumnGap?: CSS.Property.GridColumnGap;\n  /**\n   * The CSS `grid-row-gap` property\n   */\n  gridRowGap?: CSS.Property.GridRowGap;\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumnStart?: CSS.Property.GridColumnStart;\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumnEnd?: CSS.Property.GridColumnEnd;\n  /**\n   * The CSS `grid-column` property\n   */\n  gridColumn?: CSS.Property.GridColumn;\n  /**\n   * The CSS `grid-row` property\n   */\n  gridRow?: CSS.Property.GridRow;\n  /**\n   * The CSS `grid-auto-flow` property\n   */\n  gridAutoFlow?: CSS.Property.GridAutoFlow;\n  /**\n   * The CSS `grid-auto-columns` property\n   */\n  gridAutoColumns?: CSS.Property.GridAutoColumns;\n  /**\n   * The CSS `grid-auto-rows` property\n   */\n  gridAutoRows?: CSS.Property.GridAutoRows;\n  /**\n   * The CSS `grid-template-columns` property\n   */\n  gridTemplateColumns?: CSS.Property.GridTemplateColumns;\n\n  /**\n   * The CSS `grid-template-rows` property\n   */\n  gridTemplateRows?: CSS.Property.GridTemplateRows;\n  /**\n   * The CSS `grid-template-areas` property\n   */\n  gridTemplateAreas?: CSS.Property.GridTemplateAreas;\n  /**\n   * The CSS `grid-areas` property\n   */\n  gridArea?: CSS.Property.GridArea;\n  /**\n   * The CSS `place-items` property\n   */\n  placeItems?: CSS.Property.PlaceItems;\n}\n\nexport const customGrid = system(config);\n"]},"metadata":{},"sourceType":"script"}