{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _FormControl = require(\"./FormControl\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar FormLabel = function FormLabel(_ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _disabled = _ref._disabled,\n      _focus = _ref._focus,\n      _invalid = _ref._invalid,\n      props = _objectWithoutProperties(_ref, [\"children\", \"style\", \"_disabled\", \"_focus\", \"_invalid\"]);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_FormControl.FormControlContext),\n      isInvalid = _react$default$useCon.isInvalid,\n      isRequired = _react$default$useCon.isRequired,\n      isDisabled = _react$default$useCon.isDisabled;\n\n  var textColor = (0, _hooks.useToken)('colors', 'red.300');\n\n  var requiredAsterisk = function requiredAsterisk() {\n    return _react[\"default\"].createElement(_Text[\"default\"], {\n      color: textColor\n    }, \"*\");\n  };\n\n  return _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    flexDirection: \"row\",\n    justifyContent: \"flex-start\"\n  }, props, {\n    fontSize: \"md\",\n    style: [style, isInvalid && _invalid, isDisabled && _disabled]\n  }), children, isRequired && requiredAsterisk());\n};\n\nvar _default = FormLabel;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["FormLabel.tsx"],"names":["FormLabel","props","isDisabled","React","FormControlContext","textColor","requiredAsterisk","isInvalid","isRequired"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,yBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,YAAA,GAAA,OAAA,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAOK;AAAA,MAPJ,QAOI,QAPJ,QAOI;AAAA,MAPJ,KAOI,QAPJ,KAOI;AAAA,MAPJ,SAOI,QAPJ,SAOI;AAAA,MAPJ,MAOI,QAPJ,MAOI;AAAA,MAPJ,QAOI,QAPJ,QAOI;AAAA,MADlBC,KACkB;;AAAA,8BAKIE,MAAAA,WAAAA,CAAAA,UAAAA,CAAiBC,YAAAA,CAJ1C,kBAIyBD,CALJ;AAAA,MACf,SADe,yBACf,SADe;AAAA,MACf,UADe,yBACf,UADe;AAAA,MAInBD,UAJmB,yBAInBA,UAJmB;;AAMrB,MAAMG,SAAS,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAAlB,SAAkB,CAAlB;;AACA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,WAAM,MAAA,WAAA,CAAA,aAAA,CAAC,KAAD,WAAA,EAAA;AAAM,MAAA,KAAK,EAAED;AAAb,KAAA,EAA/B,GAA+B,CAAN;AAAA,GAAzB;;AAEA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,aAAa,EADf,KAAA;AAEE,IAAA,cAAc,EAAC;AAFjB,GAAA,EAAA,KAAA,EAAA;AAIE,IAAA,QAAQ,EAJV,IAAA;AAKE,IAAA,KAAK,EAAE,CAAA,KAAA,EAAQE,SAAS,IAAjB,QAAA,EAA+BL,UAAU,IAAzC,SAAA;AALT,GAAA,CAAA,EAAA,QAAA,EAQGM,UAAU,IAAIF,gBATnB,EACE,CADF;AAhBF,CAAA;;eA6BeN,S","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport Text from '../../primitives/Text';\nimport { useToken } from '../../../hooks';\nimport { FormControlContext } from './FormControl';\nimport type { IFormLabelProps, IFormControlContext } from './props';\n\nconst FormLabel = ({\n  children,\n  style,\n  _disabled,\n  _focus,\n  _invalid,\n  ...props\n}: IFormLabelProps) => {\n  const {\n    isInvalid,\n    isRequired,\n    isDisabled,\n  }: IFormControlContext = React.useContext(FormControlContext);\n  const textColor = useToken('colors', 'red.300');\n  const requiredAsterisk = () => <Text color={textColor}>*</Text>;\n\n  return (\n    <Box\n      flexDirection=\"row\"\n      justifyContent=\"flex-start\"\n      {...props}\n      fontSize=\"md\"\n      style={[style, isInvalid && _invalid, isDisabled && _disabled]}\n    >\n      {children}\n      {isRequired && requiredAsterisk()}\n    </Box>\n  );\n};\nexport default FormLabel;\n"]},"metadata":{},"sourceType":"script"}