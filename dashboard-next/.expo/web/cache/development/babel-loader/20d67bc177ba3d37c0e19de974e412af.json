{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.CircularProgressLabel = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _primitives = require(\"../../primitives\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _hooks = require(\"../../../hooks\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyleAnimatedView = (0, _native[\"default\"])(_reactNative.Animated.View)(_styledSystem.color, _styledSystem.border);\n\nvar CircularProgress = function CircularProgress(_ref) {\n  var value = _ref.value,\n      size = _ref.size,\n      isIndeterminate = _ref.isIndeterminate,\n      thickness = _ref.thickness,\n      colorProp = _ref.color,\n      trackColor = _ref.trackColor,\n      max = _ref.max,\n      min = _ref.min,\n      props = _objectWithoutProperties(_ref, [\"value\", \"size\", \"isIndeterminate\", \"thickness\", \"color\", \"trackColor\", \"max\", \"min\"]);\n\n  if (min) {\n    value = value - min;\n  }\n\n  if (!size) {\n    size = 'md';\n  }\n\n  var sizeProps;\n  var newProps = (0, _hooks.usePropsConfig)('CircularProgress', {\n    size: size\n  });\n\n  if (typeof size === 'string') {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width\n    };\n  } else {\n    sizeProps = {\n      height: size,\n      width: size\n    };\n  }\n\n  var defaultThickness = 4;\n\n  if (thickness) {\n    defaultThickness = thickness;\n  }\n\n  var degree = new _reactNative.Animated.Value(0);\n\n  if (isIndeterminate) {\n    _reactNative.Animated.loop(_reactNative.Animated.timing(degree, {\n      toValue: 1,\n      duration: 600,\n      easing: _reactNative.Easing.linear,\n      useNativeDriver: false\n    })).start();\n  }\n\n  var _react$default$useSta = _react[\"default\"].useState(0),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      viewHeight = _react$default$useSta2[0],\n      setViewHeight = _react$default$useSta2[1];\n\n  var layout = function layout(e) {\n    var height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n\n  var defaultStyling = _objectSpread({\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent'\n  }, sizeProps);\n\n  var styles = _reactNative.StyleSheet.create({\n    firstProgressLayer: _objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    secondProgressLayer: _objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: '45deg'\n      }]\n    }),\n    offsetLayer: _objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      borderRadius: viewHeight / 2,\n      transform: [{\n        rotateZ: '-135deg'\n      }]\n    }),\n    animateStyle: _objectSpread({\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness\n    }, defaultStyling, {\n      transform: [{\n        rotateZ: degree.interpolate({\n          inputRange: [0, 1],\n          outputRange: ['0deg', '360deg']\n        })\n      }]\n    })\n  });\n\n  var halfSide = (max ? min ? max - min : max : 100) / 2;\n\n  var propStyle = function propStyle(percent, base_degrees) {\n    var rotateBy = base_degrees + percent * 180 / halfSide;\n    return {\n      transform: [{\n        rotateZ: rotateBy + 'deg'\n      }]\n    };\n  };\n\n  var renderThirdLayer = function renderThirdLayer(percent) {\n    if (percent > halfSide) {\n      return _react[\"default\"].createElement(_primitives.Box, {\n        borderTopColor: colorProp ? colorProp : 'green.400',\n        borderRightColor: colorProp ? colorProp : 'green.400',\n        style: [styles.secondProgressLayer, propStyle(percent - halfSide, 45)]\n      });\n    } else {\n      return _react[\"default\"].createElement(_primitives.Box, {\n        borderTopColor: trackColor ? trackColor : 'gray.200',\n        borderRightColor: trackColor ? trackColor : 'gray.200',\n        style: styles.offsetLayer\n      });\n    }\n  };\n\n  var firstProgressLayerStyle;\n\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return _react[\"default\"].createElement(_primitives.Box, _extends({}, sizeProps, {\n    rounded: 100,\n    borderWidth: defaultThickness,\n    borderColor: trackColor ? trackColor : 'gray.200',\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, props), !isIndeterminate ? _react[\"default\"].createElement(_react[\"default\"].Fragment, null, _react[\"default\"].createElement(_primitives.Box, {\n    onLayout: layout,\n    borderTopColor: colorProp ? colorProp : 'green.400',\n    borderRightColor: colorProp ? colorProp : 'green.400',\n    style: [styles.firstProgressLayer, firstProgressLayerStyle]\n  }), renderThirdLayer(value), _react[\"default\"].createElement(_primitives.Box, {\n    fontSize: sizeProps.height / 4\n  }, props.children)) : _react[\"default\"].createElement(StyleAnimatedView, {\n    onLayout: layout,\n    borderTopColor: colorProp ? colorProp : 'green.400',\n    borderRightColor: colorProp ? colorProp : 'green.400',\n    style: styles.animateStyle\n  }));\n};\n\nvar CircularProgressLabel = function CircularProgressLabel(props) {\n  return _react[\"default\"].createElement(_primitives.Text, props);\n};\n\nexports.CircularProgressLabel = CircularProgressLabel;\nvar _default = CircularProgress;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyleAnimatedView","Animated","color","border","CircularProgress","props","value","size","newProps","sizeProps","height","width","defaultThickness","degree","toValue","duration","easing","Easing","useNativeDriver","React","layout","e","setViewHeight","defaultStyling","borderBottomLeftRadius","viewHeight","borderBottomRightRadius","borderTopLeftRadius","borderTopRightRadius","borderLeftWidth","borderBottomWidth","position","borderLeftColor","borderBottomColor","styles","firstProgressLayer","borderTopWidth","borderRightWidth","transform","rotateZ","secondProgressLayer","offsetLayer","borderRadius","animateStyle","inputRange","outputRange","halfSide","max","min","propStyle","rotateBy","base_degrees","percent","renderThirdLayer","colorProp","trackColor","firstProgressLayerStyle","CircularProgressLabel"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ViewStyle, StyleSheet, Animated, Easing } from 'react-native';\n\nimport { Box, IBoxProps, ITextProps, Text } from '../../primitives';\nimport styled from 'styled-components/native';\nimport { color, border } from 'styled-system';\nimport { usePropsConfig } from '../../../hooks';\ntype sizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\n\nexport type ICircularProgressProps = IBoxProps & {\n  style?: ViewStyle;\n  children?: JSX.Element | JSX.Element[];\n  value: number;\n  size?: number | sizes;\n  thickness?: number;\n  color?: string;\n  trackColor?: string;\n  isIndeterminate?: any;\n  max?: number;\n  min?: number;\n};\n\nconst StyleAnimatedView = styled(Animated.View)<IBoxProps>(color, border);\n\nconst CircularProgress = ({\n  value,\n  size,\n  isIndeterminate,\n  thickness,\n  color: colorProp,\n  trackColor,\n  max,\n  min,\n  ...props\n}: ICircularProgressProps) => {\n  if (min) {\n    value = value - min;\n  }\n  if (!size) {\n    size = 'md';\n  }\n  let sizeProps;\n  let newProps = usePropsConfig('CircularProgress', { size: size });\n  if (typeof size === 'string') {\n    sizeProps = {\n      height: newProps.height,\n      width: newProps.width,\n    };\n  } else {\n    sizeProps = { height: size, width: size };\n  }\n\n  let defaultThickness = 4;\n  if (thickness) {\n    defaultThickness = thickness;\n  }\n  const degree: any = new Animated.Value(0);\n  if (isIndeterminate) {\n    Animated.loop(\n      Animated.timing(degree, {\n        toValue: 1,\n        duration: 600,\n        easing: Easing.linear,\n        useNativeDriver: false,\n      })\n    ).start();\n  }\n  const [viewHeight, setViewHeight] = React.useState(0);\n  const layout = (e: any) => {\n    let height = e.nativeEvent.layout.height;\n    setViewHeight(height);\n  };\n  const defaultStyling: any = {\n    borderBottomLeftRadius: viewHeight / 2,\n    borderBottomRightRadius: viewHeight / 2,\n    borderTopLeftRadius: viewHeight / 2,\n    borderTopRightRadius: viewHeight / 2,\n    borderLeftWidth: defaultThickness,\n    borderBottomWidth: defaultThickness,\n    position: 'absolute',\n    borderLeftColor: 'transparent',\n    borderBottomColor: 'transparent',\n    ...sizeProps,\n  };\n  const styles = StyleSheet.create({\n    firstProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    secondProgressLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [{ rotateZ: '45deg' }],\n    },\n    offsetLayer: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      borderRadius: viewHeight / 2,\n      transform: [{ rotateZ: '-135deg' }],\n    },\n    animateStyle: {\n      borderTopWidth: defaultThickness,\n      borderRightWidth: defaultThickness,\n      ...defaultStyling,\n      transform: [\n        {\n          rotateZ: degree.interpolate({\n            inputRange: [0, 1],\n            outputRange: ['0deg', '360deg'],\n          }),\n        },\n      ],\n    },\n  });\n  let halfSide = (max ? (min ? max - min : max) : 100) / 2; // calculating the halfvalue of the progress according to min and max\n\n  const propStyle = (percent: number, base_degrees: number) => {\n    const rotateBy = base_degrees + (percent * 180) / halfSide;\n    return {\n      transform: [{ rotateZ: rotateBy + 'deg' }],\n    };\n  };\n\n  const renderThirdLayer = (percent: number) => {\n    if (percent > halfSide) {\n      return (\n        <Box\n          borderTopColor={colorProp ? colorProp : 'green.400'}\n          borderRightColor={colorProp ? colorProp : 'green.400'}\n          style={[\n            styles.secondProgressLayer,\n            propStyle(percent - halfSide, 45),\n          ]}\n        />\n      );\n    } else {\n      return (\n        <Box\n          borderTopColor={trackColor ? trackColor : 'gray.200'}\n          borderRightColor={trackColor ? trackColor : 'gray.200'}\n          style={styles.offsetLayer}\n        />\n      );\n    }\n  };\n  let firstProgressLayerStyle;\n  if (value > halfSide) {\n    firstProgressLayerStyle = propStyle(halfSide, -135);\n  } else {\n    firstProgressLayerStyle = propStyle(value, -135);\n  }\n\n  return (\n    <Box\n      {...sizeProps}\n      rounded={100}\n      borderWidth={defaultThickness}\n      borderColor={trackColor ? trackColor : 'gray.200'}\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      {...props}\n    >\n      {!isIndeterminate ? (\n        <>\n          <Box\n            onLayout={layout}\n            borderTopColor={colorProp ? colorProp : 'green.400'}\n            borderRightColor={colorProp ? colorProp : 'green.400'}\n            style={[styles.firstProgressLayer, firstProgressLayerStyle]}\n          />\n          {renderThirdLayer(value)}\n          <Box fontSize={sizeProps.height / 4}>{props.children}</Box>\n        </>\n      ) : (\n        <StyleAnimatedView\n          onLayout={layout}\n          borderTopColor={colorProp ? colorProp : 'green.400'}\n          borderRightColor={colorProp ? colorProp : 'green.400'}\n          style={styles.animateStyle}\n        />\n      )}\n    </Box>\n  );\n};\n\nexport const CircularProgressLabel = (props: ITextProps) => {\n  return <Text {...props} />;\n};\n\nexport default CircularProgress;\n"]},"metadata":{},"sourceType":"script"}