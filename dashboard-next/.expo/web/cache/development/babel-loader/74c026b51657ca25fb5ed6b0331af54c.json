{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tools = require(\"./../tools\");\n\nvar baseStyle = {\n  borderRadius: 'md',\n  fontWeight: 'semibold',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'center',\n  alignItems: 'center'\n};\n\nfunction variantGhost(props) {\n  var c = props.colorScheme;\n\n  if (c === 'gray') {\n    return {\n      color: (0, _tools.mode)(\"gray.600\", \"whiteAlpha.900\")(props)\n    };\n  }\n\n  return {\n    color: (0, _tools.mode)(\"\".concat(c, \".600\"), \"\".concat(c, \".200\"))(props),\n    bg: 'transparent'\n  };\n}\n\nfunction variantOutline(props) {\n  var c = props.colorScheme;\n  var borderColor = (0, _tools.mode)(\"gray.200\", \"whiteAlpha.300\")(props);\n  return _objectSpread({\n    border: '1px solid',\n    borderColor: c === 'gray' ? borderColor : (0, _tools.mode)(\"\".concat(c, \".600\"), \"\".concat(c, \".200\"))(props)\n  }, variantGhost(props));\n}\n\nvar accessibleColorMap = {\n  yellow: {\n    bg: 'yellow.400',\n    color: 'black'\n  },\n  cyan: {\n    bg: 'cyan.400',\n    color: 'black'\n  }\n};\n\nfunction variantSolid(props) {\n  var c = props.colorScheme;\n  if (c === 'gray') return {\n    bg: (0, _tools.mode)(\"gray.100\", \"whiteAlpha.200\")(props)\n  };\n\n  var _ref = accessibleColorMap[c] || {},\n      _ref$bg = _ref.bg,\n      bg = _ref$bg === void 0 ? \"\".concat(c, \".400\") : _ref$bg,\n      _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'white' : _ref$color;\n\n  return {\n    bg: (0, _tools.mode)(bg, \"\".concat(c, \".200\"))(props),\n    color: (0, _tools.mode)(color, \"gray.800\")(props)\n  };\n}\n\nfunction variantLink(props) {\n  var c = props.colorScheme;\n  return {\n    padding: 0,\n    height: 'auto',\n    color: (0, _tools.mode)(\"\".concat(c, \".500\"), \"\".concat(c, \".200\"))(props),\n    textDecorationLine: 'underline'\n  };\n}\n\nfunction variantUnstyled() {\n  return {\n    m: 0,\n    p: 0\n  };\n}\n\nvar variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  link: variantLink,\n  unstyled: variantUnstyled\n};\nvar sizes = {\n  lg: {\n    minH: 12,\n    minW: 12,\n    fontSize: 'lg',\n    px: 6\n  },\n  md: {\n    minH: 10,\n    minW: 10,\n    fontSize: 'md',\n    px: 4\n  },\n  sm: {\n    minH: 8,\n    minW: 8,\n    fontSize: 'sm',\n    px: 3\n  },\n  xs: {\n    minH: 6,\n    minW: 6,\n    fontSize: 'xs',\n    px: 2\n  }\n};\nvar defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'gray'\n};\nvar _default = {\n  baseStyle: baseStyle,\n  variants: variants,\n  sizes: sizes,\n  defaultProps: defaultProps\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["button.ts"],"names":["baseStyle","borderRadius","fontWeight","display","flexDirection","justifyContent","alignItems","colorScheme","c","color","bg","borderColor","border","variantGhost","accessibleColorMap","yellow","cyan","padding","height","textDecorationLine","m","p","variants","ghost","outline","solid","link","unstyled","variantUnstyled","sizes","lg","minH","minW","fontSize","px","md","sm","xs","defaultProps","variant","size"],"mappings":"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","sourcesContent":["import { Dict, mode } from './../tools';\n\nconst baseStyle = {\n  borderRadius: 'md',\n  fontWeight: 'semibold',\n  display: 'flex',\n  flexDirection: 'row',\n  justifyContent: 'center',\n  alignItems: 'center',\n};\nfunction variantGhost(props: Dict) {\n  const { colorScheme: c } = props;\n  if (c === 'gray') {\n    return {\n      color: mode(`gray.600`, `whiteAlpha.900`)(props),\n    };\n  }\n\n  return {\n    color: mode(`${c}.600`, `${c}.200`)(props),\n    bg: 'transparent',\n  };\n}\n\nfunction variantOutline(props: Dict) {\n  const { colorScheme: c } = props;\n  const borderColor = mode(`gray.200`, `whiteAlpha.300`)(props);\n  return {\n    border: '1px solid',\n    borderColor:\n      c === 'gray' ? borderColor : mode(`${c}.600`, `${c}.200`)(props),\n    ...variantGhost(props),\n  };\n}\n\ntype AccessibleColor = {\n  bg?: string;\n  color?: string;\n};\n\n/** Accessible color overrides for less accessible colors. */\nconst accessibleColorMap: { [key: string]: AccessibleColor } = {\n  yellow: {\n    bg: 'yellow.400',\n    color: 'black',\n  },\n  cyan: {\n    bg: 'cyan.400',\n    color: 'black',\n  },\n};\n\nfunction variantSolid(props: Dict) {\n  const { colorScheme: c } = props;\n  if (c === 'gray')\n    return {\n      bg: mode(`gray.100`, `whiteAlpha.200`)(props),\n    };\n  const { bg = `${c}.400`, color = 'white' } = accessibleColorMap[c] || {};\n  return {\n    bg: mode(bg, `${c}.200`)(props),\n    color: mode(color, `gray.800`)(props),\n  };\n}\n\nfunction variantLink(props: Dict) {\n  const { colorScheme: c } = props;\n  return {\n    padding: 0,\n    height: 'auto',\n    // lineHeight: 'normal',\n    color: mode(`${c}.500`, `${c}.200`)(props),\n    textDecorationLine: 'underline',\n  };\n}\n\nfunction variantUnstyled() {\n  return {\n    m: 0,\n    p: 0,\n  };\n}\n\nconst variants = {\n  ghost: variantGhost,\n  outline: variantOutline,\n  solid: variantSolid,\n  link: variantLink,\n  unstyled: variantUnstyled,\n};\n\nconst sizes = {\n  lg: {\n    minH: 12,\n    minW: 12,\n    fontSize: 'lg',\n    px: 6,\n  },\n  md: {\n    minH: 10,\n    minW: 10,\n    fontSize: 'md',\n    px: 4,\n  },\n  sm: {\n    minH: 8,\n    minW: 8,\n    fontSize: 'sm',\n    px: 3,\n  },\n  xs: {\n    minH: 6,\n    minW: 6,\n    fontSize: 'xs',\n    px: 2,\n  },\n};\n\nconst defaultProps = {\n  variant: 'solid',\n  size: 'md',\n  colorScheme: 'gray',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  sizes,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}