{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _getIndexedChildren = _interopRequireDefault(require(\"../../../utils/getIndexedChildren\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar TabBar = function TabBar(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.TabsContext),\n      tabBarStyle = _react$default$useCon.tabBarStyle,\n      align = _react$default$useCon.align,\n      isFitted = _react$default$useCon.isFitted;\n\n  return _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    flexDirection: \"row\",\n    width: \"100%\",\n    justifyContent: isFitted ? 'space-between' : align\n  }, tabBarStyle, props), (0, _getIndexedChildren[\"default\"])(children, 'Tab'));\n};\n\nvar _default = TabBar;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["TabBar.tsx"],"names":["TabBar","props","isFitted","React","TabsContext","align"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,qCAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAA0C;AAAA,MAAzC,QAAyC,QAAzC,QAAyC;AAAA,MAA1BC,KAA0B;;AAAA,8BACKE,MAAAA,WAAAA,CAAAA,UAAAA,CAC1DC,QAAAA,CADF,WAA4DD,CADL;AAAA,MACjD,WADiD,yBACjD,WADiD;AAAA,MACjD,KADiD,yBACjD,KADiD;AAAA,MAC3BD,QAD2B,yBAC3BA,QAD2B;;AAIvD,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,aAAa,EADf,KAAA;AAEE,IAAA,KAAK,EAFP,MAAA;AAGE,IAAA,cAAc,EAAEA,QAAQ,GAAA,eAAA,GAAqBG;AAH/C,GAAA,EAAA,WAAA,EAAA,KAAA,CAAA,EAOG,CAAA,GAAA,mBAAA,WAAA,EAAA,QAAA,EARL,KAQK,CAPH,CADF;AAJF,CAAA;;eAiBeL,M","sourcesContent":["import React from 'react';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport Box from '../../primitives/Box';\nimport { TabsContext } from './Context';\nimport type { ITabsContextProps, ITabBarProps } from './props';\n\nconst TabBar = ({ children, ...props }: ITabBarProps) => {\n  const { tabBarStyle, align, isFitted }: ITabsContextProps = React.useContext(\n    TabsContext\n  );\n  return (\n    <Box\n      flexDirection=\"row\"\n      width=\"100%\"\n      justifyContent={isFitted ? 'space-between' : align}\n      {...tabBarStyle}\n      {...props}\n    >\n      {getIndexedChildren(children, 'Tab')}\n    </Box>\n  );\n};\n\nexport default TabBar;\n"]},"metadata":{},"sourceType":"script"}