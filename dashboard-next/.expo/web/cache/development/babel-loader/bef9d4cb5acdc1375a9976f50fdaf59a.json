{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.PopoverCloseButton = exports.PopoverFooter = exports.PopoverBody = exports.PopoverContent = exports.PopoverHeader = exports.PopoverTrigger = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _customProps = require(\"../../../utils/customProps\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _View = _interopRequireDefault(require(\"../../primitives/View\"));\n\nvar _CloseButton = _interopRequireDefault(require(\"../CloseButton\"));\n\nvar _Tooltip = _interopRequireDefault(require(\"./Tooltip\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledPopover = (0, _native[\"default\"])(_Tooltip[\"default\"])(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout);\n\nvar PopoverContext = _react[\"default\"].createContext({\n  PopoverTrigger: null,\n  setPopoverTrigger: function setPopoverTrigger(_child) {},\n  PopoverRef: null,\n  backgroundColor: '',\n  borderColor: '',\n  borderWidth: null,\n  initialFocusRef: null,\n  finalFocusRef: null,\n  isVisible: false,\n  setIsVisible: function setIsVisible(_bool) {},\n  onOpen: function onOpen() {},\n  onClose: function onClose() {},\n  closeOnBlur: true,\n  newProps: {\n    popoverCloseButtonProps: {},\n    popoverFooterProps: {},\n    popoverBodyProps: {},\n    popoverContentProps: {},\n    popoverHeaderProps: {}\n  }\n});\n\nvar Popover = function Popover(_ref) {\n  var children = _ref.children,\n      initialFocusRef = _ref.initialFocusRef,\n      finalFocusRef = _ref.finalFocusRef,\n      onOpen = _ref.onOpen,\n      onClose = _ref.onClose,\n      closeOnBlur = _ref.closeOnBlur,\n      id = _ref.id,\n      backgroundColor = _ref.backgroundColor,\n      bg = _ref.bg,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      props = _objectWithoutProperties(_ref, [\"children\", \"initialFocusRef\", \"finalFocusRef\", \"onOpen\", \"onClose\", \"closeOnBlur\", \"id\", \"backgroundColor\", \"bg\", \"borderWidth\", \"borderColor\"]);\n\n  var _react$default$useSta = _react[\"default\"].useState(),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      trigger = _react$default$useSta2[0],\n      setTrigger = _react$default$useSta2[1];\n\n  var _react$default$useSta3 = _react[\"default\"].useState(false),\n      _react$default$useSta4 = _slicedToArray(_react$default$useSta3, 2),\n      isVisible = _react$default$useSta4[0],\n      setIsVisible = _react$default$useSta4[1];\n\n  var popOverRef = _react[\"default\"].useRef(null);\n\n  var newProps = (0, _hooks.usePropsConfig)('Popover', props);\n  var value = {\n    PopoverTrigger: trigger,\n    setPopoverTrigger: setTrigger,\n    PopoverRef: popOverRef,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    isVisible: isVisible,\n    setIsVisible: setIsVisible,\n    onOpen: onOpen,\n    onClose: onClose,\n    newProps: newProps,\n    closeOnBlur: closeOnBlur,\n    backgroundColor: bg || backgroundColor || _objectSpread({}, newProps.popoverProps).backgroundColor,\n    borderColor: borderColor || _objectSpread({}, newProps.popoverProps).borderColor,\n    borderWidth: borderWidth || _objectSpread({}, newProps.popoverProps).borderWidth\n  };\n  return _react[\"default\"].createElement(PopoverContext.Provider, {\n    value: value\n  }, _react[\"default\"].createElement(_View[\"default\"], {\n    nativeID: id\n  }, children));\n};\n\nvar PopoverTrigger = function PopoverTrigger(_ref2) {\n  var children = _ref2.children;\n\n  var _react$default$useCon = _react[\"default\"].useContext(PopoverContext),\n      setPopoverTrigger = _react$default$useCon.setPopoverTrigger;\n\n  _react[\"default\"].useEffect(function () {\n    setPopoverTrigger(_react[\"default\"].Children.map(children, function (child) {\n      return _react[\"default\"].cloneElement(child, {\n        isDisabled: true,\n        disabled: true\n      }, child.props.children);\n    }));\n  }, [setPopoverTrigger, children]);\n\n  return null;\n};\n\nexports.PopoverTrigger = PopoverTrigger;\n\nvar PopoverHeader = function PopoverHeader(props) {\n  var _react$default$useCon2 = _react[\"default\"].useContext(PopoverContext),\n      popoverHeaderProps = _react$default$useCon2.newProps.popoverHeaderProps;\n\n  return _react[\"default\"].createElement(_Box[\"default\"], _extends({}, popoverHeaderProps, props));\n};\n\nexports.PopoverHeader = PopoverHeader;\n\nvar PopoverContent = function PopoverContent(_ref3) {\n  var children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"children\"]);\n\n  var _react$default$useCon3 = _react[\"default\"].useContext(PopoverContext),\n      PopoverRef = _react$default$useCon3.PopoverRef,\n      PopoverTrigger = _react$default$useCon3.PopoverTrigger,\n      _onOpen = _react$default$useCon3.onOpen,\n      initialFocusRef = _react$default$useCon3.initialFocusRef,\n      _onClose = _react$default$useCon3.onClose,\n      finalFocusRef = _react$default$useCon3.finalFocusRef,\n      closeOnBlur = _react$default$useCon3.closeOnBlur,\n      newProps = _react$default$useCon3.newProps,\n      backgroundColor = _react$default$useCon3.backgroundColor,\n      borderColor = _react$default$useCon3.borderColor,\n      borderWidth = _react$default$useCon3.borderWidth;\n\n  return _react[\"default\"].createElement(StyledPopover, _extends({}, newProps.popoverContentProps, {\n    width: newProps._width || newProps.size || '45%',\n    backgroundColor: backgroundColor,\n    borderColor: borderColor,\n    borderWidth: borderWidth,\n    ref: PopoverRef,\n    onOpen: function onOpen() {\n      _onOpen && _onOpen();\n      initialFocusRef === null || initialFocusRef === void 0 ? void 0 : initialFocusRef.current.focus();\n    },\n    onClose: function onClose() {\n      _onClose && _onClose();\n      finalFocusRef === null || finalFocusRef === void 0 ? void 0 : finalFocusRef.current.focus();\n    },\n    closeOnBlur: closeOnBlur !== null && closeOnBlur !== void 0 ? closeOnBlur : true,\n    popover: _react[\"default\"].createElement(_Box[\"default\"], {\n      width: \"100%\"\n    }, _react[\"default\"].createElement(_Box[\"default\"], null, children))\n  }, props), PopoverTrigger);\n};\n\nexports.PopoverContent = PopoverContent;\n\nvar PopoverBody = function PopoverBody(props) {\n  var _react$default$useCon4 = _react[\"default\"].useContext(PopoverContext),\n      popoverBodyProps = _react$default$useCon4.newProps.popoverBodyProps,\n      borderColor = _react$default$useCon4.borderColor,\n      borderWidth = _react$default$useCon4.borderWidth;\n\n  return _react[\"default\"].createElement(_Box[\"default\"], _extends({}, popoverBodyProps, {\n    borderTopColor: borderColor,\n    borderTopWidth: borderWidth\n  }, props));\n};\n\nexports.PopoverBody = PopoverBody;\n\nvar PopoverFooter = function PopoverFooter(props) {\n  var _react$default$useCon5 = _react[\"default\"].useContext(PopoverContext),\n      popoverFooterProps = _react$default$useCon5.newProps.popoverFooterProps,\n      borderColor = _react$default$useCon5.borderColor,\n      borderWidth = _react$default$useCon5.borderWidth;\n\n  return _react[\"default\"].createElement(_Box[\"default\"], _extends({}, popoverFooterProps, {\n    borderTopColor: borderColor,\n    borderTopWidth: borderWidth\n  }, props));\n};\n\nexports.PopoverFooter = PopoverFooter;\n\nvar PopoverCloseButton = function PopoverCloseButton(props) {\n  var _react$default$useCon6 = _react[\"default\"].useContext(PopoverContext),\n      PopoverRef = _react$default$useCon6.PopoverRef,\n      popoverCloseButtonProps = _react$default$useCon6.newProps.popoverCloseButtonProps;\n\n  return _react[\"default\"].createElement(_View[\"default\"], {\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n    zIndex: 1\n  }, _react[\"default\"].createElement(_CloseButton[\"default\"], _extends({}, popoverCloseButtonProps, props, {\n    onPress: function onPress() {\n      return PopoverRef === null || PopoverRef === void 0 ? void 0 : PopoverRef.current.toggleTooltip();\n    }\n  })));\n};\n\nexports.PopoverCloseButton = PopoverCloseButton;\nvar _default = Popover;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledPopover","Tooltip","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","PopoverContext","PopoverTrigger","setPopoverTrigger","_child","PopoverRef","backgroundColor","borderColor","borderWidth","initialFocusRef","finalFocusRef","isVisible","setIsVisible","_bool","onOpen","onClose","closeOnBlur","newProps","popoverCloseButtonProps","popoverFooterProps","popoverBodyProps","popoverContentProps","popoverHeaderProps","Popover","props","React","popOverRef","value","bg","popoverProps","id","children","child","isDisabled","disabled","PopoverHeader","PopoverContent","PopoverBody","PopoverFooter","PopoverCloseButton"],"mappings":"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","sourcesContent":["import React from 'react';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, position, space } from 'styled-system';\nimport { usePropsConfig } from '../../../hooks';\nimport {\n  customBackground,\n  customBorder,\n  customExtra,\n  customLayout,\n  customOutline,\n  customPosition,\n  customShadow,\n} from '../../../utils/customProps';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport View from '../../primitives/View';\nimport CloseButton from '../CloseButton';\nimport type { IPopoverProps } from './props';\nimport Tooltip from './Tooltip';\n\nconst StyledPopover = styled(Tooltip)<IPopoverProps>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\n\nconst PopoverContext = React.createContext({\n  PopoverTrigger: null,\n  setPopoverTrigger: (_child: JSX.Element[] | JSX.Element) => {},\n  PopoverRef: null,\n  backgroundColor: '',\n  borderColor: '',\n  borderWidth: null,\n  initialFocusRef: null,\n  finalFocusRef: null,\n  isVisible: false,\n  setIsVisible: (_bool: boolean) => {},\n  onOpen: () => {},\n  onClose: () => {},\n  closeOnBlur: true,\n  newProps: {\n    popoverCloseButtonProps: {},\n    popoverFooterProps: {},\n    popoverBodyProps: {},\n    popoverContentProps: {},\n    popoverHeaderProps: {},\n  },\n});\n\nconst Popover = ({\n  children,\n  initialFocusRef,\n  finalFocusRef,\n  onOpen,\n  onClose,\n  closeOnBlur,\n  id,\n  backgroundColor,\n  bg,\n  borderWidth,\n  borderColor,\n  ...props\n}: IPopoverProps) => {\n  const [trigger, setTrigger] = React.useState();\n  const [isVisible, setIsVisible] = React.useState(false);\n  const popOverRef: any = React.useRef(null);\n  const newProps = usePropsConfig('Popover', props);\n  const value: any = {\n    PopoverTrigger: trigger,\n    setPopoverTrigger: setTrigger,\n    PopoverRef: popOverRef,\n    initialFocusRef: initialFocusRef,\n    finalFocusRef: finalFocusRef,\n    isVisible: isVisible,\n    setIsVisible: setIsVisible,\n    onOpen: onOpen,\n    onClose: onClose,\n    newProps: newProps,\n    closeOnBlur: closeOnBlur,\n    backgroundColor:\n      bg || backgroundColor || { ...newProps.popoverProps }.backgroundColor,\n    borderColor: borderColor || { ...newProps.popoverProps }.borderColor,\n    borderWidth: borderWidth || { ...newProps.popoverProps }.borderWidth,\n  };\n\n  return (\n    <PopoverContext.Provider value={value}>\n      <View nativeID={id}>{children}</View>\n    </PopoverContext.Provider>\n  );\n};\n\nexport const PopoverTrigger = ({ children }: any) => {\n  const { setPopoverTrigger } = React.useContext(PopoverContext);\n  React.useEffect(() => {\n    setPopoverTrigger(\n      React.Children.map(children, (child) => {\n        return React.cloneElement(\n          child,\n          { isDisabled: true, disabled: true },\n          child.props.children\n        );\n      })\n    );\n  }, [setPopoverTrigger, children]);\n\n  return null;\n};\n\nexport const PopoverHeader = (props: IBoxProps) => {\n  const {\n    newProps: { popoverHeaderProps },\n  } = React.useContext(PopoverContext);\n  return <Box {...popoverHeaderProps} {...props} />;\n};\n\nexport const PopoverContent = ({\n  children,\n  ...props\n}: IPopoverProps & { ref?: any }) => {\n  const {\n    PopoverRef,\n    PopoverTrigger,\n    onOpen,\n    initialFocusRef,\n    onClose,\n    finalFocusRef,\n    closeOnBlur,\n    newProps,\n    backgroundColor,\n    borderColor,\n    borderWidth,\n  }: any = React.useContext(PopoverContext);\n  return (\n    <StyledPopover\n      {...newProps.popoverContentProps}\n      width={newProps._width || newProps.size || '45%'}\n      backgroundColor={backgroundColor}\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      ref={PopoverRef}\n      onOpen={() => {\n        onOpen && onOpen();\n        initialFocusRef?.current.focus();\n      }}\n      onClose={() => {\n        onClose && onClose();\n        finalFocusRef?.current.focus();\n      }}\n      closeOnBlur={closeOnBlur ?? true}\n      popover={\n        <Box width=\"100%\">\n          <Box>{children}</Box>\n        </Box>\n      }\n      {...props}\n    >\n      {PopoverTrigger}\n    </StyledPopover>\n  );\n};\n\nexport const PopoverBody = (props: any) => {\n  const {\n    newProps: { popoverBodyProps },\n    borderColor,\n    borderWidth,\n  } = React.useContext(PopoverContext);\n  return (\n    <Box\n      {...popoverBodyProps}\n      borderTopColor={borderColor}\n      borderTopWidth={borderWidth}\n      {...props}\n    />\n  );\n};\n\nexport const PopoverFooter = (props: any) => {\n  const {\n    newProps: { popoverFooterProps },\n    borderColor,\n    borderWidth,\n  } = React.useContext(PopoverContext);\n  return (\n    <Box\n      {...popoverFooterProps}\n      borderTopColor={borderColor}\n      borderTopWidth={borderWidth}\n      {...props}\n    />\n  );\n};\n\nexport const PopoverCloseButton = (props: any) => {\n  const {\n    PopoverRef,\n    newProps: { popoverCloseButtonProps },\n  }: any = React.useContext(PopoverContext);\n\n  return (\n    <View position=\"absolute\" right={0} top={0} zIndex={1}>\n      <CloseButton\n        {...popoverCloseButtonProps}\n        {...props}\n        onPress={() => PopoverRef?.current.toggleTooltip()}\n      />\n    </View>\n  );\n};\n\nexport default Popover;\nexport type { IPopoverProps };\n"]},"metadata":{},"sourceType":"script"}