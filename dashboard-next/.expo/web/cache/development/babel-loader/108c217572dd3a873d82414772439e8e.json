{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nvar _Collapse = _interopRequireDefault(require(\"../Collapse\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AccordionPanel = function AccordionPanel(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.AccordionItemContext),\n      isOpen = _react$default$useCon.isOpen;\n\n  var borderColor = (0, _hooks.useToken)('colors', 'muted.200');\n  return _react[\"default\"].createElement(_Collapse[\"default\"], {\n    isOpen: isOpen\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    p: 3,\n    borderColor: borderColor\n  }, props), children));\n};\n\nvar _default = AccordionPanel;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["AccordionPanel.tsx"],"names":["AccordionPanel","props","isOpen","React","AccordionItemContext","borderColor"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AACA,IAAA,QAAA,GAAA,OAAA,aAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,eAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,OAAkD;AAAA,MAAjD,QAAiD,QAAjD,QAAiD;AAAA,MAAlCC,KAAkC;;AAAA,8BACxBE,MAAAA,WAAAA,CAAAA,UAAAA,CAC7CC,QAAAA,CADF,oBAA+CD,CADwB;AAAA,MAC/DD,MAD+D,yBAC/DA,MAD+D;;AAIvE,MAAMG,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAApB,WAAoB,CAApB;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,SAAD,WAAA,EAAA;AAAU,IAAA,MAAM,EAAEH;AAAlB,GAAA,EACE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AAAK,IAAA,CAAC,EAAN,CAAA;AAAW,IAAA,WAAW,EAAEG;AAAxB,GAAA,EAAA,KAAA,CAAA,EAFJ,QAEI,CADF,CADF;AALF,CAAA;;eAceL,c","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useToken } from '../../../hooks';\nimport { AccordionItemContext } from './Context';\nimport Collapse from '../Collapse';\nimport type { IAccordionPanelProps, IAccordionItemContextProps } from './props';\n\nconst AccordionPanel = ({ children, ...props }: IAccordionPanelProps) => {\n  const { isOpen }: IAccordionItemContextProps = React.useContext(\n    AccordionItemContext\n  );\n  const borderColor = useToken('colors', 'muted.200');\n  return (\n    <Collapse isOpen={isOpen}>\n      <Box p={3} borderColor={borderColor} {...props}>\n        {children}\n      </Box>\n    </Collapse>\n  );\n};\n\nexport default AccordionPanel;\n"]},"metadata":{},"sourceType":"script"}