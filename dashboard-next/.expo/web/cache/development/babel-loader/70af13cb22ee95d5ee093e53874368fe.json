{"ast":null,"code":"\"use strict\";\n\nvar _extends2 = require(\"@babel/runtime/helpers/extends\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Context = require(\"./Context\");\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar SliderThumb = function SliderThumb(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var _ref2 = (0, _hooks.usePropsConfig)('SliderThumb', props),\n      newProps = _extends2({}, _ref2);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.SliderContext),\n      _react$default$useCon2 = _react$default$useCon.sliderOffset,\n      sliderOffset = _react$default$useCon2 === void 0 ? 0 : _react$default$useCon2,\n      panResponder = _react$default$useCon.panResponder,\n      colorScheme = _react$default$useCon.colorScheme,\n      _react$default$useCon3 = _react$default$useCon.thumbSize,\n      thumbSize = _react$default$useCon3 === void 0 ? 0 : _react$default$useCon3,\n      orientation = _react$default$useCon.orientation;\n\n  var sliderThumbPosition = sliderOffset - 8 - thumbSize / 2;\n\n  var customStyle = _reactNative.StyleSheet.create({\n    SliderThumb: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 999,\n      padding: 4\n    },\n    verticalStyle: {\n      bottom: sliderThumbPosition\n    },\n    horizontalStyle: {\n      left: sliderThumbPosition\n    }\n  });\n\n  var sizedIcon = function sizedIcon() {\n    return _react[\"default\"].cloneElement(children, {\n      size: \"\".concat(thumbSize, \"px\"),\n      color: children.props.color ? children.props.color : colorScheme\n    }, children.props.children);\n  };\n\n  return _react[\"default\"].createElement(_reactNative.Animated.View, _extends({\n    style: [customStyle.SliderThumb, orientation === 'vertical' ? customStyle.verticalStyle : customStyle.horizontalStyle]\n  }, panResponder.panHandlers), _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    cursor: _reactNative.Platform.OS === 'web' ? 'pointer' : null,\n    position: \"relative\",\n    borderRadius: \"full\",\n    backgroundColor: \"light.50\",\n    p: 1,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    userSelect: _reactNative.Platform.OS === 'web' ? 'none' : null\n  }, newProps), children ? sizedIcon() : _react[\"default\"].createElement(_Icon[\"default\"], {\n    name: \"circle-medium\",\n    type: \"MaterialCommunityIcons\",\n    color: colorScheme,\n    size: \"\".concat(thumbSize, \"px\"),\n    opacity: 0\n  })));\n};\n\nvar _default = SliderThumb;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["SliderThumb.tsx"],"names":["SliderThumb","props","newProps","sliderOffset","thumbSize","orientation","React","SliderContext","sliderThumbPosition","customStyle","position","display","justifyContent","alignItems","borderRadius","padding","verticalStyle","bottom","horizontalStyle","left","sizedIcon","size","color","children","colorScheme","panResponder","Platform"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Animated, Platform } from 'react-native';\nimport { SliderContext } from './Context';\nimport Box from '../Box';\nimport Icon from '../Icon';\nimport { usePropsConfig } from '../../../hooks';\nimport type { ISliderProps, ISliderContextProps } from './props';\n\nconst SliderThumb = ({ children, ...props }: ISliderProps) => {\n  const { ...newProps } = usePropsConfig('SliderThumb', props);\n  const {\n    sliderOffset = 0,\n    panResponder,\n    colorScheme,\n    thumbSize = 0,\n    orientation,\n  }: ISliderContextProps = React.useContext(SliderContext);\n\n  const sliderThumbPosition = sliderOffset - 8 - thumbSize / 2;\n\n  const customStyle = StyleSheet.create({\n    SliderThumb: {\n      position: 'absolute',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      borderRadius: 999,\n      padding: 4, // increased touch area for better touch detection.\n    },\n    verticalStyle: {\n      bottom: sliderThumbPosition,\n    },\n    horizontalStyle: {\n      left: sliderThumbPosition,\n    },\n  });\n\n  const sizedIcon = () =>\n    React.cloneElement(\n      children,\n      {\n        size: `${thumbSize}px`,\n        color: children.props.color ? children.props.color : colorScheme,\n      },\n      children.props.children\n    );\n\n  return (\n    <Animated.View\n      style={[\n        customStyle.SliderThumb,\n        orientation === 'vertical'\n          ? customStyle.verticalStyle\n          : customStyle.horizontalStyle,\n      ]}\n      {...panResponder.panHandlers}\n    >\n      <Box\n        cursor={Platform.OS === 'web' ? 'pointer' : null}\n        position=\"relative\"\n        borderRadius=\"full\"\n        backgroundColor=\"light.50\"\n        p={1}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        userSelect={Platform.OS === 'web' ? 'none' : null}\n        {...newProps}\n      >\n        {children ? (\n          sizedIcon()\n        ) : (\n          <Icon\n            name=\"circle-medium\"\n            type=\"MaterialCommunityIcons\"\n            color={colorScheme}\n            size={`${thumbSize}px`}\n            opacity={0}\n          />\n        )}\n      </Box>\n    </Animated.View>\n  );\n};\n\nexport default SliderThumb;\n"]},"metadata":{},"sourceType":"script"}