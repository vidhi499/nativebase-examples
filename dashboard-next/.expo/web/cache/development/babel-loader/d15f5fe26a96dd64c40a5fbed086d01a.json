{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"NativeBaseConsumer\", {\n  enumerable: true,\n  get: function get() {\n    return _native.ThemeConsumer;\n  }\n});\nObject.defineProperty(exports, \"NativeBaseContext\", {\n  enumerable: true,\n  get: function get() {\n    return _native.ThemeContext;\n  }\n});\nexports.NativeBaseProvider = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = require(\"styled-components/native\");\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"./../theme\");\n\nvar _colorMode = require(\"./../color-mode\");\n\nvar _OverlayProvider = _interopRequireDefault(require(\"./Overlay/OverlayProvider\"));\n\nvar _View = _interopRequireDefault(require(\"../components/primitives/View\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ColoredBackground = function ColoredBackground(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  return _react[\"default\"].createElement(_View[\"default\"], _extends({}, props, {\n    bg: (0, _colorMode.useColorModeValue)(\"gray.50\", \"gray.800\"),\n    flex: 1\n  }), _react[\"default\"].createElement(_OverlayProvider[\"default\"], null, children));\n};\n\nvar NativeBaseProvider = function NativeBaseProvider(props) {\n  var colorModeManager = props.colorModeManager,\n      _props$theme = props.theme,\n      theme = _props$theme === void 0 ? _theme.theme : _props$theme,\n      disableSafeArea = props.disableSafeArea,\n      rest = _objectWithoutProperties(props, [\"colorModeManager\", \"theme\", \"disableSafeArea\"]);\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      flex: 1\n    }\n  });\n\n  return _react[\"default\"].createElement(_native.ThemeProvider, {\n    theme: theme\n  }, _react[\"default\"].createElement(_colorMode.ColorModeProvider, {\n    colorModeManager: colorModeManager,\n    options: theme.config\n  }, disableSafeArea ? _react[\"default\"].createElement(ColoredBackground, rest) : _react[\"default\"].createElement(_reactNative.SafeAreaView, {\n    style: styles.container\n  }, _react[\"default\"].createElement(ColoredBackground, rest))));\n};\n\nexports.NativeBaseProvider = NativeBaseProvider;","map":{"version":3,"sources":["NativeBaseProvider.tsx"],"names":["ColoredBackground","props","NativeBaseProvider","theme","defaultTheme","rest","styles","container","flex","config","disableSafeArea"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;;;AAMA,IAAA,MAAA,GAAA,OAAA,cAAA;;AACA,IAAA,UAAA,GAAA,OAAA,mBAAA;;AAKA,IAAA,gBAAA,GAAA,sBAAA,CAAA,OAAA,6BAAA,CAAA;;AACA,IAAA,KAAA,GAAA,sBAAA,CAAA,OAAA,iCAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAAC,QAAD,QAAC,QAAD;AAAA,MAAgBC,KAAhB;;AAAA,SACxB,MAAA,WAAA,CAAA,aAAA,CAAC,KAAD,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AAAiB,IAAA,EAAE,EAAE,CAAA,GAAA,UAAA,CAAA,iBAAA,EAAA,SAAA,EAArB,UAAqB,CAArB;AAA+D,IAAA,IAAI,EAAE;AAArE,GAAA,CAAA,EACE,MAAA,WAAA,CAAA,aAAA,CAAC,gBAAD,WAAA,EAAA,IAAA,EAFJ,QAEI,CADF,CADwB;AAAA,CAA1B;;AAaA,IAAMC,kBAAkB,GAAID,SAAtBC,kBAAsBD,CAAAA,KAAD,EAAoC;AAAA,MACvD,gBADuD,GAC7D,KAD6D,CACvD,gBADuD;AAAA,qBAC7D,KAD6D,CAG3DE,KAH2D;AAAA,MAG3DA,KAH2D,6BAGnDC,MAAAA,CAFJ,KADuD;AAAA,MACvD,eADuD,GAC7D,KAD6D,CACvD,eADuD;AAAA,MAKxDC,IALwD,4BAC7D,KAD6D;;AAQ7D,MAAMC,MAAM,GAAG,YAAA,CAAA,UAAA,CAAA,MAAA,CAAkB;AAC/BC,IAAAA,SAAS,EAAE;AACTC,MAAAA,IAAI,EAAE;AADG;AADoB,GAAlB,CAAf;;AAMA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,OAAA,CAAD,aAAA,EAAA;AAAe,IAAA,KAAK,EAAEL;AAAtB,GAAA,EACE,MAAA,WAAA,CAAA,aAAA,CAAC,UAAA,CAAD,iBAAA,EAAA;AACE,IAAA,gBAAgB,EADlB,gBAAA;AAEE,IAAA,OAAO,EAAEA,KAAK,CAACM;AAFjB,GAAA,EAIGC,eAAe,GACd,MAAA,WAAA,CAAA,aAAA,CAAA,iBAAA,EADc,IACd,CADc,GAGd,MAAA,WAAA,CAAA,aAAA,CAAC,YAAA,CAAD,YAAA,EAAA;AAAc,IAAA,KAAK,EAAEJ,MAAM,CAACC;AAA5B,GAAA,EACE,MAAA,WAAA,CAAA,aAAA,CAAA,iBAAA,EAVV,IAUU,CADF,CAPJ,CADF,CADF;AAdF,CAAA","sourcesContent":["import React from 'react';\nimport {\n  ThemeConsumer,\n  ThemeContext,\n  ThemeProvider,\n} from 'styled-components/native';\nimport { SafeAreaView, StyleSheet } from 'react-native';\nimport { theme as defaultTheme, ITheme } from './../theme';\nimport {\n  IColorModeProviderProps,\n  ColorModeProvider,\n  useColorModeValue,\n} from './../color-mode';\nimport OverlayProvider from './Overlay/OverlayProvider';\nimport View from '../components/primitives/View';\n\nconst ColoredBackground = ({ children, ...props }: any) => (\n  <View {...props} bg={useColorModeValue(`gray.50`, `gray.800`)} flex={1}>\n    <OverlayProvider>{children}</OverlayProvider>\n  </View>\n);\n\nexport interface NativeBaseProviderProps {\n  theme?: ITheme;\n  colorModeManager?: IColorModeProviderProps['colorModeManager'];\n  children?: React.ReactNode;\n  disableSafeArea?: boolean;\n}\n\nconst NativeBaseProvider = (props: NativeBaseProviderProps) => {\n  const {\n    colorModeManager,\n    theme = defaultTheme,\n    disableSafeArea,\n    ...rest\n  } = props;\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ColorModeProvider\n        colorModeManager={colorModeManager}\n        options={theme.config}\n      >\n        {disableSafeArea ? (\n          <ColoredBackground {...rest} />\n        ) : (\n          <SafeAreaView style={styles.container}>\n            <ColoredBackground {...rest} />\n          </SafeAreaView>\n        )}\n      </ColorModeProvider>\n    </ThemeProvider>\n  );\n};\n\nexport {\n  NativeBaseProvider,\n  ThemeConsumer as NativeBaseConsumer,\n  ThemeContext as NativeBaseContext,\n};\n"]},"metadata":{},"sourceType":"script"}