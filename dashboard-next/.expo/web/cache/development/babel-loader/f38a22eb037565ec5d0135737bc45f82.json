{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _primitives = require(\"../../primitives\");\n\nvar _Context = require(\"./Context\");\n\nvar _utils = require(\"../../../theme/tools/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AlertIcon = function AlertIcon(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var newProps = (0, _utils.omitUndefined)(props);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.AlertContext),\n      status = _react$default$useCon.status,\n      iconColor = _react$default$useCon.iconColor;\n\n  var iconNameSetter = function iconNameSetter() {\n    switch (status) {\n      case 'error':\n        return 'close';\n\n      case 'warning':\n        return 'exclamation-thick';\n\n      case 'success':\n        return 'check';\n\n      default:\n        return 'information-variant';\n    }\n  };\n\n  return _react[\"default\"].createElement(_primitives.Box, {\n    alignSelf: \"center\"\n  }, children || _react[\"default\"].createElement(_primitives.Icon, _extends({\n    name: iconNameSetter(),\n    type: \"MaterialCommunityIcons\",\n    size: 8,\n    mr: 2,\n    color: iconColor\n  }, newProps)));\n};\n\nvar _default = AlertIcon;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["AlertIcon.tsx"],"names":["AlertIcon","props","newProps","iconColor","React","AlertContext","iconNameSetter","children"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,WAAA,GAAA,OAAA,oBAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;AACA,IAAA,MAAA,GAAA,OAAA,8BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAiC;AAAA,MAAhC,QAAgC,QAAhC,QAAgC;AAAA,MAAjBC,KAAiB;;AACjD,MAAMC,QAAQ,GAAG,CAAA,GAAA,MAAA,CAAA,aAAA,EAAjB,KAAiB,CAAjB;;AADiD,8BAEJE,MAAAA,WAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CAA9D,YAA6CD,CAFI;AAAA,MAE3C,MAF2C,yBAE3C,MAF2C;AAAA,MAEjCD,SAFiC,yBAEjCA,SAFiC;;AAGjD,MAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,YAAA,MAAA;AACE,WAAA,OAAA;AACE,eAAA,OAAA;;AACF,WAAA,SAAA;AACE,eAAA,mBAAA;;AACF,WAAA,SAAA;AACE,eAAA,OAAA;;AACF;AACE,eAAA,qBAAA;AARJ;AADF,GAAA;;AAaA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,GAAA,EAAA;AAAK,IAAA,SAAS,EAAC;AAAf,GAAA,EACGC,QAAQ,IACP,MAAA,WAAA,CAAA,aAAA,CAAC,WAAA,CAAD,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,IAAI,EAAED,cADR,EAAA;AAEE,IAAA,IAAI,EAFN,wBAAA;AAGE,IAAA,IAAI,EAHN,CAAA;AAIE,IAAA,EAAE,EAJJ,CAAA;AAKE,IAAA,KAAK,EAAEH;AALT,GAAA,EAHN,QAGM,CAAA,CAFJ,CADF;AAhBF,CAAA;;eA+BeH,S","sourcesContent":["import React from 'react';\nimport { Box, Icon } from '../../primitives';\nimport type { IAlertContext } from './index';\nimport { AlertContext } from './Context';\nimport { omitUndefined } from '../../../theme/tools/utils';\n\nconst AlertIcon = ({ children, ...props }: any) => {\n  const newProps = omitUndefined(props);\n  const { status, iconColor }: IAlertContext = React.useContext(AlertContext);\n  const iconNameSetter = () => {\n    switch (status) {\n      case 'error':\n        return 'close';\n      case 'warning':\n        return 'exclamation-thick';\n      case 'success':\n        return 'check';\n      default:\n        return 'information-variant';\n    }\n  };\n\n  return (\n    <Box alignSelf=\"center\">\n      {children || (\n        <Icon\n          name={iconNameSetter()}\n          type=\"MaterialCommunityIcons\"\n          size={8}\n          mr={2}\n          color={iconColor}\n          {...newProps}\n        />\n      )}\n    </Box>\n  );\n};\nexport default AlertIcon;\n"]},"metadata":{},"sourceType":"script"}