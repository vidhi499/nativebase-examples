{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Icon = _interopRequireDefault(require(\"../Icon\"));\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _RadioGroup = require(\"./RadioGroup\");\n\nvar _useRadio = require(\"./useRadio\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Radio = function Radio(_ref, ref) {\n  var icon = _ref.icon,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"icon\", \"children\"]);\n\n  var contextState = _react[\"default\"].useContext(_RadioGroup.RadioContext);\n\n  var _ref2 = (0, _hooks.usePropsConfig)('Radio', _objectSpread({}, contextState, {}, props)),\n      activeColor = _ref2.activeColor,\n      borderColor = _ref2.borderColor,\n      iconColor = _ref2.iconColor,\n      size = _ref2.size,\n      isInvalid = _ref2.isInvalid,\n      newProps = _objectWithoutProperties(_ref2, [\"activeColor\", \"borderColor\", \"iconColor\", \"size\", \"isInvalid\"]);\n\n  var sizedIcon = function sizedIcon() {\n    return _react[\"default\"].cloneElement(icon, {\n      size: size,\n      color: icon.props.color ? icon.props.color : iconColor\n    });\n  };\n\n  var _ref3 = (0, _useRadio.useRadio)(props, contextState, null),\n      inputProps = _ref3.inputProps;\n\n  var checked = inputProps.checked,\n      isDisabled = inputProps.disabled;\n  return _react[\"default\"].createElement(_reactNative.TouchableOpacity, _extends({\n    activeOpacity: 1,\n    ref: ref\n  }, inputProps), _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }, newProps), _react[\"default\"].createElement(_Box[\"default\"], {\n    backgroundColor: checked ? isDisabled ? borderColor : activeColor : 'transparent',\n    borderColor: checked ? isDisabled || isInvalid ? borderColor : activeColor : borderColor,\n    borderWidth: 2,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 999\n  }, icon && checked ? sizedIcon() : _react[\"default\"].createElement(_Icon[\"default\"], {\n    name: \"circle-medium\",\n    type: \"MaterialCommunityIcons\",\n    size: size,\n    color: iconColor,\n    opacity: checked ? 1 : 0\n  })), children));\n};\n\nvar _default = _react[\"default\"].forwardRef(Radio);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["Radio.tsx"],"names":["Radio","props","contextState","React","RadioContext","newProps","sizedIcon","size","color","icon","iconColor","inputProps","disabled","isDisabled","ref","checked"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Icon from '../Icon';\nimport Box from '../Box';\nimport { usePropsConfig } from '../../../hooks';\nimport { RadioContext } from './RadioGroup';\nimport type { IRadioProps } from './props';\nimport { useRadio } from './useRadio';\n\nconst Radio = ({ icon, children, ...props }: IRadioProps, ref: any) => {\n  const contextState = React.useContext(RadioContext);\n\n  const {\n    activeColor,\n    borderColor,\n    iconColor,\n    size,\n    isInvalid,\n    ...newProps\n  } = usePropsConfig('Radio', {\n    ...contextState,\n    ...props,\n  });\n\n  // only calling below function when icon exist.\n  const sizedIcon = () =>\n    //@ts-ignore\n    React.cloneElement(icon, {\n      size,\n      //@ts-ignore\n      color: icon.props.color ? icon.props.color : iconColor,\n    });\n\n  const { inputProps } = useRadio(props, contextState, null);\n  const { checked, disabled: isDisabled } = inputProps;\n\n  return (\n    <TouchableOpacity activeOpacity={1} ref={ref} {...inputProps}>\n      <Box\n        flexDirection=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        {...newProps}\n      >\n        <Box\n          backgroundColor={\n            checked ? (isDisabled ? borderColor : activeColor) : 'transparent'\n          }\n          borderColor={\n            checked\n              ? isDisabled || isInvalid\n                ? borderColor\n                : activeColor\n              : borderColor\n          }\n          borderWidth={2}\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          borderRadius={999}\n        >\n          {icon && checked ? (\n            sizedIcon()\n          ) : (\n            <Icon\n              name=\"circle-medium\"\n              type=\"MaterialCommunityIcons\"\n              size={size}\n              color={iconColor}\n              opacity={checked ? 1 : 0}\n            />\n          )}\n        </Box>\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.forwardRef<TouchableOpacity, IRadioProps>(Radio);\n"]},"metadata":{},"sourceType":"script"}