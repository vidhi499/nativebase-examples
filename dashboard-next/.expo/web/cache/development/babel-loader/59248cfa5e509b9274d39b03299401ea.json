{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _tools = require(\"../tools\");\n\nvar baseStyle = {\n  px: 1,\n  py: '2px',\n  textTransform: 'uppercase',\n  fontSize: 'xs',\n  borderRadius: 'sm',\n  fontWeight: 'bold'\n};\n\nfunction variantSolid(props) {\n  var colorScheme = (0, _tools.getColorScheme)(props);\n  return {\n    bg: (0, _tools.mode)(\"\".concat(colorScheme, \".700\"), \"\".concat(colorScheme, \".100\"))(props),\n    color: (0, _tools.mode)(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props),\n    borderWidth: 1,\n    borderColor: 'transparent'\n  };\n}\n\nfunction variantSubtle(props) {\n  var colorScheme = (0, _tools.getColorScheme)(props);\n  return {\n    bg: (0, _tools.mode)(\"\".concat(colorScheme, \".100\"), \"\".concat(colorScheme, \".700\"))(props),\n    color: (0, _tools.mode)(\"\".concat(colorScheme, \".700\"), \"\".concat(colorScheme, \".100\"))(props),\n    borderWidth: 1,\n    borderColor: 'transparent'\n  };\n}\n\nfunction variantOutline(props) {\n  var colorScheme = (0, _tools.getColorScheme)(props);\n  return {\n    borderColor: (0, _tools.mode)(\"\".concat(colorScheme, \".700\"), \"\".concat(colorScheme, \".100\"))(props),\n    color: (0, _tools.mode)(\"\".concat(colorScheme, \".700\"), \"\".concat(colorScheme, \".100\"))(props),\n    borderWidth: 1\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'gray'\n};\nvar _default = {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["badge.ts"],"names":["baseStyle","px","py","textTransform","fontSize","borderRadius","fontWeight","colorScheme","bg","color","borderWidth","borderColor","variants","solid","subtle","outline","variantOutline","defaultProps","variant"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,YAAA;;AAEA,IAAMA,SAAS,GAAG;AAChBC,EAAAA,EAAE,EADc,CAAA;AAEhBC,EAAAA,EAAE,EAFc,KAAA;AAGhBC,EAAAA,aAAa,EAHG,WAAA;AAIhBC,EAAAA,QAAQ,EAJQ,IAAA;AAKhBC,EAAAA,YAAY,EALI,IAAA;AAMhBC,EAAAA,UAAU,EAAE;AANI,CAAlB;;AASA,SAAA,YAAA,CAAA,KAAA,EAAkD;AAChD,MAAIC,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB;AACA,SAAO;AACLC,IAAAA,EAAE,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EADC,KACD,CADC;AAELC,IAAAA,KAAK,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAFF,KAEE,CAFF;AAGLC,IAAAA,WAAW,EAHN,CAAA;AAILC,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;;AAED,SAAA,aAAA,CAAA,KAAA,EAAmD;AACjD,MAAIJ,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB;AACA,SAAO;AACLC,IAAAA,EAAE,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EADC,KACD,CADC;AAELC,IAAAA,KAAK,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAFF,KAEE,CAFF;AAGLC,IAAAA,WAAW,EAHN,CAAA;AAILC,IAAAA,WAAW,EAAE;AAJR,GAAP;AAMD;;AAED,SAAA,cAAA,CAAA,KAAA,EAAoD;AAClD,MAAIJ,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,cAAA,EAAlB,KAAkB,CAAlB;AACA,SAAO;AACLI,IAAAA,WAAW,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EADR,KACQ,CADR;AAELF,IAAAA,KAAK,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA,CAAA,EAFF,KAEE,CAFF;AAGLC,IAAAA,WAAW,EAAE;AAHR,GAAP;AAKD;;AAED,IAAME,QAAQ,GAAG;AACfC,EAAAA,KAAK,EADU,YAAA;AAEfC,EAAAA,MAAM,EAFS,aAAA;AAGfC,EAAAA,OAAO,EAAEC;AAHM,CAAjB;AAMA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EADY,QAAA;AAEnBX,EAAAA,WAAW,EAAE;AAFM,CAArB;eAKe;AACbP,EAAAA,SADa,EACbA,SADa;AAEbY,EAAAA,QAFa,EAEbA,QAFa;AAGbK,EAAAA,YAAAA,EAAAA;AAHa,C","sourcesContent":["import { mode, getColorScheme } from '../tools';\n\nconst baseStyle = {\n  px: 1,\n  py: '2px',\n  textTransform: 'uppercase',\n  fontSize: 'xs',\n  borderRadius: 'sm',\n  fontWeight: 'bold',\n};\n\nfunction variantSolid(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.700`, `${colorScheme}.100`)(props),\n    color: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    borderWidth: 1,\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantSubtle(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    bg: mode(`${colorScheme}.100`, `${colorScheme}.700`)(props),\n    color: mode(`${colorScheme}.700`, `${colorScheme}.100`)(props),\n    borderWidth: 1,\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: Record<string, any>) {\n  let colorScheme = getColorScheme(props);\n  return {\n    borderColor: mode(`${colorScheme}.700`, `${colorScheme}.100`)(props),\n    color: mode(`${colorScheme}.700`, `${colorScheme}.100`)(props),\n    borderWidth: 1,\n  };\n}\n\nconst variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'gray',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"script"}