{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.customLayout = void 0;\n\nvar _styledSystem = require(\"styled-system\");\n\nvar config = {\n  w: {\n    property: 'width',\n    scale: 'sizes'\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes'\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes'\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes'\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes'\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes'\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes'\n  },\n  d: {\n    property: 'display'\n  },\n  boxSizing: true\n};\nvar customLayout = (0, _styledSystem.system)(config);\nexports.customLayout = customLayout;","map":{"version":3,"sources":["customLayout.ts"],"names":["config","w","property","scale","h","boxSize","properties","minW","minH","maxW","maxH","d","boxSizing","customLayout"],"mappings":";;;;;;;AAEA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAMA,MAAc,GAAG;AACrBC,EAAAA,CAAC,EAAE;AACDC,IAAAA,QAAQ,EADP,OAAA;AAEDC,IAAAA,KAAK,EAAE;AAFN,GADkB;AAKrBC,EAAAA,CAAC,EAAE;AACDF,IAAAA,QAAQ,EADP,QAAA;AAEDC,IAAAA,KAAK,EAAE;AAFN,GALkB;AASrBE,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,CAAA,OAAA,EADL,QACK,CADL;AAEPH,IAAAA,KAAK,EAAE;AAFA,GATY;AAarBI,EAAAA,IAAI,EAAE;AACJL,IAAAA,QAAQ,EADJ,UAAA;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAbe;AAiBrBK,EAAAA,IAAI,EAAE;AACJN,IAAAA,QAAQ,EADJ,WAAA;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAjBe;AAqBrBM,EAAAA,IAAI,EAAE;AACJP,IAAAA,QAAQ,EADJ,UAAA;AAEJC,IAAAA,KAAK,EAAE;AAFH,GArBe;AAyBrBO,EAAAA,IAAI,EAAE;AACJR,IAAAA,QAAQ,EADJ,WAAA;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAzBe;AA6BrBQ,EAAAA,CAAC,EAAE;AACDT,IAAAA,QAAQ,EAAE;AADT,GA7BkB;AAgCrBU,EAAAA,SAAS,EAAE;AAhCU,CAAvB;AA6EO,IAAMC,YAAY,GAAG,CAAA,GAAA,aAAA,CAAA,MAAA,EAArB,MAAqB,CAArB","sourcesContent":["import type * as CSS from 'csstype';\nimport type { ResponsiveValue } from './responsiveValue';\nimport { Config, system } from 'styled-system';\n\nconst config: Config = {\n  w: {\n    property: 'width',\n    scale: 'sizes',\n  },\n  h: {\n    property: 'height',\n    scale: 'sizes',\n  },\n  boxSize: {\n    properties: ['width', 'height'],\n    scale: 'sizes',\n  },\n  minW: {\n    property: 'minWidth',\n    scale: 'sizes',\n  },\n  minH: {\n    property: 'minHeight',\n    scale: 'sizes',\n  },\n  maxW: {\n    property: 'maxWidth',\n    scale: 'sizes',\n  },\n  maxH: {\n    property: 'maxHeight',\n    scale: 'sizes',\n  },\n  d: {\n    property: 'display',\n  },\n  boxSizing: true,\n};\n\n/**\n * Types for layout related CSS properties\n */\nexport interface customLayoutProps {\n  /**\n   * The CSS `display` property\n   */\n  d?: ResponsiveValue<CSS.Property.Display>;\n  /**\n   * The CSS `width` property\n   */\n  w?: ResponsiveValue<CSS.Property.Width>;\n  /**\n   * The CSS `width` and `height` property\n   */\n  boxSize?: ResponsiveValue<CSS.Property.Width | number>;\n  /**\n   * The CSS `max-width` property\n   */\n  maxW?: ResponsiveValue<CSS.Property.MaxWidth>;\n  /**\n   * The CSS `min-width` property\n   */\n  minW?: ResponsiveValue<CSS.Property.MinWidth>;\n  /**\n   * The CSS `height` property\n   */\n  h?: ResponsiveValue<CSS.Property.Height>;\n  /**\n   * The CSS `max-height` property\n   */\n  maxH?: ResponsiveValue<CSS.Property.MaxHeight>;\n  /**\n   * The CSS `min-height` property\n   */\n  minH?: ResponsiveValue<CSS.Property.MinHeight>;\n  /**\n   * The CSS `box-sizing` property\n   */\n  boxSizing?: ResponsiveValue<CSS.Property.BoxSizing>;\n}\n\nexport const customLayout = system(config);\n"]},"metadata":{},"sourceType":"script"}