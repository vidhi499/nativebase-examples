{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSnackbar = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Overlay = require(\"../../../core/Overlay\");\n\nvar _Snackbar = _interopRequireDefault(require(\"./Snackbar\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar useSnackbar = function useSnackbar() {\n  var _ref = (0, _Overlay.useOverlay)(),\n      closeOverlay = _ref.closeOverlay,\n      setOverlay = _ref.setOverlay;\n\n  var defaultConfig = {\n    enableOverlay: false,\n    duration: 5000,\n    accessibilityAnnouncement: ''\n  };\n\n  var setSnackbar = function setSnackbar(component, config) {\n    config = _objectSpread({}, defaultConfig, {}, config);\n\n    var _config = config,\n        _config$duration = _config.duration,\n        duration = _config$duration === void 0 ? 5000 : _config$duration,\n        enableOverlay = _config.enableOverlay,\n        rest = _objectWithoutProperties(_config, [\"duration\", \"enableOverlay\"]);\n\n    setOverlay(_react[\"default\"].createElement(_Snackbar[\"default\"], _extends({\n      duration: duration\n    }, rest), component), {\n      disableOverlay: !enableOverlay\n    });\n    setTimeout(function () {\n      closeOverlay();\n    }, duration + 500);\n  };\n\n  return {\n    setSnackbar: setSnackbar\n  };\n};\n\nexports.useSnackbar = useSnackbar;","map":{"version":3,"sources":["hooks.tsx"],"names":["useSnackbar","setOverlay","defaultConfig","enableOverlay","duration","accessibilityAnnouncement","setSnackbar","config","rest","disableOverlay","setTimeout","closeOverlay"],"mappings":";;;;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,yBAAA;;AACA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,cAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,WAA8B,GAAG,SAAjCA,WAAiC,GAAM;AAAA,aACb,CAAA,GAAA,QAAA,CAArC,UAAqC,GADa;AAAA,MAC5C,YAD4C,QAC5C,YAD4C;AAAA,MAC5BC,UAD4B,QAC5BA,UAD4B;;AAElD,MAAMC,aAAa,GAAG;AACpBC,IAAAA,aAAa,EADO,KAAA;AAEpBC,IAAAA,QAAQ,EAFY,IAAA;AAGpBC,IAAAA,yBAAyB,EAAE;AAHP,GAAtB;;AAMA,MAAMC,WAAyB,GAAG,SAA5BA,WAA4B,CAAA,SAAA,EAAA,MAAA,EAAuB;AACvDC,IAAAA,MAAM,qBAAG,aAAH,MAEDA,MAFC,CAANA;;AADuD,kBAKvD,MALuD;AAAA,mCAK/CH,QAL+C;AAAA,QAK/CA,QAL+C,iCAKjD,IALiD;AAAA,QAKjD,aALiD,WAKjD,aALiD;AAAA,QAKZI,IALY;;AAMvDP,IAAAA,UAAU,CACR,MAAA,WAAA,CAAA,aAAA,CAAC,SAAD,WAAA,EAAA,QAAA,CAAA;AAAU,MAAA,QAAQ,EAAEG;AAApB,KAAA,EAAA,IAAA,CAAA,EADQ,SACR,CADQ,EAIR;AACEK,MAAAA,cAAc,EAAE,CAACN;AADnB,KAJQ,CAAVF;AAQAS,IAAAA,UAAU,CAAC,YAAM;AACfC,MAAAA,YAAY;AADJ,KAAA,EAEPP,QAAQ,GAFXM,GAAU,CAAVA;AAdF,GAAA;;AAkBA,SAAO;AAAEJ,IAAAA,WAAAA,EAAAA;AAAF,GAAP;AA1BK,CAAA","sourcesContent":["import React from 'react';\nimport { useOverlay } from '../../../core/Overlay';\nimport Snackbar from './Snackbar';\nimport type { IsetSnackbar, IuseSnackbarProps } from './props';\n\nexport const useSnackbar: IuseSnackbarProps = () => {\n  const { closeOverlay, setOverlay } = useOverlay();\n  const defaultConfig = {\n    enableOverlay: false,\n    duration: 5000,\n    accessibilityAnnouncement: '',\n  };\n\n  const setSnackbar: IsetSnackbar = (component, config) => {\n    config = {\n      ...defaultConfig,\n      ...config,\n    };\n    const { duration = 5000, enableOverlay, ...rest } = config;\n    setOverlay(\n      <Snackbar duration={duration} {...rest}>\n        {component}\n      </Snackbar>,\n      {\n        disableOverlay: !enableOverlay,\n      }\n    );\n    setTimeout(() => {\n      closeOverlay();\n    }, duration + 500);\n  };\n  return { setSnackbar };\n};\n"]},"metadata":{},"sourceType":"script"}