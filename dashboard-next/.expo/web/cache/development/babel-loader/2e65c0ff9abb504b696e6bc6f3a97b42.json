{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _remove = _interopRequireDefault(require(\"lodash/remove\"));\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _getIndexedChildren = _interopRequireDefault(require(\"../../../utils/getIndexedChildren\"));\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar Accordion = function Accordion(_ref) {\n  var children = _ref.children,\n      allowMultiple = _ref.allowMultiple,\n      allowToggle = _ref.allowToggle,\n      onChange = _ref.onChange,\n      style = _ref.style,\n      props = _objectWithoutProperties(_ref, [\"children\", \"allowMultiple\", \"allowToggle\", \"onChange\", \"style\"]);\n\n  var _react$default$useSta = _react[\"default\"].useState(props.index || props.defaultIndex || []),\n      _react$default$useSta2 = _slicedToArray(_react$default$useSta, 2),\n      index = _react$default$useSta2[0],\n      setIndex = _react$default$useSta2[1];\n\n  var changeHandler = function changeHandler(isOpening, activeIndex) {\n    var indexCopy = index.map(function (i) {\n      return i;\n    });\n\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        (0, _remove[\"default\"])(indexCopy, function (n) {\n          return n === activeIndex;\n        });\n        setIndex(indexCopy);\n      }\n    }\n\n    onChange && onChange(indexCopy);\n  };\n\n  return _react[\"default\"].createElement(_Context.AccordionContext.Provider, {\n    value: {\n      index: index,\n      changeHandler: changeHandler\n    }\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    style: style\n  }, props), (0, _getIndexedChildren[\"default\"])(children, 'AccordionItem')));\n};\n\nvar _default = Accordion;\nexports[\"default\"] = _default;","map":{"version":3,"sources":["Accordion.tsx"],"names":["Accordion","props","React","changeHandler","indexCopy","index","i","allowMultiple","setIndex","n","onChange","style"],"mappings":";;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AACA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AAEA,IAAA,mBAAA,GAAA,sBAAA,CAAA,OAAA,qCAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAOK;AAAA,MAPJ,QAOI,QAPJ,QAOI;AAAA,MAPJ,aAOI,QAPJ,aAOI;AAAA,MAPJ,WAOI,QAPJ,WAOI;AAAA,MAPJ,QAOI,QAPJ,QAOI;AAAA,MAPJ,KAOI,QAPJ,KAOI;AAAA,MADlBC,KACkB;;AAAA,8BACKC,MAAAA,WAAAA,CAAAA,QAAAA,CACxBD,KAAK,CAALA,KAAAA,IAAeA,KAAK,CAApBA,YAAAA,IADF,EAA0BC,CADL;AAAA;AAAA,MACf,KADe;AAAA,MACf,QADe;;AAIrB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,SAAA,EAAA,WAAA,EAA6C;AACjE,QAAIC,SAAS,GAAGC,KAAK,CAALA,GAAAA,CAAWC,UAAAA,CAAD;AAAA,aAA1B,CAA0B;AAAA,KAAVD,CAAhB;;AACA,QAAA,WAAA,EAAiB;AACf,UAAA,SAAA,EAAe;AACbD,QAAAA,SAAS,CAATA,IAAAA,CAAAA,WAAAA;AACAG,QAAAA,aAAa,GAAGC,QAAQ,CAAX,SAAW,CAAX,GAAyBA,QAAQ,CAAC,CAA/CD,WAA+C,CAAD,CAA9CA;AAFF,OAAA,MAGO;AACLC,QAAAA,QAAQ,CAACH,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAALA,OAAAA,CAAbA,WAAaA,CAAbA,EAATG,CAASH,CAAD,CAARG;AACD;AANH,KAAA,MAOO;AACL,UAAA,SAAA,EAAe;AACbJ,QAAAA,SAAS,CAATA,IAAAA,CAAAA,WAAAA;AACAG,QAAAA,aAAa,GAAGC,QAAQ,CAAX,SAAW,CAAX,GAAyBA,QAAQ,CAAC,CAA/CD,WAA+C,CAAD,CAA9CA;AAFF,OAAA,MAGO;AACL,SAAA,GAAA,OAAA,WAAA,EAAA,SAAA,EAAmBE,UAAAA,CAAD;AAAA,iBAAOA,CAAC,KAA1B,WAAkB;AAAA,SAAlB;AACAD,QAAAA,QAAQ,CAARA,SAAQ,CAARA;AACD;AACF;;AACDE,IAAAA,QAAQ,IAAIA,QAAQ,CAApBA,SAAoB,CAApBA;AAlBF,GAAA;;AAqBA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,QAAA,CAAD,gBAAC,CAAD,QAAA,EAAA;AAA2B,IAAA,KAAK,EAAE;AAAEL,MAAAA,KAAK,EAAP,KAAA;AAAgBF,MAAAA,aAAAA,EAAAA;AAAhB;AAAlC,GAAA,EACE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AAAK,IAAA,KAAK,EAAEQ;AAAZ,GAAA,EAAA,KAAA,CAAA,EACG,CAAA,GAAA,mBAAA,WAAA,EAAA,QAAA,EAHP,eAGO,CADH,CADF,CADF;AAhCF,CAAA;;eAyCeX,S","sourcesContent":["import React from 'react';\nimport remove from 'lodash/remove';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './props';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\n\nimport { AccordionContext } from './Context';\n\nconst Accordion = ({\n  children,\n  allowMultiple,\n  allowToggle,\n  onChange,\n  style,\n  ...props\n}: IAccordionProps) => {\n  const [index, setIndex] = React.useState(\n    props.index || props.defaultIndex || []\n  );\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        remove(indexCopy, (n) => n === activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n\n  return (\n    <AccordionContext.Provider value={{ index: index, changeHandler }}>\n      <Box style={style} {...props}>\n        {getIndexedChildren(children, 'AccordionItem')}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default Accordion;\n"]},"metadata":{},"sourceType":"script"}