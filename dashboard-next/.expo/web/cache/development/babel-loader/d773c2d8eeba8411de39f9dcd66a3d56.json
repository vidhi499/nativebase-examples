{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _Box = _interopRequireDefault(require(\"../../primitives/Box\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _Context = require(\"./Context\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar AccordionButton = function AccordionButton(_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      _expanded = _ref._expanded,\n      _disabled = _ref._disabled,\n      props = _objectWithoutProperties(_ref, [\"children\", \"style\", \"_expanded\", \"_disabled\"]);\n\n  var _react$default$useCon = _react[\"default\"].useContext(_Context.AccordionItemContext),\n      isOpen = _react$default$useCon.isOpen,\n      isDisabled = _react$default$useCon.isDisabled,\n      onOpen = _react$default$useCon.onOpen,\n      onClose = _react$default$useCon.onClose;\n\n  var pressHandler = function pressHandler() {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n\n  var borderColor = (0, _hooks.useToken)('colors', 'muted.200');\n  return _react[\"default\"].createElement(_reactNative.TouchableOpacity, {\n    activeOpacity: 1,\n    disabled: isDisabled,\n    onPress: function onPress() {\n      return pressHandler();\n    },\n    accessible: true,\n    accessibilityRole: \"checkbox\",\n    ref: ref\n  }, _react[\"default\"].createElement(_Box[\"default\"], _extends({\n    p: 3,\n    borderColor: borderColor,\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  }, props, {\n    style: [style, isOpen && _expanded, isDisabled && _disabled]\n  }), children));\n};\n\nvar _default = _react[\"default\"].forwardRef(AccordionButton);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["AccordionButton.tsx"],"names":["AccordionButton","props","onClose","React","AccordionItemContext","pressHandler","isOpen","onOpen","borderColor","ref","isDisabled"],"mappings":";;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;;;AAEA,IAAA,IAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,kBAAA;;AAKA,IAAA,QAAA,GAAA,OAAA,aAAA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAAA,GAAA,EAGnB;AAAA,MAFH,QAEG,QAFH,QAEG;AAAA,MAFH,KAEG,QAFH,KAEG;AAAA,MAFH,SAEG,QAFH,SAEG;AAAA,MAFH,SAEG,QAFH,SAEG;AAAA,MAFyCC,KAEzC;;AAAA,8BAM6BE,MAAAA,WAAAA,CAAAA,UAAAA,CAAiBC,QAAAA,CALjD,oBAKgCD,CAN7B;AAAA,MACG,MADH,yBACG,MADH;AAAA,MACG,UADH,yBACG,UADH;AAAA,MACG,MADH,yBACG,MADH;AAAA,MAKDD,OALC,yBAKDA,OALC;;AAQH,MAAMG,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,MAAM,GAAGJ,OAAO,IAAIA,OAAd,EAAA,GAA0BK,MAAM,IAAIA,MAA1CD,EAAAA;AADF,GAAA;;AAGA,MAAME,WAAW,GAAG,CAAA,GAAA,MAAA,CAAA,QAAA,EAAA,QAAA,EAApB,WAAoB,CAApB;AACA,SACE,MAAA,WAAA,CAAA,aAAA,CAAC,YAAA,CAAD,gBAAA,EAAA;AACE,IAAA,aAAa,EADf,CAAA;AAEE,IAAA,QAAQ,EAFV,UAAA;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMH,YAHjB,EAGW;AAAA,KAHX;AAIE,IAAA,UAAU,EAJZ,IAAA;AAKE,IAAA,iBAAiB,EALnB,UAAA;AAME,IAAA,GAAG,EAAEI;AANP,GAAA,EAQE,MAAA,WAAA,CAAA,aAAA,CAAC,IAAD,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,CAAC,EADH,CAAA;AAEE,IAAA,WAAW,EAFb,WAAA;AAGE,IAAA,OAAO,EAHT,MAAA;AAIE,IAAA,aAAa,EAJf,KAAA;AAKE,IAAA,cAAc,EALhB,eAAA;AAME,IAAA,UAAU,EAAC;AANb,GAAA,EAAA,KAAA,EAAA;AAQE,IAAA,KAAK,EAAE,CAAA,KAAA,EAAQH,MAAM,IAAd,SAAA,EAA6BI,UAAU,IAAvC,SAAA;AART,GAAA,CAAA,EATJ,QASI,CARF,CADF;AAfF,CAAA;;eAwCeP,MAAAA,WAAAA,CAAAA,UAAAA,CAAAA,eAAAA,C","sourcesContent":["import React from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { useToken } from '../../../hooks';\nimport type {\n  IAccordionButtonProps,\n  IAccordionItemContextProps,\n} from './props';\nimport { AccordionItemContext } from './Context';\n\nconst AccordionButton = (\n  { children, style, _expanded, _disabled, ...props }: IAccordionButtonProps,\n  ref: any\n) => {\n  const {\n    isOpen,\n    isDisabled,\n    onOpen,\n    onClose,\n  }: IAccordionItemContextProps = React.useContext(AccordionItemContext);\n\n  const pressHandler = () => {\n    isOpen ? onClose && onClose() : onOpen && onOpen();\n  };\n  const borderColor = useToken('colors', 'muted.200');\n  return (\n    <TouchableOpacity\n      activeOpacity={1}\n      disabled={isDisabled}\n      onPress={() => pressHandler()}\n      accessible\n      accessibilityRole=\"checkbox\"\n      ref={ref}\n    >\n      <Box\n        p={3}\n        borderColor={borderColor}\n        display=\"flex\"\n        flexDirection=\"row\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        {...props}\n        style={[style, isOpen && _expanded, isDisabled && _disabled]}\n      >\n        {children}\n      </Box>\n    </TouchableOpacity>\n  );\n};\n\nexport default React.forwardRef<TouchableOpacity, IAccordionButtonProps>(\n  AccordionButton\n);\n"]},"metadata":{},"sourceType":"script"}