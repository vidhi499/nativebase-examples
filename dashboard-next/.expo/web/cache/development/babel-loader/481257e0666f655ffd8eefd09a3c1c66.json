{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useLink = useLink;\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar linkToHREF = function linkToHREF(URL) {\n  _reactNative.Linking.openURL(URL)[\"catch\"](function (err) {\n    return console.error('An error occurred', err);\n  });\n};\n\nvar addOnPressFunctionality = function addOnPressFunctionality(href, isExternal, callback) {\n  href && isExternal ? linkToHREF(href) : '';\n  callback ? callback() : function () {};\n};\n\nfunction useLink(props) {\n  var href = props.href,\n      isExternal = props.isExternal,\n      onClick = props.onClick;\n  return {\n    linkProps: {\n      onPress: function onPress() {\n        addOnPressFunctionality(href, isExternal, onClick);\n      },\n      accessibilityRole: 'link',\n      accessible: true\n    }\n  };\n}","map":{"version":3,"sources":["useLink.ts"],"names":["linkToHREF","URL","Linking","err","console","addOnPressFunctionality","href","callback","onClick","linkProps","onPress","accessibilityRole","accessible"],"mappings":";;;;;;;;;AAIA,IAAMA,UAAU,GAAIC,SAAdD,UAAcC,CAAAA,GAAD,EAAiB;AAClCC,EAAAA,YAAAA,CAAAA,OAAAA,CAAAA,OAAAA,CAAAA,GAAAA,WAA4BC,UAAAA,GAAD;AAAA,WAASC,OAAO,CAAPA,KAAAA,CAAAA,mBAAAA,EAApCF,GAAoCE,CAAT;AAAA,GAA3BF;AADF,CAAA;;AAIA,IAAMG,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAA,IAAA,EAAA,UAAA,EAAA,QAAA,EAI3B;AACHC,EAAAA,IAAI,IAAJA,UAAAA,GAAqBN,UAAU,CAA/BM,IAA+B,CAA/BA,GAAAA,EAAAA;AACAC,EAAAA,QAAQ,GAAGA,QAAH,EAAA,GAAgB,YAAM,CAA9BA,CAAAA;AANF,CAAA;;AASO,SAAA,OAAA,CAAA,KAAA,EAAsC;AAAA,MACrC,IADqC,GAC3C,KAD2C,CACrC,IADqC;AAAA,MACrC,UADqC,GAC3C,KAD2C,CACrC,UADqC;AAAA,MACjBC,OADiB,GAC3C,KAD2C,CACjBA,OADiB;AAE3C,SAAO;AACLC,IAAAA,SAAS,EAAE;AACTC,MAAAA,OAAO,EAAE,mBAAM;AACbL,QAAAA,uBAAuB,CAAA,IAAA,EAAA,UAAA,EAAvBA,OAAuB,CAAvBA;AAFO,OAAA;AAITM,MAAAA,iBAAiB,EAJR,MAAA;AAKTC,MAAAA,UAAU,EAAE;AALH;AADN,GAAP;AASD","sourcesContent":["import { Linking } from 'react-native';\nimport type { IUseLinkProp } from './props';\nimport type { AccessibilityRole } from 'react-native';\n\nconst linkToHREF = (URL: string) => {\n  Linking.openURL(URL).catch((err) => console.error('An error occurred', err));\n};\n\nconst addOnPressFunctionality = (\n  href: string | any,\n  isExternal: any,\n  callback: any\n) => {\n  href && isExternal ? linkToHREF(href) : '';\n  callback ? callback() : () => {};\n};\n\nexport function useLink(props: IUseLinkProp) {\n  const { href, isExternal, onClick } = props;\n  return {\n    linkProps: {\n      onPress: () => {\n        addOnPressFunctionality(href, isExternal, onClick);\n      },\n      accessibilityRole: 'link' as AccessibilityRole,\n      accessible: true,\n    },\n  };\n}\n"]},"metadata":{},"sourceType":"script"}