{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _sizes = _interopRequireDefault(require(\"./../base/sizes\"));\n\nvar _typography = _interopRequireDefault(require(\"./../base/typography\"));\n\nvar _tools = require(\"./../tools\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction getSizes() {\n  var spaceValues = {};\n\n  for (var key in _sizes[\"default\"]) {\n    if (key !== 'container') {\n      spaceValues[key] = {\n        dimension: _sizes[\"default\"][key]\n      };\n    }\n  }\n\n  var fontValues = {};\n\n  for (var _key in _typography[\"default\"].fontSizes) {\n    fontValues[_key] = {\n      dimension: _typography[\"default\"].fontSizes[_key]\n    };\n  }\n\n  return _objectSpread({}, fontValues, {}, spaceValues);\n}\n\nvar sizes = getSizes();\n\nvar baseStyle = function baseStyle(props) {\n  return {\n    color: (0, _tools.mode)(undefined, 'white')(props),\n    size: 20\n  };\n};\n\nvar _default = {\n  sizes: sizes,\n  baseStyle: baseStyle\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["icon.ts"],"names":["spaceValues","baseSizes","key","dimension","fontValues","typography","sizes","getSizes","baseStyle","props","color","size"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,MAAA,GAAA,sBAAA,CAAA,OAAA,mBAAA,CAAA;;AACA,IAAA,WAAA,GAAA,sBAAA,CAAA,OAAA,wBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,cAAA;;;;;;;;AAEA,SAAA,QAAA,GAAoB;AAClB,MAAIA,WAAgB,GAApB,EAAA;;AACA,OAAK,IAAL,GAAA,IAAgBC,MAAhB,WAAA,EAA2B;AACzB,QAAIC,GAAG,KAAP,WAAA,EAAyB;AACvBF,MAAAA,WAAW,CAAXA,GAAW,CAAXA,GAAmB;AAEjBG,QAAAA,SAAS,EAAEF,MAAAA,WAAAA,CAAAA,GAAAA;AAFM,OAAnBD;AAID;AACF;;AACD,MAAII,UAAe,GAAnB,EAAA;;AACA,OAAK,IAAL,IAAA,IAAgBC,WAAAA,WAAAA,CAAhB,SAAA,EAAsC;AACpCD,IAAAA,UAAU,CAAVA,IAAU,CAAVA,GAAkB;AAEhBD,MAAAA,SAAS,EAAEE,WAAAA,WAAAA,CAAAA,SAAAA,CAAAA,IAAAA;AAFK,KAAlBD;AAID;;AACD,2BAAO,UAAP,MAA2BJ,WAA3B;AACD;;AAED,IAAMM,KAAK,GAAGC,QAAd,EAAA;;AACA,IAAMC,SAAS,GAAIC,SAAbD,SAAaC,CAAAA,KAAD,EAAgC;AAChD,SAAO;AACLC,IAAAA,KAAK,EAAE,CAAA,GAAA,MAAA,CAAA,IAAA,EAAA,SAAA,EAAA,OAAA,EADF,KACE,CADF;AAELC,IAAAA,IAAI,EAAE;AAFD,GAAP;AADF,CAAA;;eAMe;AAAEL,EAAAA,KAAF,EAAEA,KAAF;AAASE,EAAAA,SAAAA,EAAAA;AAAT,C","sourcesContent":["import baseSizes from './../base/sizes';\nimport typography from './../base/typography';\nimport { mode } from './../tools';\n\nfunction getSizes() {\n  let spaceValues: any = {};\n  for (let key in baseSizes) {\n    if (key !== 'container') {\n      spaceValues[key] = {\n        // @ts-ignore\n        dimension: baseSizes[key],\n      };\n    }\n  }\n  let fontValues: any = {};\n  for (let key in typography.fontSizes) {\n    fontValues[key] = {\n      // @ts-ignore\n      dimension: typography.fontSizes[key],\n    };\n  }\n  return { ...fontValues, ...spaceValues };\n}\n\nconst sizes = getSizes();\nconst baseStyle = (props: Record<string, any>) => {\n  return {\n    color: mode(undefined, 'white')(props),\n    size: 20,\n  };\n};\nexport default { sizes, baseStyle };\n"]},"metadata":{},"sourceType":"script"}