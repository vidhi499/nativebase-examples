{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"@babel/runtime/helpers/objectWithoutProperties\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ButtonGroup\", {\n  enumerable: true,\n  get: function get() {\n    return _ButtonGroup.ButtonGroup;\n  }\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _native = _interopRequireDefault(require(\"styled-components/native\"));\n\nvar _styledSystem = require(\"styled-system\");\n\nvar _customProps = require(\"../../../utils/customProps\");\n\nvar _Text = _interopRequireDefault(require(\"../../primitives/Text\"));\n\nvar _hooks = require(\"../../../hooks\");\n\nvar _theme = require(\"../../../theme\");\n\nvar _Spinner = _interopRequireDefault(require(\"../Spinner\"));\n\nvar _Box = _interopRequireDefault(require(\"../Box\"));\n\nvar _Flex = _interopRequireDefault(require(\"../Flex\"));\n\nvar _useButton = require(\"./useButton\");\n\nvar _ButtonGroup = require(\"./ButtonGroup\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar StyledButton = (0, _native[\"default\"])(_reactNative.TouchableOpacity)(_styledSystem.color, _styledSystem.space, _styledSystem.layout, _styledSystem.flexbox, _styledSystem.border, _styledSystem.position, _customProps.customPosition, _customProps.customBorder, _customProps.customBackground, _customProps.customOutline, _customProps.customShadow, _customProps.customExtra, _customProps.customLayout);\n\nvar Button = function Button(_ref, ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      highlight = _ref.highlight,\n      isLoading = _ref.isLoading,\n      isLoadingText = _ref.isLoadingText,\n      size = _ref.size,\n      leftIcon = _ref.leftIcon,\n      rightIcon = _ref.rightIcon,\n      spinner = _ref.spinner,\n      props = _objectWithoutProperties(_ref, [\"style\", \"children\", \"highlight\", \"isLoading\", \"isLoadingText\", \"size\", \"leftIcon\", \"rightIcon\", \"spinner\"]);\n\n  var newProps = (0, _hooks.usePropsConfig)('Button', _objectSpread({}, props, {\n    size: size\n  }));\n\n  var _theme$themeTools$ext = _theme.themeTools.extractInObject(newProps, ['fontWeight', 'fontSize', 'textDecorationLine', 'color']),\n      _theme$themeTools$ext2 = _slicedToArray(_theme$themeTools$ext, 2),\n      textProps = _theme$themeTools$ext2[0],\n      remainingProps = _theme$themeTools$ext2[1];\n\n  var _theme$themeTools$ext3 = _theme.themeTools.extractInObject(remainingProps, ['m', 'margin', 'mt', 'marginTop', 'mr', 'marginRight', 'mb', 'marginBottom', 'ml', 'marginLeft', 'mx', 'marginX', 'my', 'marginY', 'left', 'top', 'bottom', 'right', 'position']),\n      _theme$themeTools$ext4 = _slicedToArray(_theme$themeTools$ext3, 2),\n      layoutProps = _theme$themeTools$ext4[0],\n      viewProps = _theme$themeTools$ext4[1];\n\n  var _theme$themeTools$ext5 = _theme.themeTools.extractInObject(viewProps, ['accessible', 'accessibilityRole', 'accessibilityState', 'accessibilityLabel', 'accessibilityHint', 'isDisabled', 'onPress']),\n      _theme$themeTools$ext6 = _slicedToArray(_theme$themeTools$ext5, 2),\n      additionalButtonProps = _theme$themeTools$ext6[0],\n      innerButtonProps = _theme$themeTools$ext6[1];\n\n  additionalButtonProps.isDisabled = additionalButtonProps.isDisabled || isLoading;\n\n  var innerButton = _react[\"default\"].createElement(_Box[\"default\"], _extends({}, innerButtonProps, {\n    opacity: isLoading ? 0.5 : 1,\n    style: style\n  }), leftIcon ? _react[\"default\"].createElement(_Box[\"default\"], {\n    mr: innerButtonProps.px / 2 || 2\n  }, leftIcon) : null, isLoading ? _react[\"default\"].createElement(_Flex[\"default\"], {\n    direction: \"row\"\n  }, spinner ? spinner : _react[\"default\"].createElement(_Spinner[\"default\"], {\n    color: textProps.color,\n    size: \"sm\"\n  }), _react[\"default\"].createElement(_Text[\"default\"], textProps, isLoadingText ? ' ' + isLoadingText : '')) : _react[\"default\"].createElement(_Text[\"default\"], _extends({}, textProps, {\n    style: {\n      textDecorationLine: textProps.textDecorationLine\n    }\n  }), children), rightIcon ? _react[\"default\"].createElement(_Box[\"default\"], {\n    ml: innerButtonProps.px / 2 || 2\n  }, rightIcon) : null);\n\n  var _ref2 = (0, _useButton.useButton)(additionalButtonProps, ref),\n      buttonProps = _ref2.buttonProps;\n\n  return _react[\"default\"].createElement(StyledButton, _extends({\n    activeOpacity: highlight ? highlight : 0.8,\n    ref: ref\n  }, layoutProps, buttonProps), innerButton);\n};\n\nvar _default = (0, _react.forwardRef)(Button);\n\nexports[\"default\"] = _default;","map":{"version":3,"sources":["index.tsx"],"names":["StyledButton","TouchableOpacity","color","space","layout","flexbox","border","position","customPosition","customBorder","customBackground","customOutline","customShadow","customExtra","customLayout","Button","props","newProps","size","themeTools","additionalButtonProps","innerButton","isLoading","style","leftIcon","innerButtonProps","spinner","textProps","isLoadingText","textDecorationLine","rightIcon","buttonProps","highlight","ref"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { TouchableOpacity, TouchableOpacityProps } from 'react-native';\nimport styled from 'styled-components/native';\nimport { border, color, flexbox, layout, space, position } from 'styled-system';\nimport {\n  customBorder,\n  customBackground,\n  customOutline,\n  customLayout,\n  customExtra,\n  customShadow,\n  customPosition,\n} from '../../../utils/customProps';\nimport Text from '../../primitives/Text';\nimport { usePropsConfig } from '../../../hooks';\nimport { themeTools } from '../../../theme';\nimport Spinner from '../Spinner';\nimport { default as Box, IBoxProps } from '../Box';\nimport Flex from '../Flex';\nimport type { IButtonProps, IButtonGroupProps } from './props';\nimport { useButton } from './useButton';\n\nconst StyledButton = styled(TouchableOpacity)<\n  IButtonProps & TouchableOpacityProps\n>(\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  position,\n  customPosition,\n  customBorder,\n  customBackground,\n  customOutline,\n  customShadow,\n  customExtra,\n  customLayout\n);\nconst Button = (\n  {\n    style,\n    children,\n    highlight,\n    isLoading,\n    isLoadingText,\n    size,\n    leftIcon,\n    rightIcon,\n    spinner,\n    ...props\n  }: IButtonProps & IBoxProps,\n  ref: any\n) => {\n  const newProps = usePropsConfig('Button', {\n    ...props,\n    size,\n  });\n  let [textProps, remainingProps] = themeTools.extractInObject(newProps, [\n    'fontWeight',\n    'fontSize',\n    'textDecorationLine',\n    'color',\n  ]);\n  let [layoutProps, viewProps] = themeTools.extractInObject(remainingProps, [\n    'm',\n    'margin',\n    'mt',\n    'marginTop',\n    'mr',\n    'marginRight',\n    'mb',\n    'marginBottom',\n    'ml',\n    'marginLeft',\n    'mx',\n    'marginX',\n    'my',\n    'marginY',\n    'left',\n    'top',\n    'bottom',\n    'right',\n    'position',\n  ]);\n\n  let [\n    additionalButtonProps,\n    innerButtonProps,\n  ] = themeTools.extractInObject(viewProps, [\n    'accessible',\n    'accessibilityRole',\n    'accessibilityState',\n    'accessibilityLabel',\n    'accessibilityHint',\n    'isDisabled',\n    'onPress',\n  ]);\n\n  additionalButtonProps.isDisabled =\n    additionalButtonProps.isDisabled || isLoading;\n\n  const innerButton = (\n    <Box {...innerButtonProps} opacity={isLoading ? 0.5 : 1} style={style}>\n      {leftIcon ? (\n        <Box mr={innerButtonProps.px / 2 || 2}>{leftIcon}</Box>\n      ) : null}\n      {isLoading ? (\n        <Flex direction=\"row\">\n          {spinner ? spinner : <Spinner color={textProps.color} size=\"sm\" />}\n          <Text {...textProps}>{isLoadingText ? ' ' + isLoadingText : ''}</Text>\n        </Flex>\n      ) : (\n        <Text\n          {...textProps}\n          style={{ textDecorationLine: textProps.textDecorationLine }}\n        >\n          {children}\n        </Text>\n      )}\n      {rightIcon ? (\n        <Box ml={innerButtonProps.px / 2 || 2}>{rightIcon}</Box>\n      ) : null}\n    </Box>\n  );\n\n  const { buttonProps } = useButton(additionalButtonProps, ref);\n  return (\n    <StyledButton\n      activeOpacity={highlight ? highlight : 0.8}\n      ref={ref}\n      {...layoutProps}\n      {...buttonProps}\n    >\n      {innerButton}\n    </StyledButton>\n  );\n};\n\nexport type { IButtonProps, IButtonGroupProps };\nexport { ButtonGroup } from './ButtonGroup';\nexport default forwardRef<any, IButtonProps & IBoxProps>(Button);\n"]},"metadata":{},"sourceType":"script"}